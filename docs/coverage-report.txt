Script started on 2025-07-01 14:21:06+00:00 [COMMAND="bun run test:coverage" TERM="xterm" COLUMNS="80" LINES="-1"]
[0m[2m[35m$[0m [2m[1mbun test --coverage --coverage-reporter=lcov[0m
[0m[1mbun test [0m[2mv1.2.14 (6a363a38)[0m
[0m
test/new-mcp-servers-integration.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[1m112 | [0m        [0m[35mawait[0m insertTestData()[0m[2m;[0m
                    [1m[31m[1m^[0m
[31merror[0m[2m: [0m[1m"await" can only be used inside an "async" function[0m
    [2mat [0m[36m/workspace/banana-bun/test/new-mcp-servers-integration.test.ts[0m[2m:[0m[33m112[0m[2m:[0m[33m15[0m

[1m112 | [0m        [0m[35mawait[0m insertTestData()[0m[2m;[0m
                                    [1m[31m[1m^[0m
[31merror[0m[2m: [0m[1mExpected "=>" but found ";"[0m
    [2mat [0m[36m/workspace/banana-bun/test/new-mcp-servers-integration.test.ts[0m[2m:[0m[33m112[0m[2m:[0m[33m31[0m
[0m[2m-------------------------------[0m

[0m
test/user-behavior-server.test.ts:
[0m[31mUser Behavior server database initialized[0m
[0m[31mUser Behavior MCP server running on stdio[0m
[0m[32m✓[0m [0mUser Behavior Server[2m > [0mTool Registration[2m >[0m[1m should register all required tools[0m [0m[2m[[1m22.11ms[0m[2m][0m
[0m[32m✓[0m [0mUser Behavior Server[2m > [0mTool Registration[2m >[0m[1m should list available tools[0m [0m[2m[0.19ms[0m[2m][0m
[2025-07-01T14:21:06.119Z] INFO: Database initialized successfully 
[0m[32m✓[0m [0mUser Behavior Server[2m > [0mTool Execution[2m >[0m[1m should handle analyze_user_interactions tool[0m [0m[2m[0.15ms[0m[2m][0m
[0m[1m105 |[0m                 SELECT
[0m[1m106 |[0m                     AVG(session_duration_ms) [0m[34mas[0m avg_duration,
[0m[1m107 |[0m                     AVG(total_interactions) [0m[34mas[0m avg_interactions,
[0m[1m108 |[0m                     COUNT(*) [0m[34mas[0m total_sessions
[0m[1m109 |[0m                 FROM user_sessions
[0m[1m110 |[0m             [0m[32m`).get() as any;[0m
                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmockDb.query(`
                SELECT 
                    AVG(session_duration_ms) as avg_duration,
                    AVG(total_interactions) as avg_interactions,
                    COUNT(*) as total_sessions
                FROM user_sessions
            `).get is not a function. (In 'mockDb.query(`
                SELECT 
                    AVG(session_duration_ms) as avg_duration,
                    AVG(total_interactions) as avg_interactions,
                    COUNT(*) as total_sessions
                FROM user_sessions
            `).get()', 'mockDb.query(`
                SELECT 
                    AVG(session_duration_ms) as avg_duration,
                    AVG(total_interactions) as avg_interactions,
                    COUNT(*) as total_sessions
                FROM user_sessions
            `).get' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m110[0m[2m:[33m16[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m103[0m[2m:[33m47[0m[2m)[0m
[0m[31m✗[0m [0mUser Behavior Server[2m > [0mTool Execution[2m >[0m[1m should analyze session patterns[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m[32m✓[0m [0mUser Behavior Server[2m > [0mgenerate_personalization_recommendations[2m >[0m[1m should generate content recommendations[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mUser Behavior Server[2m > [0mgenerate_personalization_recommendations[2m >[0m[1m should generate interface recommendations[0m [0m[2m[0.08ms[0m[2m][0m
[0m[32m✓[0m [0mUser Behavior Server[2m > [0mgenerate_personalization_recommendations[2m >[0m[1m should prioritize recommendations by confidence[0m [0m[2m[0.11ms[0m[2m][0m
[0m[1m187 |[0m         })[0m[2m;[0m
[0m[1m188 |[0m     })[0m[2m;[0m
[0m[1m189 |[0m 
[0m[1m190 |[0m     describe([0m[32m'identify_engagement_opportunities'[0m, () => {
[0m[1m191 |[0m         it([0m[32m'should calculate engagement metrics'[0m, [0m[35masync[0m () => {
[0m[1m192 |[0m             [0m[35mconst[0m totalInteractions = mockDb[0m[3m[1m.query[0m([0m[32m'SELECT COUNT(*) as count FROM user_interactions'[0m)[0m[3m[1m.get[0m() [0m[34mas[0m [0m[34many[0m[0m[2m;[0m
                                                                                                            [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmockDb.query("SELECT COUNT(*) as count FROM user_interactions").get is not a function. (In 'mockDb.query("SELECT COUNT(*) as count FROM user_interactions").get()', 'mockDb.query("SELECT COUNT(*) as count FROM user_interactions").get' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m192[0m[2m:[33m103[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m191[0m[2m:[33m51[0m[2m)[0m
[0m[31m✗[0m [0mUser Behavior Server[2m > [0midentify_engagement_opportunities[2m >[0m[1m should calculate engagement metrics[0m [0m[2m[0.31ms[0m[2m][0m
[0m[0m[32m✓[0m [0mUser Behavior Server[2m > [0midentify_engagement_opportunities[2m >[0m[1m should identify drop-off points[0m [0m[2m[0.25ms[0m[2m][0m
[0m[1m253 |[0m                 SELECT
[0m[1m254 |[0m                     AVG(session_duration_ms) [0m[34mas[0m avg_duration,
[0m[1m255 |[0m                     COUNT(*) / ? [0m[34mas[0m daily_sessions
[0m[1m256 |[0m                 FROM user_sessions
[0m[1m257 |[0m                 WHERE started_at BETWEEN ? AND ?
[0m[1m258 |[0m             [0m[32m`).get(baselineDays, baselineStart.toISOString(), comparisonStart.toISOString()) as any;[0m
                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmockDb.query(`
                SELECT 
                    AVG(session_duration_ms) as avg_duration,
                    COUNT(*) / ? as daily_sessions
                FROM user_sessions 
                WHERE started_at BETWEEN ? AND ?
            `).get is not a function. (In 'mockDb.query(`
                SELECT 
                    AVG(session_duration_ms) as avg_duration,
                    COUNT(*) / ? as daily_sessions
                FROM user_sessions 
                WHERE started_at BETWEEN ? AND ?
            `).get(30, baselineStart.toISOString(), comparisonStart.toISOString())', 'mockDb.query(`
                SELECT 
                    AVG(session_duration_ms) as avg_duration,
                    COUNT(*) / ? as daily_sessions
                FROM user_sessions 
                WHERE started_at BETWEEN ? AND ?
            `).get' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m258[0m[2m:[33m16[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m244[0m[2m:[33m58[0m[2m)[0m
[0m[31m✗[0m [0mUser Behavior Server[2m > [0mtrack_behavior_changes[2m >[0m[1m should compare baseline and recent periods[0m [0m[2m[0.34ms[0m[2m][0m
[0m[0m[32m✓[0m [0mUser Behavior Server[2m > [0mtrack_behavior_changes[2m >[0m[1m should calculate trend analysis[0m [0m[2m[0.19ms[0m[2m][0m
[0m[32m✓[0m [0mUser Behavior Server[2m > [0mpredict_user_needs[2m >[0m[1m should generate predictions with confidence scores[0m [0m[2m[0.23ms[0m[2m][0m
[0m[32m✓[0m [0mUser Behavior Server[2m > [0mpredict_user_needs[2m >[0m[1m should filter predictions by confidence threshold[0m [0m[2m[0.10ms[0m[2m][0m
[0m[32m✓[0m [0mUser Behavior Server[2m > [0mPrivacy and Data Handling[2m >[0m[1m should support anonymized data analysis[0m [0m[2m[0.19ms[0m[2m][0m
[0m[1m399 |[0m             [0m[2m// Count old interactions that should be cleaned up[0m
[0m[1m400 |[0m             [0m[35mconst[0m oldInteractions = mockDb[0m[3m[1m.query[0m([0m[32m`[0m
[0m[1m401 |[0m                 SELECT COUNT(*) [0m[34mas[0m count
[0m[1m402 |[0m                 FROM user_interactions
[0m[1m403 |[0m                 WHERE created_at [0m<[0m ?
[0m[1m404 |[0m             [0m[32m`).get(cutoffDate.toISOString()) as any;[0m
                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmockDb.query(`
                SELECT COUNT(*) as count 
                FROM user_interactions 
                WHERE created_at < ?
            `).get is not a function. (In 'mockDb.query(`
                SELECT COUNT(*) as count 
                FROM user_interactions 
                WHERE created_at < ?
            `).get(cutoffDate.toISOString())', 'mockDb.query(`
                SELECT COUNT(*) as count 
                FROM user_interactions 
                WHERE created_at < ?
            `).get' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m404[0m[2m:[33m16[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m395[0m[2m:[33m53[0m[2m)[0m
[0m[31m✗[0m [0mUser Behavior Server[2m > [0mPrivacy and Data Handling[2m >[0m[1m should handle data retention policies[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[1m415 |[0m                 query: mock(() => {
[0m[1m416 |[0m                     [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Database connection failed'[0m)[0m[2m;[0m
[0m[1m417 |[0m                 })
[0m[1m418 |[0m             }[0m[2m;[0m
[0m[1m419 |[0m 
[0m[1m420 |[0m             mockGetDatabase[0m[3m[1m.mockReturnValue[0m(errorDb)[0m[2m;[0m
                  [31m[1m^[0m
[0m[31mReferenceError[0m[2m:[0m [1mmockGetDatabase is not defined[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m420[0m[2m:[33m13[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m411[0m[2m:[33m56[0m[2m)[0m
[0m[31m✗[0m [0mUser Behavior Server[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[0.16ms[0m[2m][0m
[0m[0m[32m✓[0m [0mUser Behavior Server[2m > [0mError Handling[2m >[0m[1m should handle invalid JSON in interaction data[0m [0m[2m[0.12ms[0m[2m][0m
[0m[1m467 |[0m                     interactionTime[0m[3m[1m.toISOString[0m(),
[0m[1m468 |[0m                     Math[0m[3m[1m.floor[0m(Math[0m[3m[1m.random[0m() * [0m[33m10000[0m) + [0m[33m1000[0m
[0m[1m469 |[0m                 )[0m[2m;[0m
[0m[1m470 |[0m             }
[0m[1m471 |[0m 
[0m[1m472 |[0m             [0m[35mconst[0m totalInteractions = mockDb[0m[3m[1m.query[0m([0m[32m'SELECT COUNT(*) as count FROM user_interactions'[0m)[0m[3m[1m.get[0m() [0m[34mas[0m [0m[34many[0m[0m[2m;[0m
                                                                                                            [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmockDb.query("SELECT COUNT(*) as count FROM user_interactions").get is not a function. (In 'mockDb.query("SELECT COUNT(*) as count FROM user_interactions").get()', 'mockDb.query("SELECT COUNT(*) as count FROM user_interactions").get' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m472[0m[2m:[33m103[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/user-behavior-server.test.ts[0m[2m:[0m[33m450[0m[2m:[33m68[0m[2m)[0m
[0m[31m✗[0m [0mUser Behavior Server[2m > [0mPerformance[2m >[0m[1m should handle large interaction datasets efficiently[0m [0m[2m[2.27ms[0m[2m][0m
[0m[0m
test/banana-summarize-cli.test.ts:
[0m[32m✓[0m [0mparseCliArgs[2m >[0m[1m parses required media id and defaults[0m [0m[2m[0.33ms[0m[2m][0m
[0m[32m✓[0m [0mparseCliArgs[2m >[0m[1m parses optional style[0m [0m[2m[0.07ms[0m[2m][0m
[0m[32m✓[0m [0mparseCliArgs[2m >[0m[1m throws on invalid style[0m [0m[2m[0.09ms[0m[2m][0m
[0m[32m✓[0m [0mparseCliArgs[2m >[0m[1m throws when media id missing[0m [0m[2m[0.06ms[0m[2m][0m
[0m[32m✓[0m [0mparseCliArgs[2m >[0m[1m prints help when requested[0m [0m[2m[0.22ms[0m[2m][0m
[0m[32m✓[0m [0mvalidateMediaExists[2m >[0m[1m detects existing media with transcript[0m [0m[2m[0.55ms[0m[2m][0m
[0m[32m✓[0m [0mvalidateMediaExists[2m >[0m[1m detects media without transcript[0m [0m[2m[0.16ms[0m[2m][0m
[0m[32m✓[0m [0mvalidateMediaExists[2m >[0m[1m handles missing media[0m [0m[2m[0.11ms[0m[2m][0m
[0m[32m✓[0m [0mrunDirectSummarization[2m >[0m[1m outputs summary info[0m [0m[2m[0.44ms[0m[2m][0m
[0m[32m✓[0m [0mrunDirectSummarization[2m >[0m[1m handles failure result[0m [0m[2m[0.26ms[0m[2m][0m
[0m[32m✓[0m [0mcreateSummarizationTask[2m >[0m[1m creates task through executor[0m [0m[2m[0.36ms[0m[2m][0m
[0m
test/media-executor.test.ts:
[0m[32m✓[0m [0mMedia Executor[2m > [0mexecuteMediaIngestTask[2m >[0m[1m should handle missing file gracefully[0m [0m[2m[1.26ms[0m[2m][0m
[0m[32m✓[0m [0mMedia Executor[2m > [0mexecuteMediaIngestTask[2m >[0m[1m should handle file size limit exceeded[0m [0m[2m[0.28ms[0m[2m][0m
[0m[32m✓[0m [0mMedia Executor[2m > [0mexecuteMediaIngestTask[2m >[0m[1m should skip processing if file already exists (deduplication)[0m [0m[2m[0.35ms[0m[2m][0m
[0m[1m228 |[0m                 force: [0m[33mtrue[0m
[0m[1m229 |[0m             }[0m[2m;[0m
[0m[1m230 |[0m 
[0m[1m231 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m executeMediaIngestTask(forceTask)[0m[2m;[0m
[0m[1m232 |[0m 
[0m[1m233 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31mfalse[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/media-executor.test.ts[0m[2m:[0m[33m233[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mMedia Executor[2m > [0mexecuteMediaIngestTask[2m >[0m[1m should process file when force flag is set[0m [0m[2m[1.02ms[0m[2m][0m
[0m[0m[32m✓[0m [0mMedia Executor[2m > [0mMedia file validation[2m >[0m[1m should validate task structure[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mMedia Executor[2m > [0mMedia file validation[2m >[0m[1m should handle optional fields[0m [0m[2m[0.05ms[0m[2m][0m
[0m
test/scheduler.test.ts:
[0m[1m20 |[0m                     [0m[32m'0 0 1 * *'[0m,     [0m[2m// First day of month[0m
[0m[1m21 |[0m                     [0m[32m'0 0 * * 0'[0m      [0m[2m// Every Sunday[0m
[0m[1m22 |[0m                 ][0m[2m;[0m
[0m[1m23 |[0m 
[0m[1m24 |[0m                 validExpressions[0m[3m[1m.forEach[0m(expr => {
[0m[1m25 |[0m                     expect(() => parser[0m[3m[1m.parse[0m(expr)).not[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                              [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mnot[2m.[0mtoThrow[2m([0m[2m)[0m

Error name: [31m"TypeError"[0m
Error message: [31m"parser.parse is not a function. (In 'parser.parse(expr)', 'parser.parse' is undefined)"[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m25[0m[2m:[33m58[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mforEach[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m24[0m[2m:[33m34[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mCron Expression Parsing[2m >[0m[1m should parse valid cron expressions[0m [0m[2m[0.21ms[0m[2m][0m
[0m[0m[32m✓[0m [0mScheduler System[2m > [0mCronParser[2m > [0mCron Expression Parsing[2m >[0m[1m should reject invalid cron expressions[0m [0m[2m[0.09ms[0m[2m][0m
[0m[1m43 |[0m 
[0m[1m44 |[0m             it([0m[32m'should calculate next execution time correctly'[0m, () => {
[0m[1m45 |[0m                 [0m[35mconst[0m now = [0m[35mnew[0m [0m[1mDate[0m([0m[32m'2024-01-01T10:00:00Z'[0m)[0m[2m;[0m
[0m[1m46 |[0m 
[0m[1m47 |[0m                 [0m[2m// Every hour at minute 0[0m
[0m[1m48 |[0m                 [0m[35mconst[0m nextHour = parser[0m[3m[1m.getNextExecution[0m([0m[32m'0 * * * *'[0m, now)[0m[2m;[0m
                                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mparser.getNextExecution is not a function. (In 'parser.getNextExecution("0 * * * *", now)', 'parser.getNextExecution' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m48[0m[2m:[33m41[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mCron Expression Parsing[2m >[0m[1m should calculate next execution time correctly[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[1m58 |[0m 
[0m[1m59 |[0m             it([0m[32m'should handle timezone considerations'[0m, () => {
[0m[1m60 |[0m                 [0m[35mconst[0m now = [0m[35mnew[0m [0m[1mDate[0m([0m[32m'2024-01-01T10:00:00Z'[0m)[0m[2m;[0m
[0m[1m61 |[0m                 [0m[35mconst[0m timezone = [0m[32m'America/New_York'[0m[0m[2m;[0m
[0m[1m62 |[0m 
[0m[1m63 |[0m                 [0m[35mconst[0m nextExecution = parser[0m[3m[1m.getNextExecution[0m([0m[32m'0 9 * * *'[0m, now, timezone)[0m[2m;[0m
                                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mparser.getNextExecution is not a function. (In 'parser.getNextExecution("0 9 * * *", now, "America/New_York")', 'parser.getNextExecution' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m63[0m[2m:[33m46[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mCron Expression Parsing[2m >[0m[1m should handle timezone considerations[0m [0m[2m[0.06ms[0m[2m][0m
[0m[0m[1m68 |[0m         describe([0m[32m'Special Cron Expressions'[0m, () => {
[0m[1m69 |[0m             it([0m[32m'should handle @yearly, @monthly, @weekly, @daily shortcuts'[0m, () => {
[0m[1m70 |[0m                 [0m[35mconst[0m shortcuts = [[0m[32m'@yearly'[0m, [0m[32m'@monthly'[0m, [0m[32m'@weekly'[0m, [0m[32m'@daily'[0m, [0m[32m'@hourly'[0m][0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m                 shortcuts[0m[3m[1m.forEach[0m(shortcut => {
[0m[1m73 |[0m                     expect(() => parser[0m[3m[1m.parse[0m(shortcut)).not[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                                  [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mnot[2m.[0mtoThrow[2m([0m[2m)[0m

Error name: [31m"TypeError"[0m
Error message: [31m"parser.parse is not a function. (In 'parser.parse(shortcut)', 'parser.parse' is undefined)"[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m73[0m[2m:[33m62[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mforEach[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m72[0m[2m:[33m27[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mSpecial Cron Expressions[2m >[0m[1m should handle @yearly, @monthly, @weekly, @daily shortcuts[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[1m73 |[0m                     expect(() => parser[0m[3m[1m.parse[0m(shortcut)).not[0m[3m[1m.toThrow[0m()[0m[2m;[0m
[0m[1m74 |[0m                 })[0m[2m;[0m
[0m[1m75 |[0m             })[0m[2m;[0m
[0m[1m76 |[0m 
[0m[1m77 |[0m             it([0m[32m'should convert shortcuts to standard cron format'[0m, () => {
[0m[1m78 |[0m                 expect(parser[0m[3m[1m.parse[0m([0m[32m'@daily'[0m))[0m[3m[1m.toBe[0m([0m[32m'0 0 * * *'[0m)[0m[2m;[0m
                                   [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mparser.parse is not a function. (In 'parser.parse("@daily")', 'parser.parse' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m78[0m[2m:[33m31[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mSpecial Cron Expressions[2m >[0m[1m should convert shortcuts to standard cron format[0m [0m[2m[0.05ms[0m[2m][0m
[0m[0m[1m90 |[0m         [0m[35mif[0m (!nextRun) {
[0m[1m91 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Could not calculate next execution time for cron expression'[0m)[0m[2m;[0m
[0m[1m92 |[0m         }
[0m[1m93 |[0m 
[0m[1m94 |[0m         [0m[2m// Insert schedule[0m
[0m[1m95 |[0m         [0m[35mconst[0m insertStmt = [0m[33mthis[0m.db[0m[3m[1m.prepare[0m([0m[32m`[0m
                                        [31m[1m^[0m
[0m[31mSQLiteError[0m[2m:[0m [1mtable task_schedules has no column named template_task_id[0m
      errno[0m[2m:[0m [0m[33m1[0m[0m[2m,[0m
 byteOffset[0m[2m:[0m [0m[33m-1[0m[0m[2m,[0m

[0m      [2mat [0m[0m[1m[3mprepare[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m307[0m[2m:[33m37[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m95[0m[2m:[33m36[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m71[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m169[0m[2m:[33m52[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m161[0m[2m:[33m71[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Creation[2m >[0m[1m should create a new schedule for a task[0m [0m[2m[[1m12.16ms[0m[2m][0m
[0m[0m[1m90 |[0m         [0m[35mif[0m (!nextRun) {
[0m[1m91 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Could not calculate next execution time for cron expression'[0m)[0m[2m;[0m
[0m[1m92 |[0m         }
[0m[1m93 |[0m 
[0m[1m94 |[0m         [0m[2m// Insert schedule[0m
[0m[1m95 |[0m         [0m[35mconst[0m insertStmt = [0m[33mthis[0m.db[0m[3m[1m.prepare[0m([0m[32m`[0m
                                        [31m[1m^[0m
[0m[31mSQLiteError[0m[2m:[0m [1mtable task_schedules has no column named template_task_id[0m
      errno[0m[2m:[0m [0m[33m1[0m[0m[2m,[0m
 byteOffset[0m[2m:[0m [0m[33m-1[0m[0m[2m,[0m

[0m      [2mat [0m[0m[1m[3mprepare[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m307[0m[2m:[33m37[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m95[0m[2m:[33m36[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m71[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m189[0m[2m:[33m52[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m182[0m[2m:[33m85[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Creation[2m >[0m[1m should set next execution time when creating schedule[0m [0m[2m[5.04ms[0m[2m][0m
[0m[0m[1m90 |[0m         [0m[35mif[0m (!nextRun) {
[0m[1m91 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Could not calculate next execution time for cron expression'[0m)[0m[2m;[0m
[0m[1m92 |[0m         }
[0m[1m93 |[0m 
[0m[1m94 |[0m         [0m[2m// Insert schedule[0m
[0m[1m95 |[0m         [0m[35mconst[0m insertStmt = [0m[33mthis[0m.db[0m[3m[1m.prepare[0m([0m[32m`[0m
                                        [31m[1m^[0m
[0m[31mSQLiteError[0m[2m:[0m [1mtable task_schedules has no column named template_task_id[0m
      errno[0m[2m:[0m [0m[33m1[0m[0m[2m,[0m
 byteOffset[0m[2m:[0m [0m[33m-1[0m[0m[2m,[0m

[0m      [2mat [0m[0m[1m[3mprepare[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m307[0m[2m:[33m37[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m95[0m[2m:[33m36[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m71[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m209[0m[2m:[33m52[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m196[0m[2m:[33m62[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Creation[2m >[0m[1m should handle schedule options[0m [0m[2m[0.54ms[0m[2m][0m
[0m[0m[1m90 |[0m         [0m[35mif[0m (!nextRun) {
[0m[1m91 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Could not calculate next execution time for cron expression'[0m)[0m[2m;[0m
[0m[1m92 |[0m         }
[0m[1m93 |[0m 
[0m[1m94 |[0m         [0m[2m// Insert schedule[0m
[0m[1m95 |[0m         [0m[35mconst[0m insertStmt = [0m[33mthis[0m.db[0m[3m[1m.prepare[0m([0m[32m`[0m
                                        [31m[1m^[0m
[0m[31mSQLiteError[0m[2m:[0m [1mtable task_schedules has no column named template_task_id[0m
      errno[0m[2m:[0m [0m[33m1[0m[0m[2m,[0m
 byteOffset[0m[2m:[0m [0m[33m-1[0m[0m[2m,[0m

[0m      [2mat [0m[0m[1m[3mprepare[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m307[0m[2m:[33m37[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m95[0m[2m:[33m36[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m71[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m228[0m[2m:[33m46[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m221[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should enable and disable schedules[0m [0m[2m[[0m[33m106166.57ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should enable and disable schedules[0m
[0m[0m[1m90 |[0m         [0m[35mif[0m (!nextRun) {
[0m[1m91 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Could not calculate next execution time for cron expression'[0m)[0m[2m;[0m
[0m[1m92 |[0m         }
[0m[1m93 |[0m 
[0m[1m94 |[0m         [0m[2m// Insert schedule[0m
[0m[1m95 |[0m         [0m[35mconst[0m insertStmt = [0m[33mthis[0m.db[0m[3m[1m.prepare[0m([0m[32m`[0m
                                        [31m[1m^[0m
[0m[31mSQLiteError[0m[2m:[0m [1mtable task_schedules has no column named template_task_id[0m
      errno[0m[2m:[0m [0m[33m1[0m[0m[2m,[0m
 byteOffset[0m[2m:[0m [0m[33m-1[0m[0m[2m,[0m

[0m      [2mat [0m[0m[1m[3mprepare[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m307[0m[2m:[33m37[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m95[0m[2m:[33m36[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m71[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m228[0m[2m:[33m46[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m221[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should delete schedules[0m [0m[2m[[0m[33m106172.43ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should delete schedules[0m
[0m[0m[1m90 |[0m         [0m[35mif[0m (!nextRun) {
[0m[1m91 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Could not calculate next execution time for cron expression'[0m)[0m[2m;[0m
[0m[1m92 |[0m         }
[0m[1m93 |[0m 
[0m[1m94 |[0m         [0m[2m// Insert schedule[0m
[0m[1m95 |[0m         [0m[35mconst[0m insertStmt = [0m[33mthis[0m.db[0m[3m[1m.prepare[0m([0m[32m`[0m
                                        [31m[1m^[0m
[0m[31mSQLiteError[0m[2m:[0m [1mtable task_schedules has no column named template_task_id[0m
      errno[0m[2m:[0m [0m[33m1[0m[0m[2m,[0m
 byteOffset[0m[2m:[0m [0m[33m-1[0m[0m[2m,[0m

[0m      [2mat [0m[0m[1m[3mprepare[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m307[0m[2m:[33m37[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m95[0m[2m:[33m36[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m71[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m228[0m[2m:[33m46[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m221[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should update schedule cron expression[0m [0m[2m[[0m[33m106178.25ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m >[0m[1m `K  pdate schedule cron expression[0m
[0m[0m[1m267 |[0m                     INSERT INTO task_schedules (task_id, cron_expression, next_execution, enabled)
[0m[1m268 |[0m                     VALUES ([0m[33m1[0m, [0m[32m'* * * * *'[0m, ?, [0m[33m1[0m)
[0m[1m269 |[0m                 [0m[32m`, [pastTime]);[0m
[0m[1m270 |[0m 
[0m[1m271 |[0m                 [0m[35mconst[0m dueSchedules = scheduler[0m[3m[1m.getDueSchedules[0m()[0m[2m;[0m
[0m[1m272 |[0m                 expect(dueSchedules.length)[0m[3m[1m.toBe[0m([0m[33m1[0m)[0m[2m;[0m
                                                  [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32m1[0m
Received: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m272[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m258[0m[2m:[33m61[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Execution[2m >[0m[1m should identify due schedules[0m [0m[2m[0.41ms[0m[2m][0m
[0m[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m466 |[0m      * Get all schedules that are due [0m[35mfor[0m execution
[0m[1m467 |[0m      */
[0m[1m468 |[0m     [0m[35masync[0m getDueSchedules(): Promise[0m<[0mSchedule[]> {
[0m[1m469 |[0m         [0m[35mconst[0m now = [0m[35mnew[0m [0m[1mDate[0m()[0m[3m[1m.toISOString[0m()[0m[2m;[0m
[0m[1m470 |[0m 
[0m[1m471 |[0m         [0m[35mconst[0m schedules = [0m[33mthis[0m.db[0m[3m[1m.prepare[0m([0m[32m`[0m
                                        [31m[1m^[0m
[0m[31mSQLiteError[0m[2m:[0m [1mno such column: template_task_id[0m
      errno[0m[2m:[0m [0m[33m1[0m[0m[2m,[0m
 byteOffset[0m[2m:[0m [0m[33m56[0m[0m[2m,[0m

[0m      [2mat [0m[0m[1m[3mprepare[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m307[0m[2m:[33m37[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mgetDueSchedules[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m471[0m[2m:[33m35[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mgetDueSchedules[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m468[0m[2m:[33m50[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m271[0m[2m:[33m48[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m258[0m[2m:[33m61[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m267 |[0m                     INSERT INTO task_schedules (task_id, cron_expression, next_execution, enabled)
[0m[1m268 |[0m                     VALUES ([0m[33m1[0m, [0m[32m'* * * * *'[0m, ?, [0m[33m1[0m)
[0m[1m269 |[0m                 [0m[32m`, [pastTime]);[0m
[0m[1m270 |[0m 
[0m[1m271 |[0m                 [0m[35mconst[0m dueSchedules = scheduler[0m[3m[1m.getDueSchedules[0m()[0m[2m;[0m
[0m[1m272 |[0m                 expect(dueSchedules.length)[0m[3m[1m.toBe[0m([0m[33m1[0m)[0m[2m;[0m
                                                  [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32m1[0m
Received: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m272[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m258[0m[2m:[33m61[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m[1m90 |[0m         [0m[35mif[0m (!nextRun) {
[0m[1m91 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Could not calculate next execution time for cron expression'[0m)[0m[2m;[0m
[0m[1m92 |[0m         }
[0m[1m93 |[0m 
[0m[1m94 |[0m         [0m[2m// Insert schedule[0m
[0m[1m95 |[0m         [0m[35mconst[0m insertStmt = [0m[33mthis[0m.db[0m[3m[1m.prepare[0m([0m[32m`[0m
                                        [31m[1m^[0m
[0m[31mSQLiteError[0m[2m:[0m [1mtable task_schedules has no column named template_task_id[0m
      errno[0m[2m:[0m [0m[33m1[0m[0m[2m,[0m
 byteOffset[0m[2m:[0m [0m[33m-1[0m[0m[2m,[0m

[0m      [2mat [0m[0m[1m[3mprepare[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m307[0m[2m:[33m37[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m95[0m[2m:[33m36[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mcreateSchedule[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m71[0m[2m:[33m26[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m283[0m[2m:[33m52[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/scheduler.test.ts[0m[2m:[0m[33m276[0m[2m:[33m62[0m[2m)[0m
[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Execution[2m >[0m[1m should handle overlap policies[0m [0m[2m[0.35ms[0m[2m][0m
[0m[0m[32m✓[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mScheduler Lifecycle[2m >[0m[1m should start and stop scheduler[0m [0m[2m[0.18ms[0m[2m][0m
[0m[32m✓[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mScheduler Lifecycle[2m >[0m[1m should handle multiple start/stop calls[0m [0m[2m[0.04ms[0m[2m][0m
[0m
test/tool-runner.test.ts:
[0m[1m575 |[0m [0m[2m// Tool runner class[0m
[0m[1m576 |[0m [0m[35mexport[0m [0m[35mclass[0m ToolRunner {
[0m[1m577 |[0m     [0m[35masync[0m executeTool(toolName: ToolName, args: [0m[34many[0m): Promise[0m<[0m[0m[34many[0m> {
[0m[1m578 |[0m         [0m[35mconst[0m tool = tools[toolName][0m[2m;[0m
[0m[1m579 |[0m         [0m[35mif[0m (!tool) {
[0m[1m580 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Unknown tool: [0m${toolName}[0m[32m`[0m)[0m[2m;[0m
                        [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mUnknown tool: shell[0m
[0m      [2mat [0m[0m[1m[3mexecuteTool[0m[2m ([0m[0m[36m/workspace/banana-bun/src/tools/tool_runner.ts[0m[2m:[0m[33m580[0m[2m:[33m19[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mexecuteTool[0m[2m ([0m[0m[36m/workspace/banana-bun/src/tools/tool_runner.ts[0m[2m:[0m[33m577[0m[2m:[33m23[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m79[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m78[0m[2m:[33m45[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mTool Execution[2m >[0m[1m should execute shell commands[0m [0m[2m[0.55ms[0m[2m][0m
[0m[0m[32m✓[0m [0mToolRunner[2m > [0mTool Execution[2m >[0m[1m should handle unknown tools[0m [0m[2m[0.10ms[0m[2m][0m
[0m[1m575 |[0m [0m[2m// Tool runner class[0m
[0m[1m576 |[0m [0m[35mexport[0m [0m[35mclass[0m ToolRunner {
[0m[1m577 |[0m     [0m[35masync[0m executeTool(toolName: ToolName, args: [0m[34many[0m): Promise[0m<[0m[0m[34many[0m> {
[0m[1m578 |[0m         [0m[35mconst[0m tool = tools[toolName][0m[2m;[0m
[0m[1m579 |[0m         [0m[35mif[0m (!tool) {
[0m[1m580 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Unknown tool: [0m${toolName}[0m[32m`[0m)[0m[2m;[0m
                        [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mUnknown tool: shell[0m
[0m      [2mat [0m[0m[1m[3mexecuteTool[0m[2m ([0m[0m[36m/workspace/banana-bun/src/tools/tool_runner.ts[0m[2m:[0m[33m580[0m[2m:[33m19[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mexecuteTool[0m[2m ([0m[0m[36m/workspace/banana-bun/src/tools/tool_runner.ts[0m[2m:[0m[33m577[0m[2m:[33m23[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m98[0m[2m:[33m30[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m97[0m[2m:[33m41[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mTool Execution[2m >[0m[1m should log tool execution[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[1m112 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Command failed'[0m)[0m[2m;[0m
[0m[1m113 |[0m             })[0m[2m;[0m
[0m[1m114 |[0m 
[0m[1m115 |[0m             [0m[35mawait[0m expect(
[0m[1m116 |[0m                 toolRunner[0m[3m[1m.executeTool[0m([0m[32m'shell'[0m, { command: [0m[32m'invalid_command'[0m })
[0m[1m117 |[0m             ).rejects[0m[3m[1m.toThrow[0m([0m[32m'Command failed'[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoThrow[2m([0m[32mexpected[0m[2m)[0m

Expected substring: [32m"Command failed"[0m
Received message: [31m"Unknown tool: shell"[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m117[0m[2m:[33m23[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m110[0m[2m:[33m51[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mTool Execution[2m >[0m[1m should handle tool execution errors[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[1m124 |[0m     })[0m[2m;[0m
[0m[1m125 |[0m 
[0m[1m126 |[0m     describe([0m[32m'Individual Tools'[0m, () => {
[0m[1m127 |[0m         describe([0m[32m'shell tool'[0m, () => {
[0m[1m128 |[0m             it([0m[32m'should execute shell commands'[0m, [0m[35masync[0m () => {
[0m[1m129 |[0m                 [0m[35mconst[0m result = [0m[35mawait[0m tools[0m[3m[1m.shell[0m({ command: [0m[32m'echo test'[0m })[0m[2m;[0m
                                           [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.shell')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m129[0m[2m:[33m38[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m128[0m[2m:[33m61[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mshell tool[2m >[0m[1m should execute shell commands[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[1m149 |[0m                     }),
[0m[1m150 |[0m                     exited: Promise[0m[3m[1m.resolve[0m([0m[33m1[0m)
[0m[1m151 |[0m                 }))[0m[2m;[0m
[0m[1m152 |[0m 
[0m[1m153 |[0m                 [0m[35mawait[0m expect(
[0m[1m154 |[0m                     tools[0m[3m[1m.shell[0m({ command: [0m[32m'invalid_command'[0m })
                          [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.shell')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m154[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m139[0m[2m:[33m60[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mshell tool[2m >[0m[1m should handle command errors[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[1m159 |[0m         describe([0m[32m'file_read tool'[0m, () => {
[0m[1m160 |[0m             it([0m[32m'should read files'[0m, [0m[35masync[0m () => {
[0m[1m161 |[0m                 [0m[35mconst[0m testFile = [0m[32m`[0m${mockConfig.paths.outputs}[0m[32m/test.txt`[0m[0m[2m;[0m
[0m[1m162 |[0m                 [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m(testFile, [0m[32m'Test content'[0m)[0m[2m;[0m
[0m[1m163 |[0m 
[0m[1m164 |[0m                 [0m[35mconst[0m result = [0m[35mawait[0m tools[0m[3m[1m.file_read[0m({ path: testFile })[0m[2m;[0m
                                           [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.file_read')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m164[0m[2m:[33m38[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_read tool[2m >[0m[1m should read files[0m [0m[2m[0.30ms[0m[2m][0m
[0m[0m[1m166 |[0m                 expect(result.content)[0m[3m[1m.toBe[0m([0m[32m'Test content'[0m)[0m[2m;[0m
[0m[1m167 |[0m             })[0m[2m;[0m
[0m[1m168 |[0m 
[0m[1m169 |[0m             it([0m[32m'should handle missing files'[0m, [0m[35masync[0m () => {
[0m[1m170 |[0m                 [0m[35mawait[0m expect(
[0m[1m171 |[0m                     tools[0m[3m[1m.file_read[0m({ path: [0m[32m'/nonexistent/file.txt'[0m })
                          [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.file_read')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m171[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m169[0m[2m:[33m59[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_read tool[2m >[0m[1m should handle missing files[0m [0m[2m[0.15ms[0m[2m][0m
[0m[0m[1m176 |[0m         describe([0m[32m'file_write tool'[0m, () => {
[0m[1m177 |[0m             it([0m[32m'should write files'[0m, [0m[35masync[0m () => {
[0m[1m178 |[0m                 [0m[35mconst[0m testFile = [0m[32m`[0m${mockConfig.paths.outputs}[0m[32m/write_test.txt`[0m[0m[2m;[0m
[0m[1m179 |[0m                 [0m[35mconst[0m content = [0m[32m'Test write content'[0m[0m[2m;[0m
[0m[1m180 |[0m 
[0m[1m181 |[0m                 [0m[35mconst[0m result = [0m[35mawait[0m tools[0m[3m[1m.file_write[0m({
                                           [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.file_write')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m181[0m[2m:[33m38[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m177[0m[2m:[33m50[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_write tool[2m >[0m[1m should write files[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m[1m192 |[0m             })[0m[2m;[0m
[0m[1m193 |[0m 
[0m[1m194 |[0m             it([0m[32m'should create directories if needed'[0m, [0m[35masync[0m () => {
[0m[1m195 |[0m                 [0m[35mconst[0m testFile = [0m[32m`[0m${mockConfig.paths.outputs}[0m[32m/subdir/test.txt`[0m[0m[2m;[0m
[0m[1m196 |[0m 
[0m[1m197 |[0m                 [0m[35mconst[0m result = [0m[35mawait[0m tools[0m[3m[1m.file_write[0m({
                                           [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.file_write')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m197[0m[2m:[33m38[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m194[0m[2m:[33m67[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_write tool[2m >[0m[1m should create directories if needed[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[1m211 |[0m             it([0m[32m'should list directory contents'[0m, [0m[35masync[0m () => {
[0m[1m212 |[0m                 [0m[2m// Create test files[0m
[0m[1m213 |[0m                 [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m([0m[32m`[0m${mockConfig.paths.outputs}[0m[32m/file1.txt`[0m, [0m[32m'content1'[0m)[0m[2m;[0m
[0m[1m214 |[0m                 [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m([0m[32m`[0m${mockConfig.paths.outputs}[0m[32m/file2.txt`[0m, [0m[32m'content2'[0m)[0m[2m;[0m
[0m[1m215 |[0m 
[0m[1m216 |[0m                 [0m[35mconst[0m result = [0m[35mawait[0m tools[0m[3m[1m.file_list[0m({
                                           [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.file_list')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m216[0m[2m:[33m38[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_list tool[2m >[0m[1m should list directory contents[0m [0m[2m[0.42ms[0m[2m][0m
[0m[0m[1m223 |[0m 
[0m[1m224 |[0m             it([0m[32m'should handle empty directories'[0m, [0m[35masync[0m () => {
[0m[1m225 |[0m                 [0m[35mconst[0m emptyDir = [0m[32m`[0m${mockConfig.paths.outputs}[0m[32m/empty`[0m[0m[2m;[0m
[0m[1m226 |[0m                 [0m[35mawait[0m fs[0m[3m[1m.mkdir[0m(emptyDir, { recursive: [0m[33mtrue[0m })[0m[2m;[0m
[0m[1m227 |[0m 
[0m[1m228 |[0m                 [0m[35mconst[0m result = [0m[35mawait[0m tools[0m[3m[1m.file_list[0m({ path: emptyDir })[0m[2m;[0m
                                           [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.file_list')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m228[0m[2m:[33m38[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_list tool[2m >[0m[1m should handle empty directories[0m [0m[2m[0.34ms[0m[2m][0m
[0m[0m[1m238 |[0m                 [0m[35mawait[0m fs[0m[3m[1m.mkdir[0m(scriptDir, { recursive: [0m[33mtrue[0m })[0m[2m;[0m
[0m[1m239 |[0m                 [0m[35mconst[0m scriptPath = [0m[32m`[0m${scriptDir}[0m[32m/test.sh`[0m[0m[2m;[0m
[0m[1m240 |[0m                 [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m(scriptPath, [0m[32m'#!/bin/bash\necho "Script output"'[0m)[0m[2m;[0m
[0m[1m241 |[0m                 [0m[35mawait[0m fs[0m[3m[1m.chmod[0m(scriptPath, [0m[33m0o755[0m)[0m[2m;[0m
[0m[1m242 |[0m 
[0m[1m243 |[0m                 [0m[35mconst[0m result = [0m[35mawait[0m tools[0m[3m[1m.run_script[0m({
                                           [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.run_script')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m243[0m[2m:[33m38[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mrun_script tool[2m >[0m[1m should execute scripts[0m [0m[2m[0.50ms[0m[2m][0m
[0m[0m[1m256 |[0m     })[0m[2m;[0m
[0m[1m257 |[0m 
[0m[1m258 |[0m     describe([0m[32m'Error Handling'[0m, () => {
[0m[1m259 |[0m         it([0m[32m'should handle file system errors'[0m, [0m[35masync[0m () => {
[0m[1m260 |[0m             [0m[35mawait[0m expect(
[0m[1m261 |[0m                 tools[0m[3m[1m.file_read[0m({ path: [0m[32m'/root/protected_file.txt'[0m })
                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.file_read')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m261[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m259[0m[2m:[33m48[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mError Handling[2m >[0m[1m should handle file system errors[0m [0m[2m[0.14ms[0m[2m][0m
[0m[0m[1m262 |[0m             ).rejects[0m[3m[1m.toThrow[0m()[0m[2m;[0m
[0m[1m263 |[0m         })[0m[2m;[0m
[0m[1m264 |[0m 
[0m[1m265 |[0m         it([0m[32m'should handle invalid tool arguments'[0m, [0m[35masync[0m () => {
[0m[1m266 |[0m             [0m[35mawait[0m expect(
[0m[1m267 |[0m                 tools[0m[3m[1m.shell[0m({}) [0m[2m// Missing required command[0m
                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.shell')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m267[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m265[0m[2m:[33m52[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mError Handling[2m >[0m[1m should handle invalid tool arguments[0m [0m[2m[0.13ms[0m[2m][0m
[0m[0m[1m272 |[0m             mockSpawn[0m[3m[1m.mockImplementationOnce[0m(() => {
[0m[1m273 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Spawn failed'[0m)[0m[2m;[0m
[0m[1m274 |[0m             })[0m[2m;[0m
[0m[1m275 |[0m 
[0m[1m276 |[0m             [0m[35mawait[0m expect(
[0m[1m277 |[0m                 tools[0m[3m[1m.shell[0m({ command: [0m[32m'test'[0m })
                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'tools.shell')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m277[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m271[0m[2m:[33m42[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mError Handling[2m >[0m[1m should handle spawn errors[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[1m288 |[0m                 [0m[32m'file_list'[0m,
[0m[1m289 |[0m                 [0m[32m'run_script'[0m
[0m[1m290 |[0m             ][0m[2m;[0m
[0m[1m291 |[0m 
[0m[1m292 |[0m             expectedTools[0m[3m[1m.forEach[0m(toolName => {
[0m[1m293 |[0m                 expect(tools)[0m[3m[1m.toHaveProperty[0m(toolName)[0m[2m;[0m
                                    [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveProperty[2m([0m[32mpath[0m[2m)[0m

Expected path: [32m"shell"[0m

Unable to find property
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m293[0m[2m:[33m31[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mforEach[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m292[0m[2m:[33m27[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mTool Registration[2m >[0m[1m should have all expected tools registered[0m [0m[2m[1.11ms[0m[2m][0m
[0m[0m[1m295 |[0m             })[0m[2m;[0m
[0m[1m296 |[0m         })[0m[2m;[0m
[0m[1m297 |[0m 
[0m[1m298 |[0m         it([0m[32m'should validate tool function signatures'[0m, () => {
[0m[1m299 |[0m             [0m[2m// Each tool should be a function that accepts an object parameter[0m
[0m[1m300 |[0m             Object[0m[3m[1m.values[0m(tools)[0m[3m[1m.forEach[0m(tool => {
                         [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mObject.values requires that input parameter not be null or undefined[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m300[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mTool Registration[2m >[0m[1m should validate tool function signatures[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[1m575 |[0m [0m[2m// Tool runner class[0m
[0m[1m576 |[0m [0m[35mexport[0m [0m[35mclass[0m ToolRunner {
[0m[1m577 |[0m     [0m[35masync[0m executeTool(toolName: ToolName, args: [0m[34many[0m): Promise[0m<[0m[0m[34many[0m> {
[0m[1m578 |[0m         [0m[35mconst[0m tool = tools[toolName][0m[2m;[0m
[0m[1m579 |[0m         [0m[35mif[0m (!tool) {
[0m[1m580 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Unknown tool: [0m${toolName}[0m[32m`[0m)[0m[2m;[0m
                        [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mUnknown tool: file_write[0m
[0m      [2mat [0m[0m[1m[3mexecuteTool[0m[2m ([0m[0m[36m/workspace/banana-bun/src/tools/tool_runner.ts[0m[2m:[0m[33m580[0m[2m:[33m19[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mexecuteTool[0m[2m ([0m[0m[36m/workspace/banana-bun/src/tools/tool_runner.ts[0m[2m:[0m[33m577[0m[2m:[33m23[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m314[0m[2m:[33m30[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m308[0m[2m:[33m46[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIntegration[2m >[0m[1m should handle complex workflow[0m [0m[2m[0.34ms[0m[2m][0m
[0m[0m[1m575 |[0m [0m[2m// Tool runner class[0m
[0m[1m576 |[0m [0m[35mexport[0m [0m[35mclass[0m ToolRunner {
[0m[1m577 |[0m     [0m[35masync[0m executeTool(toolName: ToolName, args: [0m[34many[0m): Promise[0m<[0m[0m[34many[0m> {
[0m[1m578 |[0m         [0m[35mconst[0m tool = tools[toolName][0m[2m;[0m
[0m[1m579 |[0m         [0m[35mif[0m (!tool) {
[0m[1m580 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Unknown tool: [0m${toolName}[0m[32m`[0m)[0m[2m;[0m
                        [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mUnknown tool: shell[0m
[0m      [2mat [0m[0m[1m[3mexecuteTool[0m[2m ([0m[0m[36m/workspace/banana-bun/src/tools/tool_runner.ts[0m[2m:[0m[33m580[0m[2m:[33m19[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mexecuteTool[0m[2m ([0m[0m[36m/workspace/banana-bun/src/tools/tool_runner.ts[0m[2m:[0m[33m577[0m[2m:[33m23[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m335[0m[2m:[33m30[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/tool-runner.test.ts[0m[2m:[0m[33m334[0m[2m:[33m51[0m[2m)[0m
[0m[31m✗[0m [0mToolRunner[2m > [0mIntegration[2m >[0m[1m should maintain tool execution logs[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m
test/database.test.ts:
[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should initialize database with required tables[0m [0m[2m[[0m[33m106233.85ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should initialize database with required tables[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should create proper indexes[0m [0m[2m[[0m[33m106234.02ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should create proper indexes[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should have proper tasks table schema[0m [0m[2m[[0m[33m106234.08ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m @K  ave proper tasks table schema[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should insert and retrieve tasks[0m [0m[2m[[0m[33m106234.16ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should insert and retrieve tasks[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should update task status[0m [0m[2m[[0m[33m106234.25ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should update task status[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should handle task completion[0m [0m[2m[[0m[33m106234.29ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should handle task completion[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should handle task errors[0m [0m[2m[[0m[33m106234.40ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should handle task errors[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should query tasks by status[0m [0m[2m[[0m[33m106234.54ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m  K  uery tasks by status[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should add and retrieve dependencies[0m [0m[2m[[0m[33m106234.63ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should add and retrieve dependencies[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should get task dependents[0m [0m[2m[[0m[33m106234.71ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should get task dependents[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should resolve dependencies with task details[0m [0m[2m[[0m[33m106234.84ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should resolve dependencies with task details[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - all completed[0m [0m[2m[[0m[33m106234.91ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - all completed[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - some pending[0m [0m[2m[[0m[33m106234.99ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - some pending[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - error case[0m [0m[2m[[0m[33m106235.04ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - error case[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should handle no dependencies[0m [0m[2m[[0m[33m106235.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should handle no dependencies[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should remove dependencies[0m [0m[2m[[0m[33m106235.19ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m K  emove dependencies[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mMedia Table Operations[2m >[0m[1m should insert and retrieve media records[0m [0m[2m[[0m[33m106235.28ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mMedia Table Operations[2m >[0m[1m should insert and retrieve media records[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mMedia Table Operations[2m >[0m[1m should handle duplicate video_id constraint[0m [0m[2m[[0m[33m106235.33ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m  K  andle duplicate video_id constraint[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should query tasks with their dependencies[0m [0m[2m[[0m[33m106235.38ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should query tasks with their dependencies[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should query parent-child relationships[0m [0m[2m[[0m[33m106235.42ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should query parent-child relationships[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should count tasks by status[0m [0m[2m[[0m[33m106235.90ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m K  ount tasks by status[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mTransaction Handling[2m >[0m[1m should handle successful transactions[0m [0m[2m[[0m[33m106235.99ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTransaction Handling[2m >[0m[1m should handle successful transactions[0m
[0m[0m[1m119 |[0m 
[0m[1m120 |[0m     /**
[0m[1m121 |[0m      * Initialize migration tracking table
[0m[1m122 |[0m      */
[0m[1m123 |[0m     [0m[34mprivate[0m initMigrationTable(): [0m[35mvoid[0m {
[0m[1m124 |[0m         [0m[33mthis[0m.db[0m[3m[1m.run[0m([0m[32m`[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase has closed[0m
[0m      [2mat [0m[0m[1m[3mrun[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m302[0m[2m:[33m21[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitMigrationTable[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m124[0m[2m:[33m17[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m165[0m[2m:[33m14[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m162[0m[2m:[33m45[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m326[0m[2m:[33m18[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m323[0m[2m:[33m40[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/database.test.ts[0m[2m:[0m[33m44[0m[2m:[33m19[0m[2m)[0m
[0m[31m✗[0m [0mDatabase Operations[2m > [0mTransaction Handling[2m >[0m[1m should handle transaction rollback[0m [0m[2m[[0m[33m106236.06ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m K  andle transaction rollback[0m
[0m[0m
test/autolearn-agent.test.ts:
[0m[32m✓[0m [0mAutolearnAgent[2m > [0mConstructor[2m >[0m[1m should initialize with default enhanced learning service configuration[0m [0m[2m[0.03ms[0m[2m][0m
[0m[32m✓[0m [0mAutolearnAgent[2m > [0mConstructor[2m >[0m[1m should set correct default thresholds[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mAutolearnAgent[2m > [0mgenerateLearningInsights[2m >[0m[1m should generate performance insights from task data[0m [0m[2m[1.20ms[0m[2m][0m
[0m[32m✓[0m [0mAutolearnAgent[2m > [0mgenerateLearningInsights[2m >[0m[1m should provide actionable recommendations[0m [0m[2m[0.21ms[0m[2m][0m
[0m[32m✓[0m [0mAutolearnAgent[2m > [0mgenerateOptimizationRecommendations[2m >[0m[1m should generate task scheduling recommendations[0m [0m[2m[0.48ms[0m[2m][0m
[0m[32m✓[0m [0mAutolearnAgent[2m > [0mgenerateOptimizationRecommendations[2m >[0m[1m should prioritize recommendations by impact[0m [0m[2m[0.14ms[0m[2m][0m
[0m[32m✓[0m [0mAutolearnAgent[2m > [0mLearning Cycle Integration[2m >[0m[1m should complete full learning cycle from task execution to recommendations[0m [0m[2m[0.62ms[0m[2m][0m
[0m
test/task-types.test.ts:
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid ShellTask[0m [0m[2m[0.09ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid LlmTask[0m [0m[2m[0.06ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid PlannerTask[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid CodeTask[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid ReviewTask[0m [0m[2m[0.03ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid RunCodeTask[0m [0m[2m[0.03ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid BatchTask with generator[0m [0m[2m[0.04ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid ToolTask[0m [0m[2m[0.04ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid YoutubeTask[0m [0m[2m[0.03ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mType Guards and Validation[2m >[0m[1m should create valid MediaIngestTask[0m [0m[2m[0.03ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mDiscriminated Union Behavior[2m >[0m[1m should work with discriminated union array[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mDiscriminated Union Behavior[2m >[0m[1m should enable type narrowing in switch statements[0m [0m[2m[0.14ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mTask Status Values[2m >[0m[1m should accept valid status values[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mOptional Fields[2m >[0m[1m should handle optional description field[0m [0m[2m[0.03ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mOptional Fields[2m >[0m[1m should handle optional criteria field[0m [0m[2m[0.03ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mComplex Task Configurations[2m >[0m[1m should handle BatchTask with static subtasks[0m [0m[2m[0.07ms[0m[2m][0m
[0m[32m✓[0m [0mTask Type System[2m > [0mComplex Task Configurations[2m >[0m[1m should handle BatchTask with generator[0m [0m[2m[0.03ms[0m[2m][0m
[0m
test/planner-service.integration.test.ts:
[0m[1m119 |[0m                 features: [[0m[32m'user registration'[0m, [0m[32m'login'[0m, [0m[32m'dashboard'[0m]
[0m[1m120 |[0m             }[0m[2m;[0m
[0m[1m121 |[0m 
[0m[1m122 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.decomposeGoal[0m(goal, context)[0m[2m;[0m
[0m[1m123 |[0m 
[0m[1m124 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m124[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Decomposition[2m >[0m[1m should decompose complex goal into subtasks[0m [0m[2m[0.75ms[0m[2m][0m
[0m[0m[32m✓[0m [0mPlanner Service[2m > [0mTask Decomposition[2m >[0m[1m should handle LLM API errors[0m [0m[2m[0.25ms[0m[2m][0m
[0m[1m164 |[0m                 })
[0m[1m165 |[0m             })[0m[2m;[0m
[0m[1m166 |[0m 
[0m[1m167 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.decomposeGoal[0m([0m[32m'Test goal'[0m, {})[0m[2m;[0m
[0m[1m168 |[0m 
[0m[1m169 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m169[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Decomposition[2m >[0m[1m should validate generated tasks[0m [0m[2m[0.31ms[0m[2m][0m
[0m[0m[32m✓[0m [0mPlanner Service[2m > [0mTask Decomposition[2m >[0m[1m should handle malformed LLM responses[0m [0m[2m[0.21ms[0m[2m][0m
[0m[1m207 |[0m                     description: [0m[32m'Install dependencies'[0m,
[0m[1m208 |[0m                     dependencies: []
[0m[1m209 |[0m                 }
[0m[1m210 |[0m             ][0m[2m;[0m
[0m[1m211 |[0m 
[0m[1m212 |[0m             [0m[35mconst[0m optimized = [0m[35mawait[0m plannerService[0m[3m[1m.optimizeTaskSequence[0m(tasks)[0m[2m;[0m
                                                         [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mplannerService.optimizeTaskSequence is not a function. (In 'plannerService.optimizeTaskSequence(tasks)', 'plannerService.optimizeTaskSequence' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m212[0m[2m:[33m52[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m190[0m[2m:[33m62[0m[2m)[0m
[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Optimization[2m >[0m[1m should optimize task sequence for dependencies[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m[1m236 |[0m                     description: [0m[32m'Task 2'[0m,
[0m[1m237 |[0m                     dependencies: [[0m[32m'1'[0m]
[0m[1m238 |[0m                 }
[0m[1m239 |[0m             ][0m[2m;[0m
[0m[1m240 |[0m 
[0m[1m241 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.optimizeTaskSequence[0m(tasks)[0m[2m;[0m
                                                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mplannerService.optimizeTaskSequence is not a function. (In 'plannerService.optimizeTaskSequence(tasks)', 'plannerService.optimizeTaskSequence' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m241[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m225[0m[2m:[33m51[0m[2m)[0m
[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Optimization[2m >[0m[1m should detect circular dependencies[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[1m264 |[0m                     description: [0m[32m'Dependent task'[0m,
[0m[1m265 |[0m                     dependencies: [[0m[32m'1'[0m, [0m[32m'2'[0m]
[0m[1m266 |[0m                 }
[0m[1m267 |[0m             ][0m[2m;[0m
[0m[1m268 |[0m 
[0m[1m269 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.optimizeTaskSequence[0m(tasks)[0m[2m;[0m
                                                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mplannerService.optimizeTaskSequence is not a function. (In 'plannerService.optimizeTaskSequence(tasks)', 'plannerService.optimizeTaskSequence' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m269[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m247[0m[2m:[33m63[0m[2m)[0m
[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Optimization[2m >[0m[1m should suggest parallel execution opportunities[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[1m289 |[0m                     created_by: [0m[32m'planner-service'[0m,
[0m[1m290 |[0m                     complexity: [0m[32m'medium'[0m
[0m[1m291 |[0m                 }
[0m[1m292 |[0m             }[0m[2m;[0m
[0m[1m293 |[0m 
[0m[1m294 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.savePlan[0m(plan)[0m[2m;[0m
                                                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mplannerService.savePlan is not a function. (In 'plannerService.savePlan(plan)', 'plannerService.savePlan' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m294[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m278[0m[2m:[33m44[0m[2m)[0m
[0m[31m✗[0m [0mPlanner Service[2m > [0mPlan Persistence[2m >[0m[1m should save plan to database[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[1m306 |[0m             mockDb[0m[3m[1m.run[0m([0m[32m`[0m
[0m[1m307 |[0m                 INSERT INTO tasks (id, [0m[34mtype[0m, [0m[1m[34mdescription[0m, generator, metadata)
[0m[1m308 |[0m                 VALUES ([0m[33m1[0m, [0m[32m'batch'[0m, [0m[32m'Test plan'[0m, [0m[32m'planner-service'[0m, [0m[32m'{"goal": "Test goal"}'[0m)
[0m[1m309 |[0m             [0m[32m`);[0m
[0m[1m310 |[0m 
[0m[1m311 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.loadPlan[0m([0m[33m1[0m)[0m[2m;[0m
                                                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mplannerService.loadPlan is not a function. (In 'plannerService.loadPlan(1)', 'plannerService.loadPlan' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m311[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.integration.test.ts[0m[2m:[0m[33m304[0m[2m:[33m41[0m[2m)[0m
[0m[31m✗[0m [0mPlanner Service[2m > [0mPlan Persistence[2m >[0m[1m should load existing plan[0m [0m[2m[0.21ms[0m[2m][0m
[0m[0m
test/planner-service.test.ts:
[0m[1m108 |[0m     describe([0m[32m'Goal Decomposition'[0m, () => {
[0m[1m109 |[0m         it([0m[32m'should decompose a simple goal into tasks'[0m, [0m[35masync[0m () => {
[0m[1m110 |[0m             [0m[35mconst[0m goal = [0m[32m'Process 10 video files for transcription'[0m[0m[2m;[0m
[0m[1m111 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.decomposeGoal[0m(goal)[0m[2m;[0m
[0m[1m112 |[0m 
[0m[1m113 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31mfalse[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m113[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mPlannerService[2m > [0mGoal Decomposition[2m >[0m[1m should decompose a simple goal into tasks[0m [0m[2m[0.38ms[0m[2m][0m
[0m[0m[1m125 |[0m                 priority: [0m[32m'high'[0m
[0m[1m126 |[0m             }[0m[2m;[0m
[0m[1m127 |[0m 
[0m[1m128 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.decomposeGoal[0m(goal, context)[0m[2m;[0m
[0m[1m129 |[0m 
[0m[1m130 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31mfalse[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m130[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mPlannerService[2m > [0mGoal Decomposition[2m >[0m[1m should handle goal decomposition with context[0m [0m[2m[0.31ms[0m[2m][0m
[0m[0m[1m136 |[0m             [0m[35mconst[0m goal = [0m[32m'Test goal for database storage'[0m[0m[2m;[0m
[0m[1m137 |[0m             [0m[35mawait[0m plannerService[0m[3m[1m.decomposeGoal[0m(goal)[0m[2m;[0m
[0m[1m138 |[0m 
[0m[1m139 |[0m             [0m[35mconst[0m stored = db[0m[3m[1m.query[0m([0m[32m'SELECT * FROM planner_results WHERE goal = ?'[0m)[0m[3m[1m.get[0m(goal)[0m[2m;[0m
[0m[1m140 |[0m             expect(stored)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
[0m[1m141 |[0m             expect(stored.goal)[0m[3m[1m.toBe[0m(goal)[0m[2m;[0m
                         [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mnull is not an object (evaluating 'stored.goal')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m141[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mPlannerService[2m > [0mGoal Decomposition[2m >[0m[1m should store planning results in database[0m [0m[2m[0.29ms[0m[2m][0m
[0m[0m[32m✓[0m [0mPlannerService[2m > [0mGoal Decomposition[2m >[0m[1m should handle LLM API errors gracefully[0m [0m[2m[0.18ms[0m[2m][0m
[0m[32m✓[0m [0mPlannerService[2m > [0mGoal Decomposition[2m >[0m[1m should handle invalid JSON responses[0m [0m[2m[0.19ms[0m[2m][0m
[0m[1m191 |[0m                     ([0m[32m'transcribe'[0m, [0m[32m'completed'[0m)
[0m[1m192 |[0m             [0m[32m`);[0m
[0m[1m193 |[0m         })[0m[2m;[0m
[0m[1m194 |[0m 
[0m[1m195 |[0m         it([0m[32m'should calculate basic planner metrics'[0m, [0m[35masync[0m () => {
[0m[1m196 |[0m             [0m[35mconst[0m metrics = [0m[35mawait[0m plannerService[0m[3m[1m.getMetrics[0m()[0m[2m;[0m
                                                       [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mplannerService.getMetrics is not a function. (In 'plannerService.getMetrics()', 'plannerService.getMetrics' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m196[0m[2m:[33m50[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m195[0m[2m:[33m54[0m[2m)[0m
[0m[31m✗[0m [0mPlannerService[2m > [0mMetrics Calculation[2m >[0m[1m should calculate basic planner metrics[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[1m200 |[0m             expect(metrics.success_rate_by_context)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
[0m[1m201 |[0m             expect(metrics.most_common_patterns)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
[0m[1m202 |[0m         })[0m[2m;[0m
[0m[1m203 |[0m 
[0m[1m204 |[0m         it([0m[32m'should calculate success rates by context'[0m, [0m[35masync[0m () => {
[0m[1m205 |[0m             [0m[35mconst[0m metrics = [0m[35mawait[0m plannerService[0m[3m[1m.getMetrics[0m()[0m[2m;[0m
                                                       [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mplannerService.getMetrics is not a function. (In 'plannerService.getMetrics()', 'plannerService.getMetrics' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m205[0m[2m:[33m50[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m204[0m[2m:[33m57[0m[2m)[0m
[0m[31m✗[0m [0mPlannerService[2m > [0mMetrics Calculation[2m >[0m[1m should calculate success rates by context[0m [0m[2m[0.14ms[0m[2m][0m
[0m[0m[32m✓[0m [0mPlannerService[2m > [0mMetrics Calculation[2m >[0m[1m should identify common patterns[0m [0m[2m[0.19ms[0m[2m][0m
[0m[1m216 |[0m         })[0m[2m;[0m
[0m[1m217 |[0m     })[0m[2m;[0m
[0m[1m218 |[0m 
[0m[1m219 |[0m     describe([0m[32m'Badge Generation'[0m, () => {
[0m[1m220 |[0m         it([0m[32m'should generate planning efficiency badge'[0m, () => {
[0m[1m221 |[0m             [0m[35mconst[0m badge = plannerService[0m[3m[1m.generatePlanningEfficiencyBadge[0m([0m[33m85[0m)[0m[2m;[0m
                                               [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mplannerService.generatePlanningEfficiencyBadge is not a function. (In 'plannerService.generatePlanningEfficiencyBadge(85)', 'plannerService.generatePlanningEfficiencyBadge' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m221[0m[2m:[33m42[0m[2m)[0m
[0m[31m✗[0m [0mPlannerService[2m > [0mBadge Generation[2m >[0m[1m should generate planning efficiency badge[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[1m224 |[0m             expect(badge)[0m[3m[1m.toContain[0m([0m[32m'85%'[0m)[0m[2m;[0m
[0m[1m225 |[0m             expect(badge)[0m[3m[1m.toContain[0m([0m[32m'brightgreen'[0m)[0m[2m;[0m
[0m[1m226 |[0m         })[0m[2m;[0m
[0m[1m227 |[0m 
[0m[1m228 |[0m         it([0m[32m'should use different colors for different efficiency levels'[0m, () => {
[0m[1m229 |[0m             [0m[35mconst[0m highBadge = plannerService[0m[3m[1m.generatePlanningEfficiencyBadge[0m([0m[33m90[0m)[0m[2m;[0m
                                                   [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mplannerService.generatePlanningEfficiencyBadge is not a function. (In 'plannerService.generatePlanningEfficiencyBadge(90)', 'plannerService.generatePlanningEfficiencyBadge' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m229[0m[2m:[33m46[0m[2m)[0m
[0m[31m✗[0m [0mPlannerService[2m > [0mBadge Generation[2m >[0m[1m should use different colors for different efficiency levels[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[1m243 |[0m 
[0m[1m244 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.decomposeGoal[0m([0m[32m'Test goal'[0m)[0m[2m;[0m
[0m[1m245 |[0m 
[0m[1m246 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mfalse[0m)[0m[2m;[0m
[0m[1m247 |[0m             expect(result.error)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
[0m[1m248 |[0m             expect(mockLogger.error)[0m[3m[1m.toHaveBeenCalled[0m()[0m[2m;[0m
                                           [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveBeenCalled[2m([0m[2m)[0m

Expected number of calls: >= [32m1[0m
Received number of calls: [31m0[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m248[0m[2m:[33m38[0m[2m)[0m
[0m[31m✗[0m [0mPlannerService[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m[1m250 |[0m 
[0m[1m251 |[0m         it([0m[32m'should handle empty goals'[0m, [0m[35masync[0m () => {
[0m[1m252 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m plannerService[0m[3m[1m.decomposeGoal[0m([0m[32m''[0m)[0m[2m;[0m
[0m[1m253 |[0m 
[0m[1m254 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mfalse[0m)[0m[2m;[0m
[0m[1m255 |[0m             expect(result.error)[0m[3m[1m.toContain[0m([0m[32m'Goal cannot be empty'[0m)[0m[2m;[0m
                                       [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoContain[2m([0m[32mexpected[0m[2m)[0m

Expected to contain: [32m"Goal cannot be empty"[0m
Received: [31m"Failed to parse LLM response as JSON"[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/planner-service.test.ts[0m[2m:[0m[33m255[0m[2m:[33m34[0m[2m)[0m
[0m[31m✗[0m [0mPlannerService[2m > [0mError Handling[2m >[0m[1m should handle empty goals[0m [0m[2m[0.23ms[0m[2m][0m
[0m[0m[32m✓[0m [0mPlannerService[2m > [0mError Handling[2m >[0m[1m should handle network timeouts[0m [0m[2m[[1m101.04ms[0m[2m][0m
[0m
test/phase2-summarization.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m1 |[0m ([0m[35mfunction[0m (entry, fetcher)
              [31m[1m^[0m
[0m[31mSyntaxError[0m[2m:[0m [1mExport named 'executeMediaSummarizeTask' not found in module '/workspace/banana-bun/src/executors/summarize.ts'.[0m
[0m      [2mat [0m[0m[1m[3mloadAndEvaluateModule[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m
test/pattern-analysis-server.test.ts:
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mTool Registration[2m >[0m[1m should register all required tools[0m [0m[2m[2.50ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mTool Registration[2m >[0m[1m should register correct tool names[0m [0m[2m[5.07ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0manalyze_usage_patterns[2m >[0m[1m should detect temporal patterns[0m [0m[2m[0.45ms[0m[2m][0m
[0m[1m200 |[0m                 GROUP BY t1.[0m[34mtype[0m, [0m[1m[34mt2[0m.[0m[34mtype[0m
[0m[1m201 |[0m                 HAVING sequence_count >= [0m[33m1[0m
[0m[1m202 |[0m                 ORDER BY sequence_count DESC
[0m[1m203 |[0m             [0m[32m`).all(cutoffTime) as any[];[0m
[0m[1m204 |[0m 
[0m[1m205 |[0m             expect(sequences.length)[0m[3m[1m.toBeGreaterThan[0m([0m[33m0[0m)[0m[2m;[0m
                                           [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBeGreaterThan[2m([0m[32mexpected[0m[2m)[0m

Expected: > [32m0[0m
Received: [31m0[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/pattern-analysis-server.test.ts[0m[2m:[0m[33m205[0m[2m:[33m38[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/pattern-analysis-server.test.ts[0m[2m:[0m[33m187[0m[2m:[33m52[0m[2m)[0m
[0m[31m✗[0m [0mPattern Analysis Server[2m > [0manalyze_usage_patterns[2m >[0m[1m should detect task sequence patterns[0m [0m[2m[0.65ms[0m[2m][0m
[0m[0m[32m✓[0m [0mPattern Analysis Server[2m > [0manalyze_usage_patterns[2m >[0m[1m should filter patterns by confidence threshold[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mfind_similar_patterns[2m >[0m[1m should find patterns similar to a given pattern[0m [0m[2m[0.40ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mfind_similar_patterns[2m >[0m[1m should handle non-existent pattern IDs[0m [0m[2m[0.10ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mfind_similar_patterns[2m >[0m[1m should respect similarity threshold[0m [0m[2m[0.11ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mgenerate_scheduling_recommendations[2m >[0m[1m should generate recommendations based on historical patterns[0m [0m[2m[0.35ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mgenerate_scheduling_recommendations[2m >[0m[1m should handle different optimization goals[0m [0m[2m[0.19ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mtrack_pattern_effectiveness[2m >[0m[1m should track pattern performance over time[0m [0m[2m[0.18ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mpredict_future_patterns[2m >[0m[1m should generate future pattern predictions[0m [0m[2m[0.16ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mpredict_future_patterns[2m >[0m[1m should filter predictions by confidence threshold[0m [0m[2m[0.13ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[0.16ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mError Handling[2m >[0m[1m should handle invalid JSON in pattern data[0m [0m[2m[0.18ms[0m[2m][0m
[0m[32m✓[0m [0mPattern Analysis Server[2m > [0mPerformance[2m >[0m[1m should handle large datasets efficiently[0m [0m[2m[0.84ms[0m[2m][0m
[0m
test/chromadb-server.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m42 |[0m     on: mock(() => {}),
[0m[1m43 |[0m     readyState: [0m[33m1[0m
[0m[1m44 |[0m }[0m[2m;[0m
[0m[1m45 |[0m 
[0m[1m46 |[0m [0m[2m// Ensure mock calls are properly initialized[0m
[0m[1m47 |[0m (mockWebSocketServer.on [0m[34mas[0m [0m[34many[0m).mock = { calls: [] }[0m[2m;[0m
                          [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mAttempted to assign to readonly property.[0m
[0m      [2mat [0m[0m[36m/workspace/banana-bun/test/chromadb-server.test.ts[0m[2m:[0m[33m47[0m[2m:[33m22[0m
[0m      [2mat [0m[0m[1m[3mloadAndEvaluateModule[0m[2m ([0m[0m[36m[0m[33m2[0m[2m:[33m1[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m
test/monitor-server.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m1 |[0m ([0m[35mfunction[0m (entry, fetcher)
              [31m[1m^[0m
[0m[31mSyntaxError[0m[2m:[0m [1mExport named 'monitorServer' not found in module '/workspace/banana-bun/src/mcp/monitor-server.ts'.[0m
[0m      [2mat [0m[0m[1m[3mloadAndEvaluateModule[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m
test/embeddings.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[31merror[0m[2m: [0m[1mCannot find package 'chromadb' from '/workspace/banana-bun/src/memory/embeddings.ts'[0m
[0m[2m-------------------------------[0m

[0m
test/media-intelligence.test.ts:
[0m
test/media-organizer.test.ts:
[0m[32m✓[0m [0mMedia Type Detector[2m >[0m[1m should detect TV shows from filename patterns[0m [0m[2m[3.24ms[0m[2m][0m
[0m[32m✓[0m [0mMedia Type Detector[2m >[0m[1m should detect movies from year patterns[0m [0m[2m[0.20ms[0m[2m][0m
[0m[32m✓[0m [0mMedia Type Detector[2m >[0m[1m should detect YouTube content[0m [0m[2m[0.08ms[0m[2m][0m
[0m[32m✓[0m [0mMedia Type Detector[2m >[0m[1m should use metadata when available[0m [0m[2m[0.07ms[0m[2m][0m
[0m[32m✓[0m [0mMedia Type Detector[2m >[0m[1m should fallback to catch-all for unknown types[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mTV Series Info Extraction[2m >[0m[1m should extract series info from S01E01 pattern[0m [0m[2m[0.51ms[0m[2m][0m
[0m[32m✓[0m [0mTV Series Info Extraction[2m >[0m[1m should extract series info from Season/Episode pattern[0m [0m[2m[0.10ms[0m[2m][0m
[0m[32m✓[0m [0mTV Series Info Extraction[2m >[0m[1m should extract series info from 1x01 pattern[0m [0m[2m[0.07ms[0m[2m][0m
[0m[32m✓[0m [0mMovie Info Extraction[2m >[0m[1m should extract movie title and year[0m [0m[2m[0.15ms[0m[2m][0m
[0m[32m✓[0m [0mMovie Info Extraction[2m >[0m[1m should extract title from quality indicators[0m [0m[2m[0.04ms[0m[2m][0m
[0m[32m✓[0m [0mMovie Info Extraction[2m >[0m[1m should handle titles without years[0m [0m[2m[0.06ms[0m[2m][0m
[0m[32m✓[0m [0mFilename Normalizer[2m >[0m[1m should sanitize illegal characters[0m [0m[2m[0.08ms[0m[2m][0m
[0m[32m✓[0m [0mFilename Normalizer[2m >[0m[1m should normalize to title case[0m [0m[2m[0.34ms[0m[2m][0m
[0m[32m✓[0m [0mFilename Normalizer[2m >[0m[1m should truncate long filenames[0m [0m[2m[0.09ms[0m[2m][0m
[0m[32m✓[0m [0mFilename Normalizer[2m >[0m[1m should replace spaces when requested[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mTemplate Formatting[2m >[0m[1m should format TV show template[0m [0m[2m[0.20ms[0m[2m][0m
[0m[32m✓[0m [0mTemplate Formatting[2m >[0m[1m should format movie template[0m [0m[2m[0.04ms[0m[2m][0m
[0m[32m✓[0m [0mTemplate Formatting[2m >[0m[1m should handle missing variables[0m [0m[2m[0.06ms[0m[2m][0m
[0m[32m✓[0m [0mOrganization Plan Creation[2m >[0m[1m should create plan for TV show[0m [0m[2m[0.60ms[0m[2m][0m
[0m[32m✓[0m [0mOrganization Plan Creation[2m >[0m[1m should create plan for movie[0m [0m[2m[0.21ms[0m[2m][0m
[0m[32m✓[0m [0mOrganization Plan Creation[2m >[0m[1m should respect forced collection type[0m [0m[2m[2.66ms[0m[2m][0m
[0m[32m✓[0m [0mOrganization Plan Creation[2m >[0m[1m should default to catch-all when type is unknown[0m [0m[2m[0.31ms[0m[2m][0m
[0m[32m✓[0m [0mOrganization Plan Execution[2m >[0m[1m should execute dry run without moving files[0m [0m[2m[1.68ms[0m[2m][0m
[0m[32m✓[0m [0mOrganization Plan Execution[2m >[0m[1m should move file when run normally[0m [0m[2m[0.76ms[0m[2m][0m
[0m[32m✓[0m [0mOrganization Plan Execution[2m >[0m[1m should skip move when identical file exists[0m [0m[2m[[1m12.27ms[0m[2m][0m
[0m[32m✓[0m [0mOrganization Plan Execution[2m >[0m[1m should create safe filename when different file exists[0m [0m[2m[1.41ms[0m[2m][0m
[0m
test/cross-modal-intelligence.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[31merror[0m[2m: [0m[1mCannot find package 'chromadb' from '/workspace/banana-bun/src/services/cross-modal-intelligence-service.ts'[0m
[0m[2m-------------------------------[0m

[0m
test/config.test.ts:
[0m[32m✓[0m [0mConfiguration Management[2m > [0mBase Path Configuration[2m >[0m[1m should have a valid base path[0m [0m[2m[0.03ms[0m[2m][0m
[0m[1m39 |[0m                 [0m[32m'tasks'[0m, [0m[32m'outputs'[0m, [0m[32m'logs'[0m, [0m[32m'dashboard'[0m,
[0m[1m40 |[0m                 [0m[32m'database'[0m, [0m[32m'media'[0m
[0m[1m41 |[0m             ][0m[2m;[0m
[0m[1m42 |[0m 
[0m[1m43 |[0m             requiredPaths[0m[3m[1m.forEach[0m(path => {
[0m[1m44 |[0m                 expect(config.paths)[0m[3m[1m.toHaveProperty[0m(path)[0m[2m;[0m
                                          [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveProperty[2m([0m[32mpath[0m[2m)[0m

Expected path: [32m"incoming"[0m

Unable to find property
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m44[0m[2m:[33m38[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mforEach[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m43[0m[2m:[33m27[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mPath Configuration[2m >[0m[1m should have all required paths defined[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[1m45 |[0m                 expect(config.paths[path [0m[34mas[0m keyof [0m[35mtypeof[0m config.paths])[0m[3m[1m.toBeString[0m()[0m[2m;[0m
[0m[1m46 |[0m             })[0m[2m;[0m
[0m[1m47 |[0m         })[0m[2m;[0m
[0m[1m48 |[0m 
[0m[1m49 |[0m         it([0m[32m'should have chroma configuration'[0m, () => {
[0m[1m50 |[0m             expect(config.paths.chroma)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
                               [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'config.paths.chroma')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m50[0m[2m:[33m27[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mPath Configuration[2m >[0m[1m should have chroma configuration[0m [0m[2m[0.08ms[0m[2m][0m
[0m[0m[1m52 |[0m             expect(config.paths.chroma.port)[0m[3m[1m.toBe[0m([0m[33m8000[0m)[0m[2m;[0m
[0m[1m53 |[0m             expect(config.paths.chroma.ssl)[0m[3m[1m.toBe[0m([0m[33mfalse[0m)[0m[2m;[0m
[0m[1m54 |[0m         })[0m[2m;[0m
[0m[1m55 |[0m 
[0m[1m56 |[0m         it([0m[32m'should construct paths relative to base path'[0m, () => {
[0m[1m57 |[0m             expect(config.paths.incoming)[0m[3m[1m.toBeString[0m()[0m[2m;[0m
                               [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'config.paths.incoming')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m57[0m[2m:[33m27[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mPath Configuration[2m >[0m[1m should construct paths relative to base path[0m [0m[2m[0.06ms[0m[2m][0m
[0m[0m[1m61 |[0m         })[0m[2m;[0m
[0m[1m62 |[0m     })[0m[2m;[0m
[0m[1m63 |[0m 
[0m[1m64 |[0m     describe([0m[32m'OpenAI Configuration'[0m, () => {
[0m[1m65 |[0m         it([0m[32m'should have openai configuration'[0m, () => {
[0m[1m66 |[0m             expect(config.openai)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
                                       [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBeDefined[2m([0m[2m)[0m

Received: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m66[0m[2m:[33m35[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mOpenAI Configuration[2m >[0m[1m should have openai configuration[0m [0m[2m[0.05ms[0m[2m][0m
[0m[0m[1m67 |[0m             expect(config.openai.model)[0m[3m[1m.toBe[0m([0m[32m'gpt-4'[0m)[0m[2m;[0m
[0m[1m68 |[0m         })[0m[2m;[0m
[0m[1m69 |[0m 
[0m[1m70 |[0m         it([0m[32m'should use environment variable for API key'[0m, () => {
[0m[1m71 |[0m             [0m[2m// Test that config respects environment variables[0m
[0m[1m72 |[0m             expect(config.openai.apiKey)[0m[3m[1m.toBe[0m(process.env.OPENAI_API_KEY || [0m[32m''[0m)[0m[2m;[0m
                               [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'config.openai.apiKey')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m72[0m[2m:[33m27[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mOpenAI Configuration[2m >[0m[1m should use environment variable for API key[0m [0m[2m[0.04ms[0m[2m][0m
[0m[0m[1m72 |[0m             expect(config.openai.apiKey)[0m[3m[1m.toBe[0m(process.env.OPENAI_API_KEY || [0m[32m''[0m)[0m[2m;[0m
[0m[1m73 |[0m         })[0m[2m;[0m
[0m[1m74 |[0m 
[0m[1m75 |[0m         it([0m[32m'should default to empty string when no API key is set'[0m, () => {
[0m[1m76 |[0m             [0m[2m// Test that config has proper default[0m
[0m[1m77 |[0m             expect([0m[35mtypeof[0m config.openai.apiKey)[0m[3m[1m.toBe[0m([0m[32m'string'[0m)[0m[2m;[0m
                                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'config.openai.apiKey')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m77[0m[2m:[33m34[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mOpenAI Configuration[2m >[0m[1m should default to empty string when no API key is set[0m [0m[2m[0.06ms[0m[2m][0m
[0m[0m[1m78 |[0m         })[0m[2m;[0m
[0m[1m79 |[0m     })[0m[2m;[0m
[0m[1m80 |[0m 
[0m[1m81 |[0m     describe([0m[32m'Ollama Configuration'[0m, () => {
[0m[1m82 |[0m         it([0m[32m'should have ollama configuration with defaults'[0m, () => {
[0m[1m83 |[0m             expect(config.ollama)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
                                       [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBeDefined[2m([0m[2m)[0m

Received: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m83[0m[2m:[33m35[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mOllama Configuration[2m >[0m[1m should have ollama configuration with defaults[0m [0m[2m[0.09ms[0m[2m][0m
[0m[0m[1m86 |[0m             expect(config.ollama.fastModel)[0m[3m[1m.toBe[0m([0m[32m"qwen3:8b"[0m)[0m[2m;[0m
[0m[1m87 |[0m         })[0m[2m;[0m
[0m[1m88 |[0m 
[0m[1m89 |[0m         it([0m[32m'should use environment variables when provided'[0m, () => {
[0m[1m90 |[0m             [0m[2m// Test that config respects environment variables or uses defaults[0m
[0m[1m91 |[0m             expect(config.ollama.url)[0m[3m[1m.toBe[0m(process.env.OLLAMA_URL || [0m[32m'http://localhost:11434'[0m)[0m[2m;[0m
                               [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'config.ollama.url')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m91[0m[2m:[33m27[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mOllama Configuration[2m >[0m[1m should use environment variables when provided[0m [0m[2m[0.07ms[0m[2m][0m
[0m [0m[1m97 |[0m     describe([0m[32m'Configuration Validation'[0m, () => {
 [0m[1m98 |[0m         it([0m[32m'should have all required configuration sections'[0m, () => {
 [0m[1m99 |[0m             [0m[35mconst[0m requiredSections = [[0m[32m'paths'[0m, [0m[32m'openai'[0m, [0m[32m'ollama'[0m][0m[2m;[0m
[0m[1m100 |[0m 
[0m[1m101 |[0m             requiredSections[0m[3m[1m.forEach[0m(section => {
[0m[1m102 |[0m                 expect(config)[0m[3m[1m.toHaveProperty[0m(section)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveProperty[2m([0m[32mpath[0m[2m)[0m

Expected path: [32m"paths"[0m

Unable to find property
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m102[0m[2m:[33m32[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mforEach[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m101[0m[2m:[33m30[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mConfiguration Validation[2m >[0m[1m should have all required configuration sections[0m [0m[2m[0.14ms[0m[2m][0m
[0m[0m[1m104 |[0m             })[0m[2m;[0m
[0m[1m105 |[0m         })[0m[2m;[0m
[0m[1m106 |[0m 
[0m[1m107 |[0m         it([0m[32m'should have valid types for all configuration values'[0m, () => {
[0m[1m108 |[0m             [0m[2m// Paths should be strings[0m
[0m[1m109 |[0m             Object[0m[3m[1m.values[0m(config.paths)[0m[3m[1m.forEach[0m(path => {
                         [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mObject.values requires that input parameter not be null or undefined[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/config.test.ts[0m[2m:[0m[33m109[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mConfiguration Management[2m > [0mConfiguration Validation[2m >[0m[1m should have valid types for all configuration values[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m
test/additional-executors.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[31merror[0m[2m: [0m[1mCannot find package 'yaml' from '/workspace/banana-bun/src/executors/planner.ts'[0m
[0m[2m-------------------------------[0m

[0m
test/review-service.db.test.ts:
[0m[32m✓[0m [0mReviewService Database Functions[2m >[0m[1m summarizes task reviews[0m [0m[2m[0.28ms[0m[2m][0m
[0m[32m✓[0m [0mReviewService Database Functions[2m >[0m[1m computes overall review metrics[0m [0m[2m[0.18ms[0m[2m][0m
[0m[32m✓[0m [0mReviewService Database Functions[2m >[0m[1m retrieves task review history[0m [0m[2m[0.12ms[0m[2m][0m
[0m[32m✓[0m [0mReviewService Database Functions[2m >[0m[1m retrieves recent reviews[0m [0m[2m[0.16ms[0m[2m][0m
[0m[32m✓[0m [0mReviewService Database Functions[2m >[0m[1m badge helpers[0m [0m[2m[0.15ms[0m[2m][0m
[0m
test/cross-platform-paths.test.ts:
[0m[32m✓[0m [0mCross Platform Path Utilities[2m >[0m[1m getDefaultBasePath uses BASE_PATH env variable[0m [0m[2m[0.04ms[0m[2m][0m
[0m[32m✓[0m [0mCross Platform Path Utilities[2m >[0m[1m normalizePath converts backslashes to slashes[0m [0m[2m[0.08ms[0m[2m][0m
[0m[32m✓[0m [0mCross Platform Path Utilities[2m >[0m[1m resolveEnvironmentVariables replaces env vars[0m [0m[2m[0.15ms[0m[2m][0m
[0m[32m✓[0m [0mCross Platform Path Utilities[2m >[0m[1m validatePath detects invalid patterns[0m [0m[2m[0.07ms[0m[2m][0m
[0m[32m✓[0m [0mCross Platform Path Utilities[2m >[0m[1m getExecutableExtension matches platform[0m [0m[2m[0.04ms[0m[2m][0m
[0m
test/review-service.test.ts:
[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should review completed task successfully[0m [0m[2m[[0m[33m106489.72ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should review completed task successfully[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should handle missing task[0m [0m[2m[[0m[33m106490.69ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should handle missing task[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should evaluate custom criteria correctly[0m [0m[2m[[0m[33m106491.37ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should evaluate custom criteria correctly[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should check output file quality[0m [0m[2m[[0m[33m106491.93ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m K  heck output file quality[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mBatch Review[2m >[0m[1m should review multiple tasks[0m [0m[2m[[0m[33m106492.56ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mBatch Review[2m >[0m[1m should review multiple tasks[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mBatch Review[2m >[0m[1m should generate summary report[0m [0m[2m[[0m[33m106493.07ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m @K  enerate summary report[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mQuality Metrics[2m >[0m[1m should calculate code quality metrics[0m [0m[2m[[0m[33m106493.62ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mQuality Metrics[2m >[0m[1m should calculate code quality metrics[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mQuality Metrics[2m >[0m[1m should analyze shell script quality[0m [0m[2m[[0m[33m106494.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m 	K  nalyze shell script quality[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mPerformance Analysis[2m >[0m[1m should analyze task execution performance[0m [0m[2m[[0m[33m106494.62ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mPerformance Analysis[2m >[0m[1m should analyze task execution performance[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mPerformance Analysis[2m >[0m[1m should compare performance against benchmarks[0m [0m[2m[[0m[33m106495.30ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m @	K  ompare performance against benchmarks[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get task review summary[0m [0m[2m[[0m[33m106495.91ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get task review summary[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get task review history[0m [0m[2m[[0m[33m106496.59ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get task review history[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get recent reviews[0m [0m[2m[[0m[33m106497.11ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m K  et recent reviews[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[[0m[33m106497.73ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle invalid criteria[0m [0m[2m[[0m[33m106499.19ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle invalid criteria[0m
[0m[0m[1m70 |[0m         }))[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m         [0m[2m// Import ReviewService after mocking[0m
[0m[1m73 |[0m         [0m[35mconst[0m module = [0m[35mawait[0m [0m[35mimport[0m([0m[32m'../src/services/review-service'[0m)[0m[2m;[0m
[0m[1m74 |[0m         ReviewService = module.ReviewService[0m[2m;[0m
[0m[1m75 |[0m         reviewService = [0m[35mnew[0m [0m[1mReviewService[0m()[0m[2m;[0m
                             [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not a constructor (evaluating 'new ReviewService')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.test.ts[0m[2m:[0m[33m75[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle missing output files[0m [0m[2m[[0m[33m106499.84ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m K  andle missing output files[0m
[0m[0m
test/analyze-cross-modal-cli.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[2m-------------------------------[0m

[0m[1m76 |[0m     (process [0m[34mas[0m [0m[34many[0m).exit = process.exit[0m[2m;[0m
[0m[1m77 |[0m })[0m[2m;[0m
[0m[1m78 |[0m 
[0m[1m79 |[0m describe([0m[32m'Cross-Modal CLI parseArgs'[0m, () => {
[0m[1m80 |[0m     it([0m[32m'parses correlation args'[0m, [0m[35masync[0m () => {
[0m[1m81 |[0m         [0m[35mconst[0m opts = [0m[35mawait[0m cli[0m[3m[1m.parseArgs[0m([[0m[32m'correlations'[0m, [0m[32m'--media-id'[0m, [0m[32m'42'[0m])[0m[2m;[0m
                                [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.parseArgs')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m81[0m[2m:[33m28[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m80[0m[2m:[33m35[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m parses correlation args[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m[1m82 |[0m         expect(opts.action)[0m[3m[1m.toBe[0m([0m[32m'correlations'[0m)[0m[2m;[0m
[0m[1m83 |[0m         expect(opts.mediaId)[0m[3m[1m.toBe[0m([0m[33m42[0m)[0m[2m;[0m
[0m[1m84 |[0m     })[0m[2m;[0m
[0m[1m85 |[0m 
[0m[1m86 |[0m     it([0m[32m'parses quality args'[0m, [0m[35masync[0m () => {
[0m[1m87 |[0m         [0m[35mconst[0m opts = [0m[35mawait[0m cli[0m[3m[1m.parseArgs[0m([[0m[32m'quality'[0m, [0m[32m'--media-id'[0m, [0m[32m'5'[0m])[0m[2m;[0m
                                [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.parseArgs')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m87[0m[2m:[33m28[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m86[0m[2m:[33m31[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m parses quality args[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[1m88 |[0m         expect(opts.action)[0m[3m[1m.toBe[0m([0m[32m'quality'[0m)[0m[2m;[0m
[0m[1m89 |[0m         expect(opts.mediaId)[0m[3m[1m.toBe[0m([0m[33m5[0m)[0m[2m;[0m
[0m[1m90 |[0m     })[0m[2m;[0m
[0m[1m91 |[0m 
[0m[1m92 |[0m     it([0m[32m'parses search pattern args'[0m, [0m[35masync[0m () => {
[0m[1m93 |[0m         [0m[35mconst[0m opts = [0m[35mawait[0m cli[0m[3m[1m.parseArgs[0m([[0m[32m'search-patterns'[0m, [0m[32m'--days'[0m, [0m[32m'30'[0m, [0m[32m'--limit'[0m, [0m[32m'20'[0m])[0m[2m;[0m
                                [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.parseArgs')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m93[0m[2m:[33m28[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m92[0m[2m:[33m38[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m parses search pattern args[0m [0m[2m[0.13ms[0m[2m][0m
[0m [0m[1m95 |[0m         expect(opts.days)[0m[3m[1m.toBe[0m([0m[33m30[0m)[0m[2m;[0m
 [0m[1m96 |[0m         expect(opts.limit)[0m[3m[1m.toBe[0m([0m[33m20[0m)[0m[2m;[0m
 [0m[1m97 |[0m     })[0m[2m;[0m
 [0m[1m98 |[0m 
 [0m[1m99 |[0m     it([0m[32m'parses track-search args'[0m, [0m[35masync[0m () => {
[0m[1m100 |[0m         [0m[35mconst[0m opts = [0m[35mawait[0m cli[0m[3m[1m.parseArgs[0m([[0m[32m'track-search'[0m, [0m[32m'--query'[0m, [0m[32m'cats'[0m, [0m[32m'--session-id'[0m, [0m[32m'abc'[0m])[0m[2m;[0m
                                 [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.parseArgs')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m100[0m[2m:[33m28[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m99[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m parses track-search args[0m [0m[2m[0.11ms[0m[2m][0m
[0m[0m[1m102 |[0m         expect(opts.query)[0m[3m[1m.toBe[0m([0m[32m'cats'[0m)[0m[2m;[0m
[0m[1m103 |[0m         expect(opts.sessionId)[0m[3m[1m.toBe[0m([0m[32m'abc'[0m)[0m[2m;[0m
[0m[1m104 |[0m     })[0m[2m;[0m
[0m[1m105 |[0m 
[0m[1m106 |[0m     it([0m[32m'shows help when requested'[0m, [0m[35masync[0m () => {
[0m[1m107 |[0m         [0m[35mawait[0m cli[0m[3m[1m.parseArgs[0m([[0m[32m'--help'[0m])[0m[2m;[0m
                    [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.parseArgs')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m107[0m[2m:[33m15[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m106[0m[2m:[33m37[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m shows help when requested[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[1m110 |[0m     })[0m[2m;[0m
[0m[1m111 |[0m })[0m[2m;[0m
[0m[1m112 |[0m 
[0m[1m113 |[0m describe([0m[32m'Cross-Modal CLI actions'[0m, () => {
[0m[1m114 |[0m     it([0m[32m'runs correlation analysis'[0m, [0m[35masync[0m () => {
[0m[1m115 |[0m         [0m[35mawait[0m cli[0m[3m[1m.analyzeCorrelations[0m(service [0m[34mas[0m [0m[34many[0m, { action: [0m[32m'correlations'[0m, mediaId: [0m[33m1[0m })[0m[2m;[0m
                    [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.analyzeCorrelations')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m115[0m[2m:[33m15[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m114[0m[2m:[33m37[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m runs correlation analysis[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[1m116 |[0m         expect(service.analyzeSearchTranscriptTagCorrelation)[0m[3m[1m.toHaveBeenCalledWith[0m([0m[33m1[0m)[0m[2m;[0m
[0m[1m117 |[0m         expect(consoleSpy)[0m[3m[1m.toHaveBeenCalledWith[0m(expect[0m[3m[1m.stringContaining[0m([0m[32m'Correlation Analysis Results:'[0m))[0m[2m;[0m
[0m[1m118 |[0m     })[0m[2m;[0m
[0m[1m119 |[0m 
[0m[1m120 |[0m     it([0m[32m'runs quality assessment'[0m, [0m[35masync[0m () => {
[0m[1m121 |[0m         [0m[35mawait[0m cli[0m[3m[1m.assessQuality[0m(service [0m[34mas[0m [0m[34many[0m, { action: [0m[32m'quality'[0m, mediaId: [0m[33m1[0m })[0m[2m;[0m
                    [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.assessQuality')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m121[0m[2m:[33m15[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m120[0m[2m:[33m35[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m runs quality assessment[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[1m122 |[0m         expect(service.assessContentQuality)[0m[3m[1m.toHaveBeenCalledWith[0m([0m[33m1[0m)[0m[2m;[0m
[0m[1m123 |[0m         expect(consoleSpy)[0m[3m[1m.toHaveBeenCalledWith[0m(expect[0m[3m[1m.stringContaining[0m([0m[32m'Content Quality Assessment:'[0m))[0m[2m;[0m
[0m[1m124 |[0m     })[0m[2m;[0m
[0m[1m125 |[0m 
[0m[1m126 |[0m     it([0m[32m'generates embeddings'[0m, [0m[35masync[0m () => {
[0m[1m127 |[0m         [0m[35mawait[0m cli[0m[3m[1m.generateEmbeddings[0m(service [0m[34mas[0m [0m[34many[0m, { action: [0m[32m'embeddings'[0m, mediaId: [0m[33m1[0m })[0m[2m;[0m
                    [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.generateEmbeddings')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m127[0m[2m:[33m15[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m126[0m[2m:[33m32[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m generates embeddings[0m [0m[2m[0.11ms[0m[2m][0m
[0m[0m[1m128 |[0m         expect(service.generateCrossModalEmbedding)[0m[3m[1m.toHaveBeenCalledWith[0m([0m[33m1[0m)[0m[2m;[0m
[0m[1m129 |[0m         expect(consoleSpy)[0m[3m[1m.toHaveBeenCalledWith[0m(expect[0m[3m[1m.stringContaining[0m([0m[32m'Cross-Modal Embedding Generated:'[0m))[0m[2m;[0m
[0m[1m130 |[0m     })[0m[2m;[0m
[0m[1m131 |[0m 
[0m[1m132 |[0m     it([0m[32m'analyzes search patterns'[0m, [0m[35masync[0m () => {
[0m[1m133 |[0m         [0m[35mawait[0m cli[0m[3m[1m.analyzeSearchPatterns[0m(service [0m[34mas[0m [0m[34many[0m, { action: [0m[32m'search-patterns'[0m, days: [0m[33m7[0m })[0m[2m;[0m
                    [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.analyzeSearchPatterns')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m133[0m[2m:[33m15[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m132[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m analyzes search patterns[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[1m133 |[0m         [0m[35mawait[0m cli[0m[3m[1m.analyzeSearchPatterns[0m(service [0m[34mas[0m [0m[34many[0m, { action: [0m[32m'search-patterns'[0m, days: [0m[33m7[0m })[0m[2m;[0m
[0m[1m134 |[0m         expect(consoleSpy)[0m[3m[1m.toHaveBeenCalledWith[0m(expect[0m[3m[1m.stringContaining[0m([0m[32m'Search Pattern Analysis:'[0m))[0m[2m;[0m
[0m[1m135 |[0m     })[0m[2m;[0m
[0m[1m136 |[0m 
[0m[1m137 |[0m     it([0m[32m'tracks search behavior'[0m, [0m[35masync[0m () => {
[0m[1m138 |[0m         [0m[35mawait[0m cli[0m[3m[1m.trackSearchBehavior[0m(service [0m[34mas[0m [0m[34many[0m, { action: [0m[32m'track-search'[0m, query: [0m[32m'cats'[0m, sessionId: [0m[32m's1'[0m })[0m[2m;[0m
                    [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.trackSearchBehavior')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m138[0m[2m:[33m15[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m137[0m[2m:[33m34[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m tracks search behavior[0m [0m[2m[0.11ms[0m[2m][0m
[0m[0m[1m139 |[0m         expect(service.trackSearchBehavior)[0m[3m[1m.toHaveBeenCalled[0m()[0m[2m;[0m
[0m[1m140 |[0m         expect(consoleSpy)[0m[3m[1m.toHaveBeenCalledWith[0m(expect[0m[3m[1m.stringContaining[0m([0m[32m'Search behavior tracked:'[0m))[0m[2m;[0m
[0m[1m141 |[0m     })[0m[2m;[0m
[0m[1m142 |[0m 
[0m[1m143 |[0m     it([0m[32m'shows dashboard with report'[0m, [0m[35masync[0m () => {
[0m[1m144 |[0m         [0m[35mawait[0m cli[0m[3m[1m.showDashboard[0m(service [0m[34mas[0m [0m[34many[0m, { action: [0m[32m'dashboard'[0m, generateReport: [0m[33mtrue[0m })[0m[2m;[0m
                    [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mundefined is not an object (evaluating 'cli.showDashboard')[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m144[0m[2m:[33m15[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analyze-cross-modal-cli.test.ts[0m[2m:[0m[33m143[0m[2m:[33m39[0m[2m)[0m
[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m shows dashboard with report[0m [0m[2m[0.11ms[0m[2m][0m
[0m[0m
test/feedback-tracker.test.ts:
[0m[32m✓[0m [0mFeedbackTracker[2m >[0m[1m records user feedback[0m [0m[2m[0.37ms[0m[2m][0m
[0m[32m✓[0m [0mFeedbackTracker[2m >[0m[1m analyzes feedback patterns[0m [0m[2m[1.04ms[0m[2m][0m
[0m[32m✓[0m [0mFeedbackTracker[2m >[0m[1m generates learning rules from patterns[0m [0m[2m[0.48ms[0m[2m][0m
[0m[32m✓[0m [0mFeedbackTracker[2m >[0m[1m computes feedback statistics[0m [0m[2m[5.05ms[0m[2m][0m
[0m[32m✓[0m [0mFeedbackTracker[2m >[0m[1m applies learning rule and updates usage[0m [0m[2m[0.64ms[0m[2m][0m
[0m[32m✓[0m [0mFeedbackTracker[2m >[0m[1m returns top corrections[0m [0m[2m[0.38ms[0m[2m][0m
[0m
test/llm-planning-service.test.ts:
[0m[32m✓[0m [0mLlmPlanningService Core Functions[2m >[0m[1m parses JSON responses from LLM[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mLlmPlanningService Core Functions[2m >[0m[1m falls back to text plan on invalid JSON[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mLlmPlanningService Core Functions[2m >[0m[1m builds planning prompts with context[0m [0m[2m[0.21ms[0m[2m][0m
[0m[32m✓[0m [0mLlmPlanningService Core Functions[2m >[0m[1m calculates optimization score with bonuses[0m [0m[2m[0.23ms[0m[2m][0m
[0m[32m✓[0m [0mLlmPlanningService Core Functions[2m >[0m[1m detects recurring error patterns[0m [0m[2m[0.46ms[0m[2m][0m
[0m
test/search-logs.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m1 |[0m ([0m[35mfunction[0m (entry, fetcher)
              [31m[1m^[0m
[0m[31mSyntaxError[0m[2m:[0m [1mExport named 'searchLogs' not found in module '/workspace/banana-bun/src/mcp/search-logs.ts'.[0m
[0m      [2mat [0m[0m[1m[3mloadAndEvaluateModule[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m
test/enhanced-task-processor.test.ts:
[0m[32m✓[0m [0mEnhanced Task Processor[2m > [0mInitialization[2m >[0m[1m should initialize successfully[0m [0m[2m[3.84ms[0m[2m][0m
[0m[32m✓[0m [0mEnhanced Task Processor[2m > [0mInitialization[2m >[0m[1m should handle initialization errors gracefully[0m [0m[2m[0.19ms[0m[2m][0m
[0m[1m122 |[0m 
[0m[1m123 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m enhancedTaskProcessor[0m[3m[1m.processTaskWithEnhancements[0m(task)[0m[2m;[0m
[0m[1m124 |[0m 
[0m[1m125 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
[0m[1m126 |[0m             expect(result.similarTasks)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
[0m[1m127 |[0m             expect(result.similarTasks?.length)[0m[3m[1m.toBe[0m([0m[33m1[0m)[0m[2m;[0m
                                                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32m1[0m
Received: [31m0[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/enhanced-task-processor.test.ts[0m[2m:[0m[33m127[0m[2m:[33m49[0m[2m)[0m
[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mTask Processing[2m >[0m[1m should process task with learning capabilities[0m [0m[2m[0.96ms[0m[2m][0m
[0m[0m[32m✓[0m [0mEnhanced Task Processor[2m > [0mTask Processing[2m >[0m[1m should handle tasks without similar matches[0m [0m[2m[0.24ms[0m[2m][0m
[0m[32m✓[0m [0mEnhanced Task Processor[2m > [0mTask Processing[2m >[0m[1m should generate recommendations based on task type[0m [0m[2m[0.23ms[0m[2m][0m
[0m[32m✓[0m [0mEnhanced Task Processor[2m > [0mTask Completion with Learning[2m >[0m[1m should complete task and store embeddings[0m [0m[2m[0.66ms[0m[2m][0m
[0m[32m✓[0m [0mEnhanced Task Processor[2m > [0mTask Completion with Learning[2m >[0m[1m should handle completion errors gracefully[0m [0m[2m[0.29ms[0m[2m][0m
[0m[32m✓[0m [0mEnhanced Task Processor[2m > [0mLive Dashboard Integration[2m >[0m[1m should provide dashboard info[0m [0m[2m[0.10ms[0m[2m][0m
[0m[32m✓[0m [0mEnhanced Task Processor[2m > [0mLive Dashboard Integration[2m >[0m[1m should handle WebSocket connections[0m [0m[2m[1.61ms[0m[2m][0m
[0m[1m251 |[0m         })[0m[2m;[0m
[0m[1m252 |[0m 
[0m[1m253 |[0m         it([0m[32m'should calculate system metrics'[0m, [0m[35masync[0m () => {
[0m[1m254 |[0m             [0m[35mconst[0m metrics = [0m[35mawait[0m enhancedTaskProcessor[0m[3m[1m.getSystemMetrics[0m([0m[33m24[0m)[0m[2m;[0m
[0m[1m255 |[0m 
[0m[1m256 |[0m             expect(metrics)[0m[3m[1m.toHaveProperty[0m([0m[32m'pending_tasks'[0m)[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveProperty[2m([0m[32mpath[0m[2m)[0m

Expected path: [32m"pending_tasks"[0m

Unable to find property
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/enhanced-task-processor.test.ts[0m[2m:[0m[33m256[0m[2m:[33m29[0m[2m)[0m
[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mSystem Metrics[2m >[0m[1m should calculate system metrics[0m [0m[2m[0.79ms[0m[2m][0m
[0m[0m[1m265 |[0m         })[0m[2m;[0m
[0m[1m266 |[0m 
[0m[1m267 |[0m         it([0m[32m'should calculate task counts correctly'[0m, [0m[35masync[0m () => {
[0m[1m268 |[0m             [0m[35mconst[0m metrics = [0m[35mawait[0m enhancedTaskProcessor[0m[3m[1m.getSystemMetrics[0m([0m[33m24[0m)[0m[2m;[0m
[0m[1m269 |[0m 
[0m[1m270 |[0m             expect(metrics.pending_tasks)[0m[3m[1m.toBeGreaterThanOrEqual[0m([0m[33m0[0m)[0m[2m;[0m
                                                [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mExpected and actual values must be numbers or bigints[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/enhanced-task-processor.test.ts[0m[2m:[0m[33m270[0m[2m:[33m43[0m[2m)[0m
[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mSystem Metrics[2m >[0m[1m should calculate task counts correctly[0m [0m[2m[0.33ms[0m[2m][0m
[0m[0m[1m273 |[0m         })[0m[2m;[0m
[0m[1m274 |[0m 
[0m[1m275 |[0m         it([0m[32m'should track websocket connections'[0m, [0m[35masync[0m () => {
[0m[1m276 |[0m             [0m[35mconst[0m metrics = [0m[35mawait[0m enhancedTaskProcessor[0m[3m[1m.getSystemMetrics[0m([0m[33m24[0m)[0m[2m;[0m
[0m[1m277 |[0m 
[0m[1m278 |[0m             expect(metrics.websocket_connections)[0m[3m[1m.toBeGreaterThanOrEqual[0m([0m[33m0[0m)[0m[2m;[0m
                                                        [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mExpected and actual values must be numbers or bigints[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/enhanced-task-processor.test.ts[0m[2m:[0m[33m278[0m[2m:[33m51[0m[2m)[0m
[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mSystem Metrics[2m >[0m[1m should track websocket connections[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m[32m✓[0m [0mEnhanced Task Processor[2m > [0mShutdown[2m >[0m[1m should shutdown gracefully[0m [0m[2m[1.66ms[0m[2m][0m
[0m[1m295 |[0m             mockEmbeddingManager.shutdown[0m[3m[1m.mockRejectedValueOnce[0m([0m[35mnew[0m [0m[1mError[0m([0m[32m'Shutdown failed'[0m))[0m[2m;[0m
[0m[1m296 |[0m 
[0m[1m297 |[0m             [0m[2m// Should not throw[0m
[0m[1m298 |[0m             [0m[35mawait[0m enhancedTaskProcessor[0m[3m[1m.shutdown[0m()[0m[2m;[0m
[0m[1m299 |[0m 
[0m[1m300 |[0m             expect(mockLogger.error)[0m[3m[1m.toHaveBeenCalledWith[0m(
                                           [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveBeenCalledWith[2m([0m[32mexpected[0m[2m)[0m

Number of calls: [31m0[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/enhanced-task-processor.test.ts[0m[2m:[0m[33m300[0m[2m:[33m38[0m[2m)[0m
[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mShutdown[2m >[0m[1m should handle shutdown errors[0m [0m[2m[1.69ms[0m[2m][0m
[0m[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m290 |[0m         })[0m[2m;[0m
[0m[1m291 |[0m 
[0m[1m292 |[0m         it([0m[32m'should handle shutdown errors'[0m, [0m[35masync[0m () => {
[0m[1m293 |[0m             [0m[35mawait[0m enhancedTaskProcessor[0m[3m[1m.initialize[0m()[0m[2m;[0m
[0m[1m294 |[0m 
[0m[1m295 |[0m             mockEmbeddingManager.shutdown[0m[3m[1m.mockRejectedValueOnce[0m([0m[35mnew[0m [0m[1mError[0m([0m[32m'Shutdown failed'[0m))[0m[2m;[0m
                                                                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mShutdown failed[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/enhanced-task-processor.test.ts[0m[2m:[0m[33m295[0m[2m:[33m65[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m295 |[0m             mockEmbeddingManager.shutdown[0m[3m[1m.mockRejectedValueOnce[0m([0m[35mnew[0m [0m[1mError[0m([0m[32m'Shutdown failed'[0m))[0m[2m;[0m
[0m[1m296 |[0m 
[0m[1m297 |[0m             [0m[2m// Should not throw[0m
[0m[1m298 |[0m             [0m[35mawait[0m enhancedTaskProcessor[0m[3m[1m.shutdown[0m()[0m[2m;[0m
[0m[1m299 |[0m 
[0m[1m300 |[0m             expect(mockLogger.error)[0m[3m[1m.toHaveBeenCalledWith[0m(
                                           [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveBeenCalledWith[2m([0m[32mexpected[0m[2m)[0m

Number of calls: [31m0[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/enhanced-task-processor.test.ts[0m[2m:[0m[33m300[0m[2m:[33m38[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m
test/planner-service-badge.test.ts:
[0m[32m✓[0m [0mPlannerService Badge Helpers[2m > [0mgetContextUsageBadge[2m >[0m[1m handles empty or null values[0m [0m[2m[0.82ms[0m[2m][0m
[0m[32m✓[0m [0mPlannerService Badge Helpers[2m > [0mgetContextUsageBadge[2m >[0m[1m renders counts correctly[0m [0m[2m[0.06ms[0m[2m][0m
[0m[32m✓[0m [0mPlannerService Badge Helpers[2m > [0mgetContextUsageBadge[2m >[0m[1m handles invalid JSON input[0m [0m[2m[0.06ms[0m[2m][0m
[0m[32m✓[0m [0mPlannerService Badge Helpers[2m > [0mgetSubtaskCountBadge[2m >[0m[1m returns color based on subtask count[0m [0m[2m[0.07ms[0m[2m][0m
[0m
test/enhanced-learning-service.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m94 |[0m             enable_cross_modal_analysis: [0m[33mfalse[0m, [0m[2m// Disable for testing[0m
[0m[1m95 |[0m             enable_temporal_analysis: [0m[33mtrue[0m
[0m[1m96 |[0m         })[0m[2m;[0m
[0m[1m97 |[0m 
[0m[1m98 |[0m         [0m[2m// Mock the database getter[0m
[0m[1m99 |[0m         [0m[35mconst[0m originalGetDatabase = require([0m[32m'../src/db'[0m).getDatabase[0m[2m;[0m
                                                              [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mAttempted to assign to readonly property.[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/enhanced-learning-service.test.ts[0m[2m:[0m[33m99[0m[2m:[33m58[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/enhanced-learning-service.test.ts[0m[2m:[0m[33m10[0m[2m:[33m15[0m[2m)[0m
[0m      [2mat [0m[0m[36m/workspace/banana-bun/test/enhanced-learning-service.test.ts[0m[2m:[0m[33m6[0m[2m:[33m1[0m
[0m      [2mat [0m[0m[1m[3mloadAndEvaluateModule[0m[2m ([0m[0m[36m[0m[33m2[0m[2m:[33m1[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should generate enhanced learning rules from feedback patterns[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should store enhanced learning rules in database[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should apply rules automatically to media[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should calculate strategy performance[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should filter and rank rules by quality[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should handle cross-modal analysis when enabled[0m
[0m[0m
test/utils.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[31merror[0m[2m: [0m[1mCannot find package 'yaml' from '/workspace/banana-bun/src/utils/parser.ts'[0m
[0m[2m-------------------------------[0m

[0m
test/executors.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[2m-------------------------------[0m

[0m
test/mcp-manager.test.ts:
[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mInitialization[2m >[0m[1m should initialize MCP servers successfully[0m [0m[2m[1.51ms[0m[2m][0m
[0m[0m[1m73 |[0m                 expect[0m[3m[1m.stringContaining[0m([0m[32m'MCP Manager initialized'[0m)
[0m[1m74 |[0m             )[0m[2m;[0m
[0m[1m75 |[0m         })[0m[2m;[0m
[0m[1m76 |[0m 
[0m[1m77 |[0m         it([0m[32m'should handle initialization errors gracefully'[0m, [0m[35masync[0m () => {
[0m[1m78 |[0m             mockMcpClient.connect[0m[3m[1m.mockRejectedValueOnce[0m([0m[35mnew[0m [0m[1mError[0m([0m[32m'Connection failed'[0m))[0m[2m;[0m
                                                             [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mConnection failed[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-manager.test.ts[0m[2m:[0m[33m78[0m[2m:[33m57[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-manager.test.ts[0m[2m:[0m[33m77[0m[2m:[33m62[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mInitialization[2m >[0m[1m should handle initialization errors gracefully[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mInitialization[2m >[0m[1m should not initialize twice[0m [0m[2m[0.56ms[0m[2m][0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should process task with ChromaDB integration[0m [0m[2m[[0m[33m106588.86ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should process task with ChromaDB integration[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should handle MCP tool call failures[0m [0m[2m[[0m[33m106589.26ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should handle MCP tool call failures[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should process different task types appropriately[0m [0m[2m[[0m[33m106589.61ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m         rocess different task types appropriately[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should complete task and store learning data[0m [0m[2m[[0m[33m106590.02ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should complete task and store learning data[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should handle completion with failure results[0m [0m[2m[[0m[33m106590.40ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should handle completion with failure results[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should handle storage errors gracefully[0m [0m[2m[[0m[33m106592.32ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m K  andle storage errors gracefully[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mLive Dashboard Integration[2m >[0m[1m should provide live dashboard information[0m [0m[2m[[0m[33m106592.75ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mLive Dashboard Integration[2m >[0m[1m should provide live dashboard information[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mLive Dashboard Integration[2m >[0m[1m should handle dashboard info errors[0m [0m[2m[[0m[33m106593.09ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m PK  andle dashboard info errors[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mSystem Metrics[2m >[0m[1m should retrieve system metrics[0m [0m[2m[[0m[33m106593.61ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mSystem Metrics[2m >[0m[1m should retrieve system metrics[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mSystem Metrics[2m >[0m[1m should handle metrics retrieval errors[0m [0m[2m[[0m[33m106593.96ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m  K  andle metrics retrieval errors[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mWebhook Notifications[2m >[0m[1m should setup webhook notifications[0m [0m[2m[[0m[33m106594.51ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mWebhook Notifications[2m >[0m[1m should setup webhook notifications[0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mWebhook Notifications[2m >[0m[1m should handle webhook setup errors[0m [0m[2m[[0m[33m106594.77ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m K  andle webhook setup errors[0m
[0m[0m[1m359 |[0m         })[0m[2m;[0m
[0m[1m360 |[0m     })[0m[2m;[0m
[0m[1m361 |[0m 
[0m[1m362 |[0m     describe([0m[32m'Connection Management'[0m, () => {
[0m[1m363 |[0m         it([0m[32m'should check connection status'[0m, () => {
[0m[1m364 |[0m             [0m[35mconst[0m isConnected = mcpManager[0m[3m[1m.isConnected[0m()[0m[2m;[0m
                                                 [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpManager.isConnected is not a function. (In 'mcpManager.isConnected()', 'mcpManager.isConnected' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-manager.test.ts[0m[2m:[0m[33m364[0m[2m:[33m44[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mConnection Management[2m >[0m[1m should check connection status[0m [0m[2m[0.09ms[0m[2m][0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mConnection Management[2m >[0m[1m should reconnect on connection loss[0m [0m[2m[0.33ms[0m[2m][0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mShutdown[2m >[0m[1m should shutdown gracefully[0m [0m[2m[0.40ms[0m[2m][0m
[0m[0m[1m72 |[0m             [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP configuration not loaded'[0m)[0m[2m;[0m
[0m[1m73 |[0m         }
[0m[1m74 |[0m 
[0m[1m75 |[0m         [0m[35mconst[0m serverPromises = Object[0m[3m[1m.entries[0m([0m[33mthis[0m.config.mcpServers)[0m[3m[1m.map[0m([0m[35masync[0m ([name, serverConfig]) => {
[0m[1m76 |[0m             [0m[35mtry[0m {
[0m[1m77 |[0m                 [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m(name, serverConfig.command, serverConfig.args)[0m[2m;[0m
                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer(name, serverConfig.command, serverConfig.args)', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m77[0m[2m:[33m33[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m83[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mmap[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m75[0m[2m:[33m71[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mstartServers[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m70[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3minitialize[0m[2m ([0m[0m[36m/workspace/banana-bun/src/mcp/mcp-manager.ts[0m[2m:[0m[33m47[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mMCP Manager[2m > [0mShutdown[2m >[0m[1m should handle shutdown errors[0m [0m[2m[0.47ms[0m[2m][0m
[0m[0m[32m✓[0m [0mMCP Manager[2m > [0mShutdown[2m >[0m[1m should handle shutdown without initialization[0m [0m[2m[0.07ms[0m[2m][0m
[0m
test/retry-system.test.ts:
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should get retry policy for task type[0m [0m[2m[0.43ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should use default policy for unknown task type[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should determine retry for retryable error[0m [0m[2m[0.62ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should not retry for non-retryable error[0m [0m[2m[0.21ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should not retry when max retries exceeded[0m [0m[2m[0.24ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should calculate exponential backoff delay[0m [0m[2m[0.32ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should record retry attempts[0m [0m[2m[0.39ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should update task retry info[0m [0m[2m[0.35ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should get tasks ready for retry[0m [0m[2m[0.35ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mRetryManager[2m >[0m[1m should get retry statistics[0m [0m[2m[0.46ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mError Classification[2m >[0m[1m should classify timeout errors as retryable[0m [0m[2m[0.31ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mError Classification[2m >[0m[1m should classify syntax errors as non-retryable[0m [0m[2m[0.28ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mMigration[2m >[0m[1m should verify migration was successful[0m [0m[2m[0.33ms[0m[2m][0m
[0m[32m✓[0m [0mRetry System[2m > [0mMigration[2m >[0m[1m should have created retry policies for all task types[0m [0m[2m[0.15ms[0m[2m][0m
[0m
test/hash-util.test.ts:
[0m[1m18 |[0m 
[0m[1m19 |[0m   it([0m[32m'generates expected SHA-256 hash for known content'[0m, [0m[35masync[0m () => {
[0m[1m20 |[0m     [0m[35mconst[0m file = join(dir, [0m[32m'hello.txt'[0m)[0m[2m;[0m
[0m[1m21 |[0m     [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m(file, [0m[32m'hello world'[0m)[0m[2m;[0m
[0m[1m22 |[0m     [0m[35mconst[0m hash = [0m[35mawait[0m hashFile(file)[0m[2m;[0m
[0m[1m23 |[0m     expect(hash)[0m[3m[1m.toBe[0m([0m[32m'b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9'[0m)[0m[2m;[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [2m"[0m[32mb94d27b9934d3e08a52e52d7da7dabfa[0m[2mc[0m[32m484efe37a5380ee9088f7[0m[2ma[0m[32mce[0m[2m2[0m[32mefcde9[0m[2m"[0m
Received: [2m"[0m[31mmo[0m[2mc[0m[31mk-h[0m[2ma[0m[31msh-1[0m[2m2[0m[31m3[0m[2m"[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/hash-util.test.ts[0m[2m:[0m[33m23[0m[2m:[33m18[0m[2m)[0m
[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m generates expected SHA-256 hash for known content[0m [0m[2m[0.55ms[0m[2m][0m
[0m[0m[1m31 |[0m     [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m(file2, [0m[32m'content2'[0m)[0m[2m;[0m
[0m[1m32 |[0m 
[0m[1m33 |[0m     [0m[35mconst[0m hash1 = [0m[35mawait[0m hashFile(file1)[0m[2m;[0m
[0m[1m34 |[0m     [0m[35mconst[0m hash2 = [0m[35mawait[0m hashFile(file2)[0m[2m;[0m
[0m[1m35 |[0m 
[0m[1m36 |[0m     expect(hash1).not[0m[3m[1m.toBe[0m(hash2)[0m[2m;[0m
                           [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mnot[2m.[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: not [32m"mock-hash-123"[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/hash-util.test.ts[0m[2m:[0m[33m36[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m generates different hashes for different content[0m [0m[2m[0.47ms[0m[2m][0m
[0m[0m[32m✓[0m [0mhashFile utility[2m >[0m[1m generates consistent hashes for same content[0m [0m[2m[0.36ms[0m[2m][0m
[0m[1m56 |[0m     [0m[35mconst[0m file = join(dir, [0m[32m'empty.txt'[0m)[0m[2m;[0m
[0m[1m57 |[0m     [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m(file, [0m[32m''[0m)[0m[2m;[0m
[0m[1m58 |[0m 
[0m[1m59 |[0m     [0m[35mconst[0m hash = [0m[35mawait[0m hashFile(file)[0m[2m;[0m
[0m[1m60 |[0m 
[0m[1m61 |[0m     expect(hash)[0m[3m[1m.toBe[0m([0m[32m'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'[0m)[0m[2m;[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [2m"[0m[32me3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934[0m[2mc[0m[2ma[0m[32m49599[0m[2m1[0m[32mb785[0m[2m2[0m[32mb855[0m[2m"[0m
Received: [2m"[0m[31mmo[0m[2mc[0m[31mk-h[0m[2ma[0m[31msh-[0m[2m1[0m[2m2[0m[31m3[0m[2m"[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/hash-util.test.ts[0m[2m:[0m[33m61[0m[2m:[33m18[0m[2m)[0m
[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m handles empty files[0m [0m[2m[0.30ms[0m[2m][0m
[0m[0m[1m67 |[0m     [0m[35mconst[0m binaryData = [0m[35mnew[0m [0m[1mUint8Array[0m([[0m[33m0[0m, [0m[33m1[0m, [0m[33m2[0m, [0m[33m3[0m, [0m[33m255[0m, [0m[33m254[0m, [0m[33m253[0m])[0m[2m;[0m
[0m[1m68 |[0m     [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m(file, binaryData)[0m[2m;[0m
[0m[1m69 |[0m 
[0m[1m70 |[0m     [0m[35mconst[0m hash = [0m[35mawait[0m hashFile(file)[0m[2m;[0m
[0m[1m71 |[0m 
[0m[1m72 |[0m     expect(hash)[0m[3m[1m.toHaveLength[0m([0m[33m64[0m)[0m[2m;[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveLength[2m([0m[32mexpected[0m[2m)[0m

Expected length: [32m64[0m
Received length: [31m13[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/hash-util.test.ts[0m[2m:[0m[33m72[0m[2m:[33m18[0m[2m)[0m
[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m handles binary files[0m [0m[2m[0.33ms[0m[2m][0m
[0m[0m[1m78 |[0m     [0m[35mconst[0m largeContent = [0m[32m'x'[0m[0m[3m[1m.repeat[0m([0m[33m10000[0m)[0m[2m;[0m [0m[2m// 10KB file[0m
[0m[1m79 |[0m     [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m(file, largeContent)[0m[2m;[0m
[0m[1m80 |[0m 
[0m[1m81 |[0m     [0m[35mconst[0m hash = [0m[35mawait[0m hashFile(file)[0m[2m;[0m
[0m[1m82 |[0m 
[0m[1m83 |[0m     expect(hash)[0m[3m[1m.toHaveLength[0m([0m[33m64[0m)[0m[2m;[0m
                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveLength[2m([0m[32mexpected[0m[2m)[0m

Expected length: [32m64[0m
Received length: [31m13[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/hash-util.test.ts[0m[2m:[0m[33m83[0m[2m:[33m18[0m[2m)[0m
[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m handles large files[0m [0m[2m[0.30ms[0m[2m][0m
[0m[0m[1m85 |[0m   })[0m[2m;[0m
[0m[1m86 |[0m 
[0m[1m87 |[0m   it([0m[32m'throws error for non-existent files'[0m, [0m[35masync[0m () => {
[0m[1m88 |[0m     [0m[35mconst[0m nonExistentFile = join(dir, [0m[32m'does-not-exist.txt'[0m)[0m[2m;[0m
[0m[1m89 |[0m 
[0m[1m90 |[0m     [0m[35mawait[0m expect(hashFile(nonExistentFile)).rejects[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m

Expected promise that rejects[0m
Received promise that resolved: [31mPromise { <resolved> }[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/hash-util.test.ts[0m[2m:[0m[33m90[0m[2m:[33m53[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/hash-util.test.ts[0m[2m:[0m[33m87[0m[2m:[33m45[0m[2m)[0m
[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m throws error for non-existent files[0m [0m[2m[0.17ms[0m[2m][0m
[0m [0m[1m95 |[0m     const specialContent = 'Hello 世界! 🌍 \n\t\r Special chars: àáâãäåæçèéêë';
 [0m[1m96 |[0m     [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m(file, specialContent, [0m[32m'utf-8'[0m)[0m[2m;[0m
 [0m[1m97 |[0m 
 [0m[1m98 |[0m     [0m[35mconst[0m hash = [0m[35mawait[0m hashFile(file)[0m[2m;[0m
 [0m[1m99 |[0m 
[0m[1m100 |[0m     expect(hash)[0m[3m[1m.toHaveLength[0m([0m[33m64[0m)[0m[2m;[0m
                       [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveLength[2m([0m[32mexpected[0m[2m)[0m

Expected length: [32m64[0m
Received length: [31m13[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/hash-util.test.ts[0m[2m:[0m[33m100[0m[2m:[33m18[0m[2m)[0m
[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m handles files with special characters in content[0m [0m[2m[0.37ms[0m[2m][0m
[0m[0m
test/smart-transcribe.test.ts:
[0m[32m✓[0m [0mSmart Transcribe CLI Parsing[2m >[0m[1m parses file path parameter[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mSmart Transcribe CLI Parsing[2m >[0m[1m parses quality parameter with valid values[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mSmart Transcribe CLI Parsing[2m >[0m[1m rejects invalid quality values[0m [0m[2m[0.06ms[0m[2m][0m
[0m[32m✓[0m [0mSmart Transcribe CLI Parsing[2m >[0m[1m parses batch directory parameter[0m [0m[2m[0.04ms[0m[2m][0m
[0m[32m✓[0m [0mSmart Transcribe CLI Parsing[2m >[0m[1m parses feedback parameters[0m [0m[2m[0.09ms[0m[2m][0m
[0m[32m✓[0m [0mSmart Transcribe CLI Parsing[2m >[0m[1m validates rating range[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mFile Validation[2m >[0m[1m validates audio file exists[0m [0m[2m[0.36ms[0m[2m][0m
[0m[1m149 |[0m   })[0m[2m;[0m
[0m[1m150 |[0m 
[0m[1m151 |[0m   it([0m[32m'rejects non-existent files'[0m, [0m[35masync[0m () => {
[0m[1m152 |[0m     [0m[35mconst[0m file = join(dir, [0m[32m'missing.mp3'[0m)[0m[2m;[0m
[0m[1m153 |[0m     [0m[35mawait[0m expect(cli[0m[3m[1m.validateAudioFile[0m(file))
[0m[1m154 |[0m       .rejects[0m[3m[1m.toThrow[0m([0m[32m`Audio file not found: [0m${file}[0m[32m`[0m)[0m[2m;[0m
                     [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m

Expected promise that rejects[0m
Received promise that resolved: [31mPromise { <resolved> }[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/smart-transcribe.test.ts[0m[2m:[0m[33m154[0m[2m:[33m16[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/smart-transcribe.test.ts[0m[2m:[0m[33m151[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mFile Validation[2m >[0m[1m rejects non-existent files[0m [0m[2m[0.21ms[0m[2m][0m
[0m[0m[32m✓[0m [0mFile Validation[2m >[0m[1m rejects unsupported file formats[0m [0m[2m[0.28ms[0m[2m][0m
[0m[32m✓[0m [0mFile Validation[2m >[0m[1m finds audio files in directory[0m [0m[2m[1.02ms[0m[2m][0m
[0m[32m✓[0m [0mHelper functions[2m >[0m[1m formats time[0m [0m[2m[0.06ms[0m[2m][0m
[0m[32m✓[0m [0mHelper functions[2m >[0m[1m formats duration[0m [0m[2m[0.05ms[0m[2m][0m
[0m
test/cli-tools.test.ts:
[0m[32m✓[0m [0mCLI Tools[2m > [0mTask Linting (lint-task.ts)[2m >[0m[1m should validate task file structure[0m [0m[2m[0.59ms[0m[2m][0m
[0m[32m✓[0m [0mCLI Tools[2m > [0mTask Linting (lint-task.ts)[2m >[0m[1m should check for circular dependencies[0m [0m[2m[0.35ms[0m[2m][0m
[0m[32m✓[0m [0mCLI Tools[2m > [0mTask Linting (lint-task.ts)[2m >[0m[1m should validate task metadata[0m [0m[2m[0.25ms[0m[2m][0m
[0m[32m✓[0m [0mCLI Tools[2m > [0mSchedule Manager (schedule-manager.ts)[2m >[0m[1m should list all scheduled tasks[0m [0m[2m[0.30ms[0m[2m][0m
[0m[32m✓[0m [0mCLI Tools[2m > [0mSchedule Manager (schedule-manager.ts)[2m >[0m[1m should create new schedule for task[0m [0m[2m[0.24ms[0m[2m][0m
[0m[32m✓[0m [0mCLI Tools[2m > [0mSchedule Manager (schedule-manager.ts)[2m >[0m[1m should enable/disable schedules[0m [0m[2m[0.21ms[0m[2m][0m
[0m[1m306 |[0m 
[0m[1m307 |[0m             [0m[2m// Delete schedule[0m
[0m[1m308 |[0m             mockDb[0m[3m[1m.run[0m([0m[32m'DELETE FROM task_schedules WHERE id = 1'[0m)[0m[2m;[0m
[0m[1m309 |[0m 
[0m[1m310 |[0m             [0m[35mconst[0m schedule = mockDb[0m[3m[1m.query[0m([0m[32m'SELECT * FROM task_schedules WHERE id = 1'[0m)[0m[3m[1m.get[0m()[0m[2m;[0m
[0m[1m311 |[0m             expect(schedule)[0m[3m[1m.toBeUndefined[0m()[0m[2m;[0m
                                   [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBeUndefined[2m([0m[2m)[0m

Received: [31mnull[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/cli-tools.test.ts[0m[2m:[0m[33m311[0m[2m:[33m30[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/cli-tools.test.ts[0m[2m:[0m[33m296[0m[2m:[33m39[0m[2m)[0m
[0m[31m✗[0m [0mCLI Tools[2m > [0mSchedule Manager (schedule-manager.ts)[2m >[0m[1m should delete schedules[0m [0m[2m[0.30ms[0m[2m][0m
[0m[0m[32m✓[0m [0mCLI Tools[2m > [0mSchedule Manager (schedule-manager.ts)[2m >[0m[1m should validate cron expressions[0m [0m[2m[0.30ms[0m[2m][0m
[0m[32m✓[0m [0mCLI Tools[2m > [0mCLI Error Handling[2m >[0m[1m should handle database connection errors[0m [0m[2m[0.07ms[0m[2m][0m
[0m[32m✓[0m [0mCLI Tools[2m > [0mCLI Error Handling[2m >[0m[1m should handle invalid command line arguments[0m [0m[2m[0.12ms[0m[2m][0m
[0m
test/planner-service.db.test.ts:
[0m[32m✓[0m [0mPlannerService Database Functions[2m >[0m[1m returns latest planner result for a task[0m [0m[2m[0.22ms[0m[2m][0m
[0m[32m✓[0m [0mPlannerService Database Functions[2m >[0m[1m calculates planner metrics correctly[0m [0m[2m[0.34ms[0m[2m][0m
[0m[32m✓[0m [0mPlannerService Database Functions[2m >[0m[1m retrieves task planner history[0m [0m[2m[0.12ms[0m[2m][0m
[0m[32m✓[0m [0mPlannerService Database Functions[2m >[0m[1m retrieves recent planner results[0m [0m[2m[0.15ms[0m[2m][0m
[0m
test/resource-optimization-server.test.ts:
[0m[32m✓[0m [0mResource Optimization Server[2m > [0mTool Registration[2m >[0m[1m should register all required tools[0m [0m[2m[2.62ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0mTool Registration[2m >[0m[1m should register correct tool names[0m [0m[2m[0.40ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0manalyze_resource_usage[2m >[0m[1m should analyze current resource metrics[0m [0m[2m[0.19ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0manalyze_resource_usage[2m >[0m[1m should identify bottlenecks based on thresholds[0m [0m[2m[0.13ms[0m[2m][0m
[0m[1m208 |[0m                 [0m[2m// Deduct points for large queue[0m
[0m[1m209 |[0m                 [0m[35mif[0m (testCase.queue > [0m[33m10[0m) score -= [0m[33m15[0m[0m[2m;[0m
[0m[1m210 |[0m                 [0m[35melse[0m [0m[35mif[0m (testCase.queue > [0m[33m5[0m) score -= [0m[33m5[0m[0m[2m;[0m
[0m[1m211 |[0m 
[0m[1m212 |[0m                 score = Math[0m[3m[1m.max[0m(score, [0m[33m0[0m)[0m[2m;[0m
[0m[1m213 |[0m                 expect(score)[0m[3m[1m.toBe[0m(testCase.expectedScore)[0m[2m;[0m
                                    [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32m85[0m
Received: [31m75[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/resource-optimization-server.test.ts[0m[2m:[0m[33m213[0m[2m:[33m31[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/resource-optimization-server.test.ts[0m[2m:[0m[33m191[0m[2m:[33m51[0m[2m)[0m
[0m[31m✗[0m [0mResource Optimization Server[2m > [0manalyze_resource_usage[2m >[0m[1m should calculate optimization score[0m [0m[2m[0.45ms[0m[2m][0m
[0m[0m[32m✓[0m [0mResource Optimization Server[2m > [0moptimize_load_balancing[2m >[0m[1m should analyze current load distribution[0m [0m[2m[0.54ms[0m[2m][0m
[0m[1m279 |[0m                         }
[0m[1m280 |[0m                         [0m[35mbreak[0m[0m[2m;[0m
[0m[1m281 |[0m                 }
[0m[1m282 |[0m 
[0m[1m283 |[0m                 expect(optimized)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
[0m[1m284 |[0m                 expect(Object[0m[3m[1m.keys[0m(optimized))[0m[3m[1m.toHaveLength[0m([0m[33m24[0m)[0m[2m;[0m
                                                     [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoHaveLength[2m([0m[32mexpected[0m[2m)[0m

Expected length: [32m24[0m
Received length: [31m14[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/resource-optimization-server.test.ts[0m[2m:[0m[33m284[0m[2m:[33m48[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/resource-optimization-server.test.ts[0m[2m:[0m[33m245[0m[2m:[33m64[0m[2m)[0m
[0m[31m✗[0m [0mResource Optimization Server[2m > [0moptimize_load_balancing[2m >[0m[1m should support different optimization strategies[0m [0m[2m[0.61ms[0m[2m][0m
[0m[0m[32m✓[0m [0mResource Optimization Server[2m > [0moptimize_load_balancing[2m >[0m[1m should calculate variance reduction[0m [0m[2m[0.27ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0mpredict_resource_bottlenecks[2m >[0m[1m should predict bottlenecks within time horizon[0m [0m[2m[0.26ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0mpredict_resource_bottlenecks[2m >[0m[1m should categorize severity levels[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0msuggest_scheduling_windows[2m >[0m[1m should analyze historical performance by hour[0m [0m[2m[0.30ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0msuggest_scheduling_windows[2m >[0m[1m should generate scheduling windows for different criteria[0m [0m[2m[0.70ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0mmonitor_optimization_effectiveness[2m >[0m[1m should track optimization metrics[0m [0m[2m[0.13ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0mmonitor_optimization_effectiveness[2m >[0m[1m should calculate improvement percentages[0m [0m[2m[0.14ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[0.16ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0mError Handling[2m >[0m[1m should handle invalid optimization strategies[0m [0m[2m[0.07ms[0m[2m][0m
[0m[32m✓[0m [0mResource Optimization Server[2m > [0mPerformance[2m >[0m[1m should handle large task datasets efficiently[0m [0m[2m[4.79ms[0m[2m][0m
[0m
test/migration-runner.test.ts:
[0m[32m✓[0m [0mMigration Runner[2m > [0mMigration Tracking[2m >[0m[1m should initialize migration tracking table[0m [0m[2m[0.34ms[0m[2m][0m
[0m[32m✓[0m [0mMigration Runner[2m > [0mMigration Tracking[2m >[0m[1m should track migration status correctly[0m [0m[2m[0.17ms[0m[2m][0m
[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mMigration Execution[2m >[0m[1m should run all migrations successfully[0m [0m[2m[9.03ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mMigration Execution[2m >[0m[1m should not re-run already applied migrations[0m [0m[2m[5.71ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mMigration Execution[2m >[0m[1m should verify migrations after running[0m [0m[2m[5.49ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mConvenience Functions[2m >[0m[1m should run all migrations via convenience function[0m [0m[2m[5.84ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mConvenience Functions[2m >[0m[1m should verify migrations via convenience function[0m [0m[2m[6.06ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should create task_dependencies table after migration[0m [0m[2m[5.71ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should create retry_history table after migration[0m [0m[2m[5.75ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should create retry_policies table after migration[0m [0m[2m[5.62ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should create task_schedules table after migration[0m [0m[2m[5.76ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should add retry columns to tasks table[0m [0m[2m[5.94ms[0m[2m][0m
[0m[0m[1m184 |[0m                     logger.info(`✅ Migration ${migration.version} completed successfully`);
[0m[1m185 |[0m                 }
[0m[1m186 |[0m 
[0m[1m187 |[0m             } [0m[35mcatch[0m (error) {
[0m[1m188 |[0m                 logger.error(`❌ Migration ${migration.version} failed`, { error });
[0m[1m189 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m`Migration [0m${migration.version}[0m[32m failed: [0m${error}[0m[32m`[0m)[0m[2m;[0m
                            [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMigration 008 failed: SQLiteError: no such table: media_transcripts[0m
[0m      [2mat [0m[0m[1m[3mrunAllMigrations[0m[2m ([0m[0m[36m/workspace/banana-bun/src/migrations/migrate-all.ts[0m[2m:[0m[33m189[0m[2m:[33m23[0m[2m)[0m
[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should add schedule columns to tasks table[0m [0m[2m[5.86ms[0m[2m][0m
[0m[0m[32m✓[0m [0mMigration Runner[2m > [0mError Handling[2m >[0m[1m should handle migration errors gracefully[0m [0m[2m[0.12ms[0m[2m][0m
[0m
test/periodic-tasks.test.ts:
[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mCronParser[2m >[0m[1m should parse valid cron expressions[0m [0m[2m[[1m100.77ms[0m[2m][0m
[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mCronParser[2m >[0m[1m should reject invalid cron expressions[0m [0m[2m[0.19ms[0m[2m][0m
[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mCronParser[2m >[0m[1m should calculate next execution times correctly[0m [0m[2m[2.77ms[0m[2m][0m
[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mCronParser[2m >[0m[1m should handle step values correctly[0m [0m[2m[0.45ms[0m[2m][0m
[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mCronParser[2m >[0m[1m should handle named months and days[0m [0m[2m[[1m799.19ms[0m[2m][0m
[0m[1m157 |[0m             [0m[2m// Verify schedule was created[0m
[0m[1m158 |[0m             [0m[35mconst[0m schedule = db[0m[3m[1m.query[0m([0m[32m'SELECT * FROM task_schedules WHERE id = ?'[0m)[0m[3m[1m.get[0m(scheduleId) [0m[34mas[0m [0m[34many[0m[0m[2m;[0m
[0m[1m159 |[0m             expect(schedule)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
[0m[1m160 |[0m             expect(schedule.template_task_id)[0m[3m[1m.toBe[0m([0m[33m1[0m)[0m[2m;[0m
[0m[1m161 |[0m             expect(schedule.cron_expression)[0m[3m[1m.toBe[0m([0m[32m'0 * * * *'[0m)[0m[2m;[0m
[0m[1m162 |[0m             expect(schedule.enabled)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                           [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31m1[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/periodic-tasks.test.ts[0m[2m:[0m[33m162[0m[2m:[33m38[0m[2m)[0m
[0m[31m✗[0m [0mPeriodic Tasks System[2m > [0mTaskScheduler[2m >[0m[1m should create a schedule for a task[0m [0m[2m[1.23ms[0m[2m][0m
[0m[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mTaskScheduler[2m >[0m[1m should reject invalid cron expressions[0m [0m[2m[0.25ms[0m[2m][0m
[0m[1m192 |[0m 
[0m[1m193 |[0m             [0m[2m// Disable it[0m
[0m[1m194 |[0m             [0m[35mawait[0m scheduler[0m[3m[1m.toggleSchedule[0m(scheduleId, [0m[33mfalse[0m)[0m[2m;[0m
[0m[1m195 |[0m 
[0m[1m196 |[0m             [0m[35mconst[0m schedule = db[0m[3m[1m.query[0m([0m[32m'SELECT * FROM task_schedules WHERE id = ?'[0m)[0m[3m[1m.get[0m(scheduleId) [0m[34mas[0m [0m[34many[0m[0m[2m;[0m
[0m[1m197 |[0m             expect(schedule.enabled)[0m[3m[1m.toBe[0m([0m[33mfalse[0m)[0m[2m;[0m
                                           [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mfalse[0m
Received: [31m0[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/periodic-tasks.test.ts[0m[2m:[0m[33m197[0m[2m:[33m38[0m[2m)[0m
[0m[31m✗[0m [0mPeriodic Tasks System[2m > [0mTaskScheduler[2m >[0m[1m should toggle schedule enabled state[0m [0m[2m[0.98ms[0m[2m][0m
[0m[0m[1m220 |[0m             [0m[35mconst[0m schedule = db[0m[3m[1m.query[0m([0m[32m'SELECT * FROM task_schedules WHERE id = ?'[0m)[0m[3m[1m.get[0m(scheduleId)[0m[2m;[0m
[0m[1m221 |[0m             expect(schedule)[0m[3m[1m.toBeNull[0m()[0m[2m;[0m
[0m[1m222 |[0m 
[0m[1m223 |[0m             [0m[2m// Verify task is no longer marked as template[0m
[0m[1m224 |[0m             [0m[35mconst[0m updatedTask = db[0m[3m[1m.query[0m([0m[32m'SELECT * FROM tasks WHERE id = 1'[0m)[0m[3m[1m.get[0m() [0m[34mas[0m [0m[34many[0m[0m[2m;[0m
[0m[1m225 |[0m             expect(updatedTask.is_template)[0m[3m[1m.toBe[0m([0m[33mfalse[0m)[0m[2m;[0m
                                                  [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mfalse[0m
Received: [31m0[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/periodic-tasks.test.ts[0m[2m:[0m[33m225[0m[2m:[33m45[0m[2m)[0m
[0m[31m✗[0m [0mPeriodic Tasks System[2m > [0mTaskScheduler[2m >[0m[1m should delete a schedule[0m [0m[2m[0.91ms[0m[2m][0m
[0m[0m[1m387 |[0m         [0m[35mconst[0m scheduledInstances = [0m[33mthis[0m.db[0m[3m[1m.query[0m([0m[32m'SELECT COUNT(*) as count FROM task_instances WHERE status = "scheduled"'[0m)[0m[3m[1m.get[0m() [0m[34mas[0m { count: [0m[34mnumber[0m }[0m[2m;[0m
[0m[1m388 |[0m         [0m[35mconst[0m runningInstances = [0m[33mthis[0m.db[0m[3m[1m.query[0m([0m[32m'SELECT COUNT(*) as count FROM task_instances WHERE status = "running"'[0m)[0m[3m[1m.get[0m() [0m[34mas[0m { count: [0m[34mnumber[0m }[0m[2m;[0m
[0m[1m389 |[0m         [0m[35mconst[0m completedToday = [0m[33mthis[0m.db[0m[3m[1m.query[0m([0m[32m'SELECT COUNT(*) as count FROM task_instances WHERE status = "completed" AND completed_at >= ?'[0m)[0m[3m[1m.get[0m(todayStr) [0m[34mas[0m { count: [0m[34mnumber[0m }[0m[2m;[0m
[0m[1m390 |[0m         [0m[35mconst[0m failedToday = [0m[33mthis[0m.db[0m[3m[1m.query[0m([0m[32m'SELECT COUNT(*) as count FROM task_instances WHERE status = "failed" AND completed_at >= ?'[0m)[0m[3m[1m.get[0m(todayStr) [0m[34mas[0m { count: [0m[34mnumber[0m }[0m[2m;[0m
[0m[1m391 |[0m 
[0m[1m392 |[0m         [0m[35mconst[0m upcomingRuns = [0m[33mthis[0m.db[0m[3m[1m.query[0m([0m[32m`[0m
                                           [31m[1m^[0m
[0m[31mSQLiteError[0m[2m:[0m [1mno such column: schedule_id[0m
      errno[0m[2m:[0m [0m[33m1[0m[0m[2m,[0m
 byteOffset[0m[2m:[0m [0m[33m20[0m[0m[2m,[0m

[0m      [2mat [0m[0m[1m[3mprepare[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m307[0m[2m:[33m37[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mquery[0m[2m ([0m[0m[36mbun:sqlite[0m[2m:[0m[33m329[0m[2m:[33m28[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mgetMetrics[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m392[0m[2m:[33m38[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mgetMetrics[0m[2m ([0m[0m[36m/workspace/banana-bun/src/scheduler/task-scheduler.ts[0m[2m:[0m[33m379[0m[2m:[33m51[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/periodic-tasks.test.ts[0m[2m:[0m[33m246[0m[2m:[33m45[0m[2m)[0m
[0m[31m✗[0m [0mPeriodic Tasks System[2m > [0mTaskScheduler[2m >[0m[1m should get scheduler metrics[0m [0m[2m[5.47ms[0m[2m][0m
[0m[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mMigration[2m >[0m[1m should verify migration was successful[0m [0m[2m[0.51ms[0m[2m][0m
[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mMigration[2m >[0m[1m should have created required tables[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mMigration[2m >[0m[1m should have added columns to tasks table[0m [0m[2m[0.20ms[0m[2m][0m
[0m[32m✓[0m [0mPeriodic Tasks System[2m > [0mSchedule Execution Logic[2m >[0m[1m should handle overlap policies correctly[0m [0m[2m[0.44ms[0m[2m][0m
[0m
test/content-quality-server.test.ts:
[0m[32m✓[0m [0mContent Quality Server[2m > [0mTool Registration[2m >[0m[1m should register all required tools[0m [0m[2m[2.76ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mTool Registration[2m >[0m[1m should register correct tool names[0m [0m[2m[0.46ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mQuality Assessment Functions[2m > [0mResolution Quality Scoring[2m >[0m[1m should calculate resolution scores correctly[0m [0m[2m[0.08ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mQuality Assessment Functions[2m > [0mAudio Quality Scoring[2m >[0m[1m should calculate audio scores correctly[0m [0m[2m[0.07ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mQuality Assessment Functions[2m > [0mMetadata Completeness[2m >[0m[1m should calculate metadata completeness correctly[0m [0m[2m[0.15ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0manalyze_content_quality[2m >[0m[1m should analyze quality for existing media item[0m [0m[2m[0.27ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0manalyze_content_quality[2m >[0m[1m should handle non-existent media items[0m [0m[2m[0.11ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0manalyze_content_quality[2m >[0m[1m should identify quality issues[0m [0m[2m[0.19ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0msuggest_quality_enhancements[2m >[0m[1m should suggest appropriate enhancements[0m [0m[2m[0.18ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0msuggest_quality_enhancements[2m >[0m[1m should handle different target quality levels[0m [0m[2m[0.13ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mtrack_quality_improvements[2m >[0m[1m should track improvements over time[0m [0m[2m[0.17ms[0m[2m][0m
[0m[1m332 |[0m 
[0m[1m333 |[0m             [0m[35mif[0m (mockData.tagged_percentage [0m<[0m [0m[33m0.8[0m) {
[0m[1m334 |[0m                 areas[0m[3m[1m.push[0m([0m[32m'Metadata completeness - improve tagging and descriptions'[0m)[0m[2m;[0m
[0m[1m335 |[0m             }
[0m[1m336 |[0m 
[0m[1m337 |[0m             expect(areas.length)[0m[3m[1m.toBe[0m([0m[33m2[0m)[0m[2m;[0m [0m[2m// HD and metadata issues[0m
                                       [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32m2[0m
Received: [31m3[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/content-quality-server.test.ts[0m[2m:[0m[33m337[0m[2m:[33m34[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/content-quality-server.test.ts[0m[2m:[0m[33m316[0m[2m:[33m49[0m[2m)[0m
[0m[31m✗[0m [0mContent Quality Server[2m > [0mtrack_quality_improvements[2m >[0m[1m should identify improvement areas[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m[32m✓[0m [0mContent Quality Server[2m > [0mbatch_quality_assessment[2m >[0m[1m should assess multiple items efficiently[0m [0m[2m[0.31ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mbatch_quality_assessment[2m >[0m[1m should prioritize low quality items[0m [0m[2m[0.13ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mgenerate_quality_report[2m >[0m[1m should generate comprehensive quality statistics[0m [0m[2m[0.33ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mgenerate_quality_report[2m >[0m[1m should categorize quality distribution[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[0.16ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mError Handling[2m >[0m[1m should handle missing media files[0m [0m[2m[0.10ms[0m[2m][0m
[0m[32m✓[0m [0mContent Quality Server[2m > [0mPerformance[2m >[0m[1m should handle large datasets efficiently[0m [0m[2m[0.60ms[0m[2m][0m
[0m
test/review-service.integration.test.ts:
[0m[1m128 |[0m                 [0m[32m'No errors reported'[0m
[0m[1m129 |[0m             ][0m[2m;[0m
[0m[1m130 |[0m 
[0m[1m131 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m reviewService[0m[3m[1m.reviewTask[0m([0m[33m1[0m, criteria)[0m[2m;[0m
[0m[1m132 |[0m 
[0m[1m133 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31mfalse[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m133[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mReview Service[2m > [0mTask Review[2m >[0m[1m should review completed task[0m [0m[2m[2.24ms[0m[2m][0m
[0m[0m[32m✓[0m [0mReview Service[2m > [0mTask Review[2m >[0m[1m should handle missing task[0m [0m[2m[0.17ms[0m[2m][0m
[0m[1m156 |[0m                 [0m[32m'type === "shell"'[0m
[0m[1m157 |[0m             ][0m[2m;[0m
[0m[1m158 |[0m 
[0m[1m159 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m reviewService[0m[3m[1m.reviewTask[0m([0m[33m1[0m, criteria)[0m[2m;[0m
[0m[1m160 |[0m 
[0m[1m161 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31mfalse[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m161[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mReview Service[2m > [0mTask Review[2m >[0m[1m should evaluate custom criteria[0m [0m[2m[0.49ms[0m[2m][0m
[0m[0m[1m186 |[0m                 [0m[32m'Contains function definition'[0m
[0m[1m187 |[0m             ][0m[2m;[0m
[0m[1m188 |[0m 
[0m[1m189 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m reviewService[0m[3m[1m.reviewTask[0m([0m[33m1[0m, criteria)[0m[2m;[0m
[0m[1m190 |[0m 
[0m[1m191 |[0m             expect(result.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31mfalse[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m191[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mReview Service[2m > [0mTask Review[2m >[0m[1m should check output file quality[0m [0m[2m[0.87ms[0m[2m][0m
[0m[0m[1m205 |[0m             [0m[32m`);[0m
[0m[1m206 |[0m 
[0m[1m207 |[0m             [0m[35mconst[0m taskIds = [[0m[33m1[0m, [0m[33m2[0m, [0m[33m3[0m][0m[2m;[0m
[0m[1m208 |[0m             [0m[35mconst[0m criteria = [[0m[32m'status === "completed"'[0m][0m[2m;[0m
[0m[1m209 |[0m 
[0m[1m210 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m reviewService[0m[3m[1m.reviewBatch[0m(taskIds, criteria)[0m[2m;[0m
                                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mreviewService.reviewBatch is not a function. (In 'reviewService.reviewBatch(taskIds, criteria)', 'reviewService.reviewBatch' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m210[0m[2m:[33m48[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m197[0m[2m:[33m44[0m[2m)[0m
[0m[31m✗[0m [0mReview Service[2m > [0mBatch Review[2m >[0m[1m should review multiple tasks[0m [0m[2m[0.27ms[0m[2m][0m
[0m[0m[1m226 |[0m                     ([0m[33m1[0m, [0m[32m'shell'[0m, [0m[32m'Task 1'[0m, [0m[32m'completed'[0m),
[0m[1m227 |[0m                     ([0m[33m2[0m, [0m[32m'shell'[0m, [0m[32m'Task 2'[0m, [0m[32m'completed'[0m),
[0m[1m228 |[0m                     ([0m[33m3[0m, [0m[32m'shell'[0m, [0m[32m'Task 3'[0m, [0m[32m'failed'[0m)
[0m[1m229 |[0m             [0m[32m`);[0m
[0m[1m230 |[0m 
[0m[1m231 |[0m             [0m[35mconst[0m result = [0m[35mawait[0m reviewService[0m[3m[1m.generateSummaryReport[0m([[0m[33m1[0m, [0m[33m2[0m, [0m[33m3[0m])[0m[2m;[0m
                                                     [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mreviewService.generateSummaryReport is not a function. (In 'reviewService.generateSummaryReport([1, 2, 3])', 'reviewService.generateSummaryReport' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m231[0m[2m:[33m48[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m222[0m[2m:[33m46[0m[2m)[0m
[0m[31m✗[0m [0mReview Service[2m > [0mBatch Review[2m >[0m[1m should generate summary report[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m[1m250 |[0m # Test the [0m[35mfunction[0m
[0m[1m251 |[0m [0m[35mfor[0m i [0m[35min[0m range([0m[33m10[0m):
[0m[1m252 |[0m print(f[0m[32m"F({i}) = {calculate_fibonacci(i)}"[0m)
[0m[1m253 |[0m [0m[32m`;[0m
[0m[1m254 |[0m 
[0m[1m255 |[0m             [0m[35mconst[0m metrics = [0m[35mawait[0m reviewService[0m[3m[1m.calculateCodeQuality[0m(codeContent, [0m[32m'python'[0m)[0m[2m;[0m
                                                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mreviewService.calculateCodeQuality is not a function. (In 'reviewService.calculateCodeQuality(`
def calculate_fibonacci(n):
if n <= 1:
    return n
return calculate_fibonacci(n-1) + calculate_fibonacci(n-2)

# Test the function
for i in range(10):
print(f"F({i}) = {calculate_fibonacci(i)}")
`, "python")', 'reviewService.calculateCodeQuality' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m255[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m243[0m[2m:[33m53[0m[2m)[0m
[0m[31m✗[0m [0mReview Service[2m > [0mQuality Metrics[2m >[0m[1m should calculate code quality metrics[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m[1m275 |[0m 
[0m[1m276 |[0m tar -czf [0m[32m"$BACKUP_DIR/backup_$(date +%Y%m%d).tar.gz"[0m [0m[32m"$SOURCE_DIR"[0m
[0m[1m277 |[0m echo [0m[32m"Backup completed successfully"[0m
[0m[1m278 |[0m [0m[32m`;[0m
[0m[1m279 |[0m 
[0m[1m280 |[0m             [0m[35mconst[0m metrics = [0m[35mawait[0m reviewService[0m[3m[1m.calculateCodeQuality[0m(shellContent, [0m[32m'shell'[0m)[0m[2m;[0m
                                                      [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mreviewService.calculateCodeQuality is not a function. (In 'reviewService.calculateCodeQuality(`#!/bin/bash
# Backup script with error handling

set -e  # Exit on error

BACKUP_DIR="/backup"
SOURCE_DIR="/data"

if [ ! -d "$BACKUP_DIR" ]; then
mkdir -p "$BACKUP_DIR"
fi

tar -czf "$BACKUP_DIR/backup_$(date +%Y%m%d).tar.gz" "$SOURCE_DIR"
echo "Backup completed successfully"
`, "shell")', 'reviewService.calculateCodeQuality' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m280[0m[2m:[33m49[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m263[0m[2m:[33m51[0m[2m)[0m
[0m[31m✗[0m [0mReview Service[2m > [0mQuality Metrics[2m >[0m[1m should analyze shell script quality[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[1m291 |[0m                 INSERT INTO tasks (id, [0m[34mtype[0m, [0m[1m[34mdescription[0m, status, started_at, finished_at)
[0m[1m292 |[0m                 VALUES ([0m[33m1[0m, [0m[32m'shell'[0m, [0m[32m'Performance test'[0m, [0m[32m'completed'[0m,
[0m[1m293 |[0m                        datetime([0m[32m'now'[0m, [0m[32m'-5 minutes'[0m), datetime([0m[32m'now'[0m))
[0m[1m294 |[0m             [0m[32m`);[0m
[0m[1m295 |[0m 
[0m[1m296 |[0m             [0m[35mconst[0m analysis = [0m[35mawait[0m reviewService[0m[3m[1m.analyzePerformance[0m([0m[33m1[0m)[0m[2m;[0m
                                                       [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mreviewService.analyzePerformance is not a function. (In 'reviewService.analyzePerformance(1)', 'reviewService.analyzePerformance' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m296[0m[2m:[33m50[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m289[0m[2m:[33m57[0m[2m)[0m
[0m[31m✗[0m [0mReview Service[2m > [0mPerformance Analysis[2m >[0m[1m should analyze task execution performance[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m[1m308 |[0m                     ([0m[32m'shell'[0m, [0m[32m'Similar task 1'[0m, [0m[32m'completed'[0m, datetime([0m[32m'now'[0m, [0m[32m'-10 minutes'[0m), datetime([0m[32m'now'[0m, [0m[32m'-8 minutes'[0m)),
[0m[1m309 |[0m                     ([0m[32m'shell'[0m, [0m[32m'Similar task 2'[0m, [0m[32m'completed'[0m, datetime([0m[32m'now'[0m, [0m[32m'-15 minutes'[0m), datetime([0m[32m'now'[0m, [0m[32m'-12 minutes'[0m)),
[0m[1m310 |[0m                     ([0m[32m'shell'[0m, [0m[32m'Test task'[0m, [0m[32m'completed'[0m, datetime([0m[32m'now'[0m, [0m[32m'-5 minutes'[0m), datetime([0m[32m'now'[0m))
[0m[1m311 |[0m             [0m[32m`);[0m
[0m[1m312 |[0m 
[0m[1m313 |[0m             [0m[35mconst[0m comparison = [0m[35mawait[0m reviewService[0m[3m[1m.comparePerformance[0m([0m[32m'shell'[0m, [0m[32m'Test task'[0m)[0m[2m;[0m
                                                         [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mreviewService.comparePerformance is not a function. (In 'reviewService.comparePerformance("shell", "Test task")', 'reviewService.comparePerformance' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m313[0m[2m:[33m52[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/review-service.integration.test.ts[0m[2m:[0m[33m303[0m[2m:[33m61[0m[2m)[0m
[0m[31m✗[0m [0mReview Service[2m > [0mPerformance Analysis[2m >[0m[1m should compare performance against benchmarks[0m [0m[2m[0.24ms[0m[2m][0m
[0m[0m
test/analytics-logger.test.ts:
[0m[1m45 |[0m 
[0m[1m46 |[0m describe([0m[32m'AnalyticsLogger basic operations'[0m, () => {
[0m[1m47 |[0m   it([0m[32m'logs task start'[0m, [0m[35masync[0m () => {
[0m[1m48 |[0m     db[0m[3m[1m.run[0m([0m[32m"INSERT INTO tasks (id, type, status) VALUES (1, 'llm', 'pending')"[0m)[0m[2m;[0m
[0m[1m49 |[0m     [0m[35mconst[0m task = { id: [0m[33m1[0m, [0m[34mtype[0m: [0m[32m'llm'[0m, description: [0m[32m'Test'[0m, status: [0m[32m'pending'[0m }[0m[2m;[0m
[0m[1m50 |[0m     [0m[35mawait[0m analyticsLogger[0m[3m[1m.logTaskStart[0m(task)[0m[2m;[0m
                               [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1manalyticsLogger.logTaskStart is not a function. (In 'analyticsLogger.logTaskStart(task)', 'analyticsLogger.logTaskStart' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m50[0m[2m:[33m27[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m47[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mAnalyticsLogger basic operations[2m >[0m[1m logs task start[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m[1m62 |[0m   })[0m[2m;[0m
[0m[1m63 |[0m 
[0m[1m64 |[0m   it([0m[32m'logs task completion'[0m, [0m[35masync[0m () => {
[0m[1m65 |[0m     db[0m[3m[1m.run[0m([0m[32m"INSERT INTO tasks (id, type, status) VALUES (2, 'llm', 'pending')"[0m)[0m[2m;[0m
[0m[1m66 |[0m     [0m[35mconst[0m task = { id: [0m[33m2[0m, [0m[34mtype[0m: [0m[32m'llm'[0m, description: [0m[32m'Complete'[0m, status: [0m[32m'pending'[0m }[0m[2m;[0m
[0m[1m67 |[0m     [0m[35mawait[0m analyticsLogger[0m[3m[1m.logTaskStart[0m(task)[0m[2m;[0m
                               [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1manalyticsLogger.logTaskStart is not a function. (In 'analyticsLogger.logTaskStart(task)', 'analyticsLogger.logTaskStart' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m67[0m[2m:[33m27[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m64[0m[2m:[33m30[0m[2m)[0m
[0m[31m✗[0m [0mAnalyticsLogger basic operations[2m >[0m[1m logs task completion[0m [0m[2m[0.29ms[0m[2m][0m
[0m[0m[1m81 |[0m   })[0m[2m;[0m
[0m[1m82 |[0m 
[0m[1m83 |[0m   it([0m[32m'logs task error and retry'[0m, [0m[35masync[0m () => {
[0m[1m84 |[0m     db[0m[3m[1m.run[0m([0m[32m"INSERT INTO tasks (id, type, status) VALUES (3, 'shell', 'pending')"[0m)[0m[2m;[0m
[0m[1m85 |[0m     [0m[35mconst[0m task = { id: [0m[33m3[0m, [0m[34mtype[0m: [0m[32m'shell'[0m, description: [0m[32m'Err'[0m, status: [0m[32m'pending'[0m }[0m[2m;[0m
[0m[1m86 |[0m     [0m[35mawait[0m analyticsLogger[0m[3m[1m.logTaskStart[0m(task)[0m[2m;[0m
                               [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1manalyticsLogger.logTaskStart is not a function. (In 'analyticsLogger.logTaskStart(task)', 'analyticsLogger.logTaskStart' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m86[0m[2m:[33m27[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m83[0m[2m:[33m35[0m[2m)[0m
[0m[31m✗[0m [0mAnalyticsLogger basic operations[2m >[0m[1m logs task error and retry[0m [0m[2m[0.24ms[0m[2m][0m
[0m[0m[1m105 |[0m describe([0m[32m'AnalyticsLogger analytics functions'[0m, () => {
[0m[1m106 |[0m   it([0m[32m'computes task analytics'[0m, [0m[35masync[0m () => {
[0m[1m107 |[0m     [0m[35mfor[0m ([0m[35mlet[0m i = [0m[33m1[0m[0m[2m;[0m i [0m<[0m= [0m[33m3[0m[0m[2m;[0m i++) {
[0m[1m108 |[0m       db[0m[3m[1m.run[0m([0m[32m`INSERT INTO tasks (id, type, status) VALUES ([0m${i + [0m[33m10[0m}[0m[32m, 'shell', 'pending')`[0m)[0m[2m;[0m
[0m[1m109 |[0m       [0m[35mconst[0m t = { id: i + [0m[33m10[0m, [0m[34mtype[0m: [0m[32m'shell'[0m, description: [0m[32m'ok'[0m, status: [0m[32m'pending'[0m }[0m[2m;[0m
[0m[1m110 |[0m       [0m[35mawait[0m analyticsLogger[0m[3m[1m.logTaskStart[0m(t)[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1manalyticsLogger.logTaskStart is not a function. (In 'analyticsLogger.logTaskStart(t)', 'analyticsLogger.logTaskStart' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m110[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m106[0m[2m:[33m33[0m[2m)[0m
[0m[31m✗[0m [0mAnalyticsLogger analytics functions[2m >[0m[1m computes task analytics[0m [0m[2m[0.33ms[0m[2m][0m
[0m[0m[1m128 |[0m 
[0m[1m129 |[0m   it([0m[32m'detects bottlenecks'[0m, [0m[35masync[0m () => {
[0m[1m130 |[0m     [0m[35mfor[0m ([0m[35mlet[0m i = [0m[33m1[0m[0m[2m;[0m i [0m<[0m= [0m[33m3[0m[0m[2m;[0m i++) {
[0m[1m131 |[0m       db[0m[3m[1m.run[0m([0m[32m`INSERT INTO tasks (id, type, status) VALUES ([0m${[0m[33m30[0m + i}[0m[32m, 'shell', 'pending')`[0m)[0m[2m;[0m
[0m[1m132 |[0m       [0m[35mconst[0m t = { id: [0m[33m30[0m + i, [0m[34mtype[0m: [0m[32m'shell'[0m, description: [0m[32m'slow'[0m, status: [0m[32m'pending'[0m }[0m[2m;[0m
[0m[1m133 |[0m       [0m[35mawait[0m analyticsLogger[0m[3m[1m.logTaskStart[0m(t)[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1manalyticsLogger.logTaskStart is not a function. (In 'analyticsLogger.logTaskStart(t)', 'analyticsLogger.logTaskStart' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m133[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m129[0m[2m:[33m29[0m[2m)[0m
[0m[31m✗[0m [0mAnalyticsLogger analytics functions[2m >[0m[1m detects bottlenecks[0m [0m[2m[0.27ms[0m[2m][0m
[0m[0m[1m142 |[0m   })[0m[2m;[0m
[0m[1m143 |[0m 
[0m[1m144 |[0m   it([0m[32m'cleans old logs'[0m, [0m[35masync[0m () => {
[0m[1m145 |[0m     db[0m[3m[1m.run[0m([0m[32m"INSERT INTO tasks (id, type, status) VALUES (99, 'shell', 'pending')"[0m)[0m[2m;[0m
[0m[1m146 |[0m     db[0m[3m[1m.run[0m([0m[32m`INSERT INTO task_logs (task_id, task_type, status, duration_ms, retries, created_at) VALUES (99, 'shell', 'completed', 10, 0, datetime('now','-40 day'))`[0m)[0m[2m;[0m
[0m[1m147 |[0m     [0m[35mconst[0m deleted = [0m[35mawait[0m analyticsLogger[0m[3m[1m.cleanupOldLogs[0m([0m[33m30[0m)[0m[2m;[0m
                                                [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1manalyticsLogger.cleanupOldLogs is not a function. (In 'analyticsLogger.cleanupOldLogs(30)', 'analyticsLogger.cleanupOldLogs' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m147[0m[2m:[33m43[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m144[0m[2m:[33m25[0m[2m)[0m
[0m[31m✗[0m [0mAnalyticsLogger analytics functions[2m >[0m[1m cleans old logs[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[1m155 |[0m   it([0m[32m'handles database errors gracefully'[0m, [0m[35masync[0m () => {
[0m[1m156 |[0m     mockGetDatabase[0m[3m[1m.mockImplementationOnce[0m(() => {
[0m[1m157 |[0m       [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'fail'[0m)[0m[2m;[0m
[0m[1m158 |[0m     })[0m[2m;[0m
[0m[1m159 |[0m     [0m[35mconst[0m task = { id: [0m[33m50[0m, [0m[34mtype[0m: [0m[32m'llm'[0m, description: [0m[32m'x'[0m, status: [0m[32m'pending'[0m }[0m[2m;[0m
[0m[1m160 |[0m     [0m[35mawait[0m expect(analyticsLogger[0m[3m[1m.logTaskStart[0m(task)).resolves[0m[3m[1m.toBeUndefined[0m()[0m[2m;[0m
                                       [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1manalyticsLogger.logTaskStart is not a function. (In 'analyticsLogger.logTaskStart(task)', 'analyticsLogger.logTaskStart' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m160[0m[2m:[33m34[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m155[0m[2m:[33m44[0m[2m)[0m
[0m[31m✗[0m [0mAnalyticsLogger edge cases[2m >[0m[1m handles database errors gracefully[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[1m162 |[0m 
[0m[1m163 |[0m   it([0m[32m'recommends optimization for frequent slow tasks'[0m, [0m[35masync[0m () => {
[0m[1m164 |[0m     [0m[35mfor[0m ([0m[35mlet[0m i = [0m[33m1[0m[0m[2m;[0m i [0m<[0m= [0m[33m11[0m[0m[2m;[0m i++) {
[0m[1m165 |[0m       db[0m[3m[1m.run[0m([0m[32m`INSERT INTO tasks (id, type, status) VALUES ([0m${[0m[33m200[0m + i}[0m[32m, 'llm', 'pending')`[0m)[0m[2m;[0m
[0m[1m166 |[0m       [0m[35mconst[0m t = { id: [0m[33m200[0m + i, [0m[34mtype[0m: [0m[32m'llm'[0m, description: [0m[32m'slow'[0m, status: [0m[32m'pending'[0m }[0m[2m;[0m
[0m[1m167 |[0m       [0m[35mawait[0m analyticsLogger[0m[3m[1m.logTaskStart[0m(t)[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1manalyticsLogger.logTaskStart is not a function. (In 'analyticsLogger.logTaskStart(t)', 'analyticsLogger.logTaskStart' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m167[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/analytics-logger.test.ts[0m[2m:[0m[33m163[0m[2m:[33m57[0m[2m)[0m
[0m[31m✗[0m [0mAnalyticsLogger edge cases[2m >[0m[1m recommends optimization for frequent slow tasks[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m
test/metadata-optimization-server.test.ts:
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mTool Registration[2m >[0m[1m should register all required tools[0m [0m[2m[2.23ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0manalyze_metadata_quality[2m >[0m[1m should analyze metadata quality for all items[0m [0m[2m[0.40ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0manalyze_metadata_quality[2m >[0m[1m should handle collection filtering[0m [0m[2m[0.12ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0manalyze_metadata_quality[2m >[0m[1m should calculate completeness scores correctly[0m [0m[2m[0.27ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0moptimize_metadata[2m >[0m[1m should identify items needing optimization[0m [0m[2m[0.11ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0moptimize_metadata[2m >[0m[1m should handle batch size limits[0m [0m[2m[0.10ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0moptimize_metadata[2m >[0m[1m should support dry run mode[0m [0m[2m[0.14ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mget_metadata_recommendations[2m >[0m[1m should generate recommendations for specific media item[0m [0m[2m[0.18ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mget_metadata_recommendations[2m >[0m[1m should handle non-existent media items[0m [0m[2m[0.11ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mtrack_metadata_improvements[2m >[0m[1m should track improvements over time[0m [0m[2m[0.15ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mvalidate_metadata_consistency[2m >[0m[1m should detect duplicate titles[0m [0m[2m[0.13ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mvalidate_metadata_consistency[2m >[0m[1m should detect inconsistent tag formats[0m [0m[2m[0.12ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mvalidate_metadata_consistency[2m >[0m[1m should support auto-fix mode[0m [0m[2m[0.18ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[0.16ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mError Handling[2m >[0m[1m should handle invalid tool names[0m [0m[2m[0.51ms[0m[2m][0m
[0m[32m✓[0m [0mMetadata Optimization Server[2m > [0mPerformance[2m >[0m[1m should handle large datasets efficiently[0m [0m[2m[0.53ms[0m[2m][0m
[0m
test/file-processing.test.ts:
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[2m-------------------------------[0m

[0m
test/mcp-client.test.ts:
[0m[1m56 |[0m                         }) + [0m[32m'\n'[0m))[0m[2m;[0m
[0m[1m57 |[0m                     }, [0m[33m10[0m)[0m[2m;[0m
[0m[1m58 |[0m                 }
[0m[1m59 |[0m             })[0m[2m;[0m
[0m[1m60 |[0m 
[0m[1m61 |[0m             [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m([0m[32m'test-server'[0m, [0m[32m'bun'[0m, [[0m[32m'test-script.ts'[0m])[0m[2m;[0m
                                 [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("test-server", "bun", ["test-script.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m61[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m45[0m[2m:[33m47[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mServer Management[2m >[0m[1m should start MCP server process[0m [0m[2m[0.32ms[0m[2m][0m
[0m[0m[1m71 |[0m             mockSpawn[0m[3m[1m.mockImplementation[0m(() => {
[0m[1m72 |[0m                 [0m[35mthrow[0m [0m[35mnew[0m [0m[1mError[0m([0m[32m'Failed to spawn process'[0m)[0m[2m;[0m
[0m[1m73 |[0m             })[0m[2m;[0m
[0m[1m74 |[0m 
[0m[1m75 |[0m             [0m[35mawait[0m expect(
[0m[1m76 |[0m                 mcpClient[0m[3m[1m.startServer[0m([0m[32m'test-server'[0m, [0m[32m'bun'[0m, [[0m[32m'test-script.ts'[0m])
                               [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("test-server", "bun", ["test-script.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m76[0m[2m:[33m27[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m69[0m[2m:[33m52[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mServer Management[2m >[0m[1m should handle server startup failure[0m [0m[2m[0.16ms[0m[2m][0m
[0m[0m[1m78 |[0m         })[0m[2m;[0m
[0m[1m79 |[0m 
[0m[1m80 |[0m         it([0m[32m'should stop MCP server process'[0m, [0m[35masync[0m () => {
[0m[1m81 |[0m             [0m[2m// Start server first[0m
[0m[1m82 |[0m             mockSpawn[0m[3m[1m.mockReturnValue[0m(mockProcess)[0m[2m;[0m
[0m[1m83 |[0m             [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m([0m[32m'test-server'[0m, [0m[32m'bun'[0m, [[0m[32m'test-script.ts'[0m])[0m[2m;[0m
                                 [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("test-server", "bun", ["test-script.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m83[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m80[0m[2m:[33m46[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mServer Management[2m >[0m[1m should stop MCP server process[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[1m103 |[0m                         }) + [0m[32m'\n'[0m))[0m[2m;[0m
[0m[1m104 |[0m                     }, [0m[33m10[0m)[0m[2m;[0m
[0m[1m105 |[0m                 }
[0m[1m106 |[0m             })[0m[2m;[0m
[0m[1m107 |[0m 
[0m[1m108 |[0m             [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m([0m[32m'test-server'[0m, [0m[32m'bun'[0m, [[0m[32m'test-script.ts'[0m])[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("test-server", "bun", ["test-script.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m108[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m93[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should send tool request successfully[0m [0m[2m[[0m[33m107725.78ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should send tool request successfully[0m
[0m[0m[1m103 |[0m                         }) + [0m[32m'\n'[0m))[0m[2m;[0m
[0m[1m104 |[0m                     }, [0m[33m10[0m)[0m[2m;[0m
[0m[1m105 |[0m                 }
[0m[1m106 |[0m             })[0m[2m;[0m
[0m[1m107 |[0m 
[0m[1m108 |[0m             [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m([0m[32m'test-server'[0m, [0m[32m'bun'[0m, [[0m[32m'test-script.ts'[0m])[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("test-server", "bun", ["test-script.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m108[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m93[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should handle tool request timeout[0m [0m[2m[[0m[33m107725.83ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should handle tool request timeout[0m
[0m[0m[1m103 |[0m                         }) + [0m[32m'\n'[0m))[0m[2m;[0m
[0m[1m104 |[0m                     }, [0m[33m10[0m)[0m[2m;[0m
[0m[1m105 |[0m                 }
[0m[1m106 |[0m             })[0m[2m;[0m
[0m[1m107 |[0m 
[0m[1m108 |[0m             [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m([0m[32m'test-server'[0m, [0m[32m'bun'[0m, [[0m[32m'test-script.ts'[0m])[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("test-server", "bun", ["test-script.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m108[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m93[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should handle server error response[0m [0m[2m[[0m[33m107725.87ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m >[0m[1m K  andle server error response[0m
[0m[0m[1m173 |[0m     })[0m[2m;[0m
[0m[1m174 |[0m 
[0m[1m175 |[0m     describe([0m[32m'High-level API Methods'[0m, () => {
[0m[1m176 |[0m         beforeEach([0m[35masync[0m () => {
[0m[1m177 |[0m             mockSpawn[0m[3m[1m.mockReturnValue[0m(mockProcess)[0m[2m;[0m
[0m[1m178 |[0m             [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m([0m[32m'meilisearch'[0m, [0m[32m'bun'[0m, [[0m[32m'meilisearch-server.ts'[0m])[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("meilisearch", "bun", ["meilisearch-server.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m178[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m176[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mHigh-level API Methods[2m >[0m[1m should perform smart search[0m [0m[2m[[0m[33m107725.97ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mHigh-level API Methods[2m >[0m[1m should perform smart search[0m
[0m[0m[1m173 |[0m     })[0m[2m;[0m
[0m[1m174 |[0m 
[0m[1m175 |[0m     describe([0m[32m'High-level API Methods'[0m, () => {
[0m[1m176 |[0m         beforeEach([0m[35masync[0m () => {
[0m[1m177 |[0m             mockSpawn[0m[3m[1m.mockReturnValue[0m(mockProcess)[0m[2m;[0m
[0m[1m178 |[0m             [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m([0m[32m'meilisearch'[0m, [0m[32m'bun'[0m, [[0m[32m'meilisearch-server.ts'[0m])[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("meilisearch", "bun", ["meilisearch-server.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m178[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m176[0m[2m:[33m20[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mHigh-level API Methods[2m >[0m[1m should handle search errors gracefully[0m [0m[2m[[0m[33m107726.03ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m >[0m[1m K  andle search errors gracefully[0m
[0m[0m[1m226 |[0m     })[0m[2m;[0m
[0m[1m227 |[0m 
[0m[1m228 |[0m     describe([0m[32m'Error Handling'[0m, () => {
[0m[1m229 |[0m         it([0m[32m'should handle malformed JSON responses'[0m, [0m[35masync[0m () => {
[0m[1m230 |[0m             mockSpawn[0m[3m[1m.mockReturnValue[0m(mockProcess)[0m[2m;[0m
[0m[1m231 |[0m             [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m([0m[32m'test-server'[0m, [0m[32m'bun'[0m, [[0m[32m'test-script.ts'[0m])[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("test-server", "bun", ["test-script.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m231[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m229[0m[2m:[33m54[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mError Handling[2m >[0m[1m should handle malformed JSON responses[0m [0m[2m[0.14ms[0m[2m][0m
[0m[0m[1m255 |[0m                         callback(Buffer[0m[3m[1m.from[0m([0m[32m'Error: Something went wrong\n'[0m))[0m[2m;[0m
[0m[1m256 |[0m                     }, [0m[33m10[0m)[0m[2m;[0m
[0m[1m257 |[0m                 }
[0m[1m258 |[0m             })[0m[2m;[0m
[0m[1m259 |[0m 
[0m[1m260 |[0m             [0m[35mawait[0m mcpClient[0m[3m[1m.startServer[0m([0m[32m'test-server'[0m, [0m[32m'bun'[0m, [[0m[32m'test-script.ts'[0m])[0m[2m;[0m
                                  [31m[1m^[0m
[0m[31mTypeError[0m[2m:[0m [1mmcpClient.startServer is not a function. (In 'mcpClient.startServer("test-server", "bun", ["test-script.ts"])', 'mcpClient.startServer' is undefined)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m260[0m[2m:[33m29[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/mcp-client.test.ts[0m[2m:[0m[33m249[0m[2m:[33m51[0m[2m)[0m
[0m[31m✗[0m [0mMCP Client[2m > [0mError Handling[2m >[0m[1m should handle process stderr output[0m [0m[2m[0.21ms[0m[2m][0m
[0m[0m
test/dashboard.test.ts:
[0m[32m✓[0m [0mDashboard Generation[2m > [0mDashboard HTML Generation[2m >[0m[1m should generate dashboard HTML file[0m [0m[2m[4.38ms[0m[2m][0m
[0m[32m✓[0m [0mDashboard Generation[2m > [0mDashboard HTML Generation[2m >[0m[1m should include task statistics in dashboard[0m [0m[2m[1.84ms[0m[2m][0m
[0m[32m✓[0m [0mDashboard Generation[2m > [0mDashboard HTML Generation[2m >[0m[1m should handle empty task list[0m [0m[2m[0.73ms[0m[2m][0m
[0m[32m✓[0m [0mDashboard Generation[2m > [0mDashboard HTML Generation[2m >[0m[1m should include task type breakdown[0m [0m[2m[2.12ms[0m[2m][0m
[0m[32m✓[0m [0mDashboard Generation[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mDashboard Generation[2m > [0mError Handling[2m >[0m[1m should handle file system errors gracefully[0m [0m[2m[0.57ms[0m[2m][0m
[0m[32m✓[0m [0mDashboard Generation[2m > [0mDashboard Content Validation[2m >[0m[1m should generate valid HTML structure[0m [0m[2m[1.27ms[0m[2m][0m
[0m[32m✓[0m [0mDashboard Generation[2m > [0mDashboard Content Validation[2m >[0m[1m should escape HTML in task descriptions[0m [0m[2m[1.45ms[0m[2m][0m
[0m
test/tool-runner.basic.test.ts:
[0m[32m✓[0m [0mToolRunner Basic Tools[2m >[0m[1m reads files using read_file[0m [0m[2m[0.47ms[0m[2m][0m
[0m[32m✓[0m [0mToolRunner Basic Tools[2m >[0m[1m writes files using write_file[0m [0m[2m[0.46ms[0m[2m][0m
[0m[32m✓[0m [0mToolRunner Basic Tools[2m >[0m[1m throws for unknown tool[0m [0m[2m[0.76ms[0m[2m][0m
[0m
test/resource-optimizer-service.test.ts:
[0m[32m✓[0m [0mResourceOptimizerService helpers[2m >[0m[1m isResourceIntensive detects keywords[0m [0m[2m[0.22ms[0m[2m][0m
[0m[32m✓[0m [0mResourceOptimizerService helpers[2m >[0m[1m calculateAverageUtilization averages metrics[0m [0m[2m[0.12ms[0m[2m][0m
[0m[32m✓[0m [0mResourceOptimizerService helpers[2m >[0m[1m calculatePeakLoad finds highest utilization[0m [0m[2m[0.14ms[0m[2m][0m
[0m[32m✓[0m [0mResourceOptimizerService helpers[2m >[0m[1m countScheduleConflicts detects duplicate cron expressions[0m [0m[2m[0.22ms[0m[2m][0m
[0m[32m✓[0m [0mResourceOptimizerService helpers[2m >[0m[1m calculatePredictionConfidence blends scheduled and predictive[0m [0m[2m[0.10ms[0m[2m][0m
[0m[32m✓[0m [0mResourceOptimizerService helpers[2m >[0m[1m shouldUseLLM respects config and input[0m [0m[2m[0.14ms[0m[2m][0m
[0m[32m✓[0m [0mResourceOptimizerService strategies[2m >[0m[1m applyLoadBalancing updates timestamp when peaks detected[0m [0m[2m[0.42ms[0m[2m][0m
[0m[32m✓[0m [0mResourceOptimizerService strategies[2m >[0m[1m applyResourceOptimization optimizes intensive rules[0m [0m[2m[0.41ms[0m[2m][0m
[0m[32m✓[0m [0mResourceOptimizerService strategies[2m >[0m[1m applyPeakMitigation staggers during peaks[0m [0m[2m[0.30ms[0m[2m][0m
[0m
test/type-guards.test.ts:
[0m[32m✓[0m [0mType Guards[2m > [0misBaseTask[2m >[0m[1m should return true for valid base task[0m [0m[2m[0.19ms[0m[2m][0m
[0m[32m✓[0m [0mType Guards[2m > [0misBaseTask[2m >[0m[1m should return false for invalid objects[0m [0m[2m[0.05ms[0m[2m][0m
[0m[1m59 |[0m                 status: [0m[32m'pending'[0m,
[0m[1m60 |[0m                 [0m[2m// missing shell_command[0m
[0m[1m61 |[0m             }[0m[2m;[0m
[0m[1m62 |[0m 
[0m[1m63 |[0m             expect(isShellTask(validShellTask))[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
[0m[1m64 |[0m             expect(isShellTask(invalidShellTask))[0m[3m[1m.toBe[0m([0m[33mfalse[0m)[0m[2m;[0m
                                                       [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mfalse[0m
Received: [31mtrue[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/type-guards.test.ts[0m[2m:[0m[33m64[0m[2m:[33m51[0m[2m)[0m
[0m[31m✗[0m [0mType Guards[2m > [0mSpecific Type Guards[2m >[0m[1m should validate ShellTask correctly[0m [0m[2m[0.45ms[0m[2m][0m
[0m[0m[1m79 |[0m                 status: [0m[32m'pending'[0m,
[0m[1m80 |[0m                 [0m[2m// missing description[0m
[0m[1m81 |[0m             }[0m[2m;[0m
[0m[1m82 |[0m 
[0m[1m83 |[0m             expect(isLlmTask(validLlmTask))[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
[0m[1m84 |[0m             expect(isLlmTask(invalidLlmTask))[0m[3m[1m.toBe[0m([0m[33mfalse[0m)[0m[2m;[0m
                                                   [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mfalse[0m
Received: [31mtrue[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/type-guards.test.ts[0m[2m:[0m[33m84[0m[2m:[33m47[0m[2m)[0m
[0m[31m✗[0m [0mType Guards[2m > [0mSpecific Type Guards[2m >[0m[1m should validate LlmTask correctly[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m[1m100 |[0m                 status: [0m[32m'pending'[0m,
[0m[1m101 |[0m                 [0m[2m// missing tool and args[0m
[0m[1m102 |[0m             }[0m[2m;[0m
[0m[1m103 |[0m 
[0m[1m104 |[0m             expect(isToolTask(validToolTask))[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
[0m[1m105 |[0m             expect(isToolTask(invalidToolTask))[0m[3m[1m.toBe[0m([0m[33mfalse[0m)[0m[2m;[0m
                                                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mfalse[0m
Received: [31mtrue[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/type-guards.test.ts[0m[2m:[0m[33m105[0m[2m:[33m49[0m[2m)[0m
[0m[31m✗[0m [0mType Guards[2m > [0mSpecific Type Guards[2m >[0m[1m should validate ToolTask correctly[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m[32m✓[0m [0mType Guards[2m > [0misTaskOfType[2m >[0m[1m should correctly identify task types[0m [0m[2m[0.20ms[0m[2m][0m
[0m[32m✓[0m [0mType Guards[2m > [0mgetTaskType[2m >[0m[1m should return correct task type[0m [0m[2m[0.08ms[0m[2m][0m
[0m[32m✓[0m [0mType Guards[2m > [0massertTaskType[2m >[0m[1m should not throw for correct type[0m [0m[2m[0.12ms[0m[2m][0m
[0m[1m165 |[0m                 [0m[34mtype[0m: [0m[32m'shell'[0m,
[0m[1m166 |[0m                 status: [0m[32m'pending'[0m
[0m[1m167 |[0m                 [0m[2m// missing shell_command[0m
[0m[1m168 |[0m             }[0m[2m;[0m
[0m[1m169 |[0m 
[0m[1m170 |[0m             expect(() => assertTaskType(invalidTask, [0m[32m'shell'[0m))[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                                     [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoThrow[2m([0m[2m)[0m

Received function did not throw
Received value: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/type-guards.test.ts[0m[2m:[0m[33m170[0m[2m:[33m64[0m[2m)[0m
[0m[31m✗[0m [0mType Guards[2m > [0massertTaskType[2m >[0m[1m should throw for incorrect type[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[32m✓[0m [0mType Guards[2m > [0mTaskTypeGuards mapping[2m >[0m[1m should have guards for all task types[0m [0m[2m[0.08ms[0m[2m][0m
[0m[32m✓[0m [0mType Guards[2m > [0misTaskOfTypeGeneric[2m >[0m[1m should work with the mapping[0m [0m[2m[0.08ms[0m[2m][0m
[0m[1m220 |[0m             [0m[35mconst[0m invalidResult = validateTaskStructure(invalidTask)[0m[2m;[0m
[0m[1m221 |[0m 
[0m[1m222 |[0m             expect(validResult.valid)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
[0m[1m223 |[0m             expect(validResult.errors)[0m[3m[1m.toHaveLength[0m([0m[33m0[0m)[0m[2m;[0m
[0m[1m224 |[0m 
[0m[1m225 |[0m             expect(invalidResult.valid)[0m[3m[1m.toBe[0m([0m[33mfalse[0m)[0m[2m;[0m
                                              [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mfalse[0m
Received: [31mtrue[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/type-guards.test.ts[0m[2m:[0m[33m225[0m[2m:[33m41[0m[2m)[0m
[0m[31m✗[0m [0mType Guards[2m > [0mvalidateTaskStructure[2m >[0m[1m should return validation results[0m [0m[2m[0.24ms[0m[2m][0m
[0m[0m[32m✓[0m [0mType Guards[2m > [0msafeParseTask[2m >[0m[1m should return success for valid task[0m [0m[2m[0.21ms[0m[2m][0m
[0m[32m✓[0m [0mType Guards[2m > [0msafeParseTask[2m >[0m[1m should return errors for invalid task[0m [0m[2m[0.05ms[0m[2m][0m
[0m
test/validation.test.ts:
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mBase Task Validation[2m >[0m[1m should validate valid base task[0m [0m[2m[1.05ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mBase Task Validation[2m >[0m[1m should reject task without required fields[0m [0m[2m[0.22ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mBase Task Validation[2m >[0m[1m should validate task status values[0m [0m[2m[0.27ms[0m[2m][0m
[0m[1m73 |[0m                         id: [0m[33m1[0m,
[0m[1m74 |[0m                         [0m[34mtype[0m: [0m[34mtype[0m [0m[34mas[0m [0m[34many[0m,
[0m[1m75 |[0m                         description: [0m[32m'Test task'[0m,
[0m[1m76 |[0m                         status: [0m[32m'pending'[0m
[0m[1m77 |[0m                     })[0m[2m;[0m
[0m[1m78 |[0m                     expect(() => validateTaskSchema(task)).not[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                                    [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mnot[2m.[0mtoThrow[2m([0m[2m)[0m

Error name: [31m"Error"[0m
Error message: [31m"Task validation failed: batch task must have either a non-empty tasks array or a generator object"[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m78[0m[2m:[33m64[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mforEach[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m71[0m[2m:[33m28[0m[2m)[0m
[0m[31m✗[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mBase Task Validation[2m >[0m[1m should validate task types[0m [0m[2m[0.64ms[0m[2m][0m
[0m[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mShell Task Validation[2m >[0m[1m should validate valid shell task[0m [0m[2m[0.10ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mShell Task Validation[2m >[0m[1m should allow shell tasks without shell_command for creation[0m [0m[2m[0.13ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mShell Task Validation[2m >[0m[1m should reject empty shell commands when provided[0m [0m[2m[0.07ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mLLM Task Validation[2m >[0m[1m should validate valid LLM task[0m [0m[2m[0.11ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mLLM Task Validation[2m >[0m[1m should validate LLM task with optional fields[0m [0m[2m[0.15ms[0m[2m][0m
[0m[1m171 |[0m                         [0m[34mtype[0m: [0m[32m'llm'[0m,
[0m[1m172 |[0m                         description: [0m[32m'Test task'[0m,
[0m[1m173 |[0m                         status: [0m[32m'pending'[0m,
[0m[1m174 |[0m                         temperature: temp
[0m[1m175 |[0m                     }[0m[2m;[0m
[0m[1m176 |[0m                     expect(() => validateTaskSchema(task))[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                                 [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoThrow[2m([0m[2m)[0m

Received function did not throw
Received value: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m176[0m[2m:[33m60[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mforEach[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m168[0m[2m:[33m37[0m[2m)[0m
[0m[31m✗[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mLLM Task Validation[2m >[0m[1m should validate temperature range[0m [0m[2m[0.29ms[0m[2m][0m
[0m[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mCode Task Validation[2m >[0m[1m should validate valid code task[0m [0m[2m[0.09ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mCode Task Validation[2m >[0m[1m should validate code task with language specification[0m [0m[2m[0.10ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mCode Task Validation[2m >[0m[1m should validate supported programming languages[0m [0m[2m[0.19ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mDependencies Validation[2m >[0m[1m should validate task dependencies format[0m [0m[2m[0.12ms[0m[2m][0m
[0m[1m246 |[0m                         [0m[34mtype[0m: [0m[32m'shell'[0m,
[0m[1m247 |[0m                         description: [0m[32m'Task with invalid deps'[0m,
[0m[1m248 |[0m                         status: [0m[32m'pending'[0m,
[0m[1m249 |[0m                         dependencies: deps [0m[34mas[0m [0m[34many[0m
[0m[1m250 |[0m                     }[0m[2m;[0m
[0m[1m251 |[0m                     expect(() => validateTaskSchema(task))[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                                 [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoThrow[2m([0m[2m)[0m

Received function did not throw
Received value: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m251[0m[2m:[33m60[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mforEach[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m243[0m[2m:[33m37[0m[2m)[0m
[0m[31m✗[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mDependencies Validation[2m >[0m[1m should reject invalid dependency formats[0m [0m[2m[0.22ms[0m[2m][0m
[0m[0m[1m261 |[0m                 description: [0m[32m'Test shell task'[0m,
[0m[1m262 |[0m                 status: [0m[32m'pending'[0m,
[0m[1m263 |[0m                 shell_command: [0m[32m'echo "test"'[0m
[0m[1m264 |[0m             })[0m[2m;[0m
[0m[1m265 |[0m 
[0m[1m266 |[0m             expect(() => validateTaskFile(validJsonContent, [0m[32m'json'[0m)).not[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                                               [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mnot[2m.[0mtoThrow[2m([0m[2m)[0m

Error name: [31m"Error"[0m
Error message: [31m"Task validation failed: id must be a string or number"[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m266[0m[2m:[33m74[0m[2m)[0m
[0m[31m✗[0m [0mValidation System[2m > [0mTask File Validation[2m >[0m[1m should validate JSON task file content[0m [0m[2m[0.31ms[0m[2m][0m
[0m[0m[1m272 |[0m description: Generate a story
[0m[1m273 |[0m status: pending
[0m[1m274 |[0m context: Write a short story about AI
[0m[1m275 |[0m [0m[32m`;[0m
[0m[1m276 |[0m 
[0m[1m277 |[0m             expect(() => validateTaskFile(validYamlContent, [0m[32m'yaml'[0m)).not[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                                               [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mnot[2m.[0mtoThrow[2m([0m[2m)[0m

Error name: [31m"Error"[0m
Error message: [31m"Failed to parse YAML content: JSON Parse error: Unexpected identifier \"type\""[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m277[0m[2m:[33m74[0m[2m)[0m
[0m[31m✗[0m [0mValidation System[2m > [0mTask File Validation[2m >[0m[1m should validate YAML task file content[0m [0m[2m[0.15ms[0m[2m][0m
[0m[0m[32m✓[0m [0mValidation System[2m > [0mTask File Validation[2m >[0m[1m should reject malformed JSON[0m [0m[2m[0.05ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask File Validation[2m >[0m[1m should reject malformed YAML[0m [0m[2m[0.09ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mTask File Validation[2m >[0m[1m should validate task content after parsing[0m [0m[2m[0.11ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mBatch Validation[2m >[0m[1m should validate multiple tasks at once[0m [0m[2m[0.17ms[0m[2m][0m
[0m[32m✓[0m [0mValidation System[2m > [0mBatch Validation[2m >[0m[1m should identify invalid tasks in batch[0m [0m[2m[0.11ms[0m[2m][0m
[0m[1m374 |[0m                 [0m[34mtype[0m: [0m[32m'shell'[0m,
[0m[1m375 |[0m                 description: validDescription,
[0m[1m376 |[0m                 status: [0m[32m'pending'[0m
[0m[1m377 |[0m             }[0m[2m;[0m
[0m[1m378 |[0m 
[0m[1m379 |[0m             expect(() => validateTaskSchema(taskWithShortDesc))[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                                      [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoThrow[2m([0m[2m)[0m

Received function did not throw
Received value: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m379[0m[2m:[33m65[0m[2m)[0m
[0m[31m✗[0m [0mValidation System[2m > [0mCustom Validation Rules[2m >[0m[1m should validate task description length[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m[1m400 |[0m                     id: id [0m[34mas[0m [0m[34many[0m,
[0m[1m401 |[0m                     [0m[34mtype[0m: [0m[32m'shell'[0m,
[0m[1m402 |[0m                     description: [0m[32m'Test task'[0m,
[0m[1m403 |[0m                     status: [0m[32m'pending'[0m
[0m[1m404 |[0m                 }[0m[2m;[0m
[0m[1m405 |[0m                 expect(() => validateTaskSchema(task))[0m[3m[1m.toThrow[0m()[0m[2m;[0m
                                                             [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoThrow[2m([0m[2m)[0m

Received function did not throw
Received value: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m405[0m[2m:[33m56[0m[2m)[0m
[0m      [2mat [0m[0m[1m[3mforEach[0m[2m ([0m[0m[36m[0m[33m1[0m[2m:[33m11[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/validation.test.ts[0m[2m:[0m[33m398[0m[2m:[33m24[0m[2m)[0m
[0m[31m✗[0m [0mValidation System[2m > [0mCustom Validation Rules[2m >[0m[1m should validate task ID format[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m
test/services.integration.test.ts:
[0m[1m115 |[0m         [0m[35mconst[0m planResult = [0m[35mawait[0m plannerService[0m[3m[1m.decomposeGoal[0m(
[0m[1m116 |[0m             [0m[32m'Create and test a simple script'[0m,
[0m[1m117 |[0m             { language: [0m[32m'python'[0m }
[0m[1m118 |[0m         )[0m[2m;[0m
[0m[1m119 |[0m 
[0m[1m120 |[0m         expect(planResult.success)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1m[2mexpect([0m[31mreceived[0m[2m).[0mtoBe[2m([0m[32mexpected[0m[2m)[0m

Expected: [32mtrue[0m
Received: [31mundefined[0m
[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/services.integration.test.ts[0m[2m:[0m[33m120[0m[2m:[33m36[0m[2m)[0m
[0m[31m✗[0m [0mService Integration[2m >[0m[1m should integrate planner and review services[0m [0m[2m[0.41ms[0m[2m][0m
[0m[0m[32m✓[0m [0mService Integration[2m >[0m[1m should handle service errors gracefully[0m [0m[2m[1.05ms[0m[2m][0m
[0m
test/main-orchestrator.test.ts:
[31merror[0m[2m: [0m[1mCannot find package 'meilisearch' from '/workspace/banana-bun/src/services/meilisearch-service.ts'[0m
[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mSystem Initialization[2m >[0m[1m should initialize all components in correct order[0m [0m[2m[2.91ms[0m[2m][0m
[0m[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mSystem Initialization[2m >[0m[1m should create required directories[0m [0m[2m[0.63ms[0m[2m][0m
[0m[1m209 |[0m                 expect(exists)[0m[3m[1m.toBe[0m([0m[33mtrue[0m)[0m[2m;[0m
[0m[1m210 |[0m             }
[0m[1m211 |[0m         })[0m[2m;[0m
[0m[1m212 |[0m 
[0m[1m213 |[0m         it([0m[32m'should handle initialization errors gracefully'[0m, [0m[35masync[0m () => {
[0m[1m214 |[0m             mockInitDatabase[0m[3m[1m.mockRejectedValueOnce[0m([0m[35mnew[0m [0m[1mError[0m([0m[32m'Database init failed'[0m))[0m[2m;[0m
                                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase init failed[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/main-orchestrator.test.ts[0m[2m:[0m[33m214[0m[2m:[33m52[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/main-orchestrator.test.ts[0m[2m:[0m[33m213[0m[2m:[33m62[0m[2m)[0m
[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mSystem Initialization[2m >[0m[1m should handle initialization errors gracefully[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mFile Processing[2m >[0m[1m should process new task files[0m [0m[2m[1.21ms[0m[2m][0m
[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mFile Processing[2m >[0m[1m should handle malformed task files[0m [0m[2m[0.26ms[0m[2m][0m
[0m
[1m[2m#[0m [31m[1mUnhandled error[0m[2m between tests[0m
[2m-------------------------------[0m
[0m[1m247 |[0m 
[0m[1m248 |[0m         it([0m[32m'should handle malformed task files'[0m, [0m[35masync[0m () => {
[0m[1m249 |[0m             [0m[35mconst[0m testFile = [0m[32m`[0m${mockConfig.paths.incoming}[0m[32m/bad-task.json`[0m[0m[2m;[0m
[0m[1m250 |[0m             [0m[35mawait[0m fs[0m[3m[1m.writeFile[0m(testFile, [0m[32m'invalid json content'[0m)[0m[2m;[0m
[0m[1m251 |[0m 
[0m[1m252 |[0m             mockParseTaskFile[0m[3m[1m.mockRejectedValueOnce[0m([0m[35mnew[0m [0m[1mError[0m([0m[32m'Invalid JSON'[0m))[0m[2m;[0m
                                                          [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mInvalid JSON[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/main-orchestrator.test.ts[0m[2m:[0m[33m252[0m[2m:[33m53[0m[2m)[0m
[0m[2m-------------------------------[0m

[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mFile Processing[2m >[0m[1m should move processed files to archive[0m [0m[2m[0.22ms[0m[2m][0m
[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mTask Orchestration[2m >[0m[1m should process pending tasks[0m [0m[2m[0.29ms[0m[2m][0m
[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mTask Orchestration[2m >[0m[1m should handle task dependencies[0m [0m[2m[0.22ms[0m[2m][0m
[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mTask Orchestration[2m >[0m[1m should retry failed tasks[0m [0m[2m[0.08ms[0m[2m][0m
[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mDashboard Generation[2m >[0m[1m should generate dashboard periodically[0m [0m[2m[0.06ms[0m[2m][0m
[0m[1m319 |[0m             [0m[2m// Test dashboard generation[0m
[0m[1m320 |[0m             expect(mockGenerateDashboard)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
[0m[1m321 |[0m         })[0m[2m;[0m
[0m[1m322 |[0m 
[0m[1m323 |[0m         it([0m[32m'should handle dashboard generation errors'[0m, [0m[35masync[0m () => {
[0m[1m324 |[0m             mockGenerateDashboard[0m[3m[1m.mockRejectedValueOnce[0m([0m[35mnew[0m [0m[1mError[0m([0m[32m'Dashboard error'[0m))[0m[2m;[0m
                                                              [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDashboard error[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/main-orchestrator.test.ts[0m[2m:[0m[33m324[0m[2m:[33m57[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/main-orchestrator.test.ts[0m[2m:[0m[33m323[0m[2m:[33m57[0m[2m)[0m
[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mDashboard Generation[2m >[0m[1m should handle dashboard generation errors[0m [0m[2m[0.35ms[0m[2m][0m
[0m[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mMCP Integration[2m >[0m[1m should initialize MCP enhanced task processor[0m [0m[2m[0.11ms[0m[2m][0m
[0m[1m332 |[0m         it([0m[32m'should initialize MCP enhanced task processor'[0m, [0m[35masync[0m () => {
[0m[1m333 |[0m             expect(mockEnhancedTaskProcessor.initialize)[0m[3m[1m.toBeDefined[0m()[0m[2m;[0m
[0m[1m334 |[0m         })[0m[2m;[0m
[0m[1m335 |[0m 
[0m[1m336 |[0m         it([0m[32m'should handle MCP initialization failures'[0m, [0m[35masync[0m () => {
[0m[1m337 |[0m             mockEnhancedTaskProcessor.initialize[0m[3m[1m.mockRejectedValueOnce[0m([0m[35mnew[0m [0m[1mError[0m([0m[32m'MCP init failed'[0m))[0m[2m;[0m
                                                                             [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mMCP init failed[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/main-orchestrator.test.ts[0m[2m:[0m[33m337[0m[2m:[33m72[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/main-orchestrator.test.ts[0m[2m:[0m[33m336[0m[2m:[33m57[0m[2m)[0m
[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mMCP Integration[2m >[0m[1m should handle MCP initialization failures[0m [0m[2m[0.16ms[0m[2m][0m
[0m[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mMCP Integration[2m >[0m[1m should provide live dashboard info[0m [0m[2m[0.07ms[0m[2m][0m
[0m[1m347 |[0m         })[0m[2m;[0m
[0m[1m348 |[0m     })[0m[2m;[0m
[0m[1m349 |[0m 
[0m[1m350 |[0m     describe([0m[32m'Error Handling'[0m, () => {
[0m[1m351 |[0m         it([0m[32m'should handle database connection errors'[0m, [0m[35masync[0m () => {
[0m[1m352 |[0m             mockInitDatabase[0m[3m[1m.mockRejectedValueOnce[0m([0m[35mnew[0m [0m[1mError[0m([0m[32m'Database connection failed'[0m))[0m[2m;[0m
                                                         [31m[1m^[0m
[0m[31merror[0m[2m:[0m [1mDatabase connection failed[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/main-orchestrator.test.ts[0m[2m:[0m[33m352[0m[2m:[33m52[0m[2m)[0m
[0m      [2mat [0m[0m[2m<anonymous>[0m[2m ([0m[0m[36m/workspace/banana-bun/test/main-orchestrator.test.ts[0m[2m:[0m[33m351[0m[2m:[33m56[0m[2m)[0m
[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mError Handling[2m >[0m[1m should handle database connection errors[0m [0m[2m[0.15ms[0m[2m][0m
[0m[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mError Handling[2m >[0m[1m should handle file system errors[0m [0m[2m[0.25ms[0m[2m][0m
[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mGraceful Shutdown[2m >[0m[1m should handle SIGINT signal[0m [0m[2m[0.13ms[0m[2m][0m
[0m[32m✓[0m [0mMain Orchestrator (src/index.ts)[2m > [0mGraceful Shutdown[2m >[0m[1m should handle SIGTERM signal[0m [0m[2m[0.13ms[0m[2m][0m

[0m[2m289 tests failed:[0m
[0m[31m✗[0m [0mUser Behavior Server[2m > [0mTool Execution[2m >[0m[1m should analyze session patterns[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m[31m✗[0m [0mUser Behavior Server[2m > [0midentify_engagement_opportunities[2m >[0m[1m should calculate engagement metrics[0m [0m[2m[0.31ms[0m[2m][0m
[0m[0m[31m✗[0m [0mUser Behavior Server[2m > [0mtrack_behavior_changes[2m >[0m[1m should compare baseline and recent periods[0m [0m[2m[0.34ms[0m[2m][0m
[0m[0m[31m✗[0m [0mUser Behavior Server[2m > [0mPrivacy and Data Handling[2m >[0m[1m should handle data retention policies[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[31m✗[0m [0mUser Behavior Server[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[0.16ms[0m[2m][0m
[0m[0m[31m✗[0m [0mUser Behavior Server[2m > [0mPerformance[2m >[0m[1m should handle large interaction datasets efficiently[0m [0m[2m[2.27ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMedia Executor[2m > [0mexecuteMediaIngestTask[2m >[0m[1m should process file when force flag is set[0m [0m[2m[1.02ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mCron Expression Parsing[2m >[0m[1m should parse valid cron expressions[0m [0m[2m[0.21ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mCron Expression Parsing[2m >[0m[1m should calculate next execution time correctly[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mCron Expression Parsing[2m >[0m[1m should handle timezone considerations[0m [0m[2m[0.06ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mSpecial Cron Expressions[2m >[0m[1m should handle @yearly, @monthly, @weekly, @daily shortcuts[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mCronParser[2m > [0mSpecial Cron Expressions[2m >[0m[1m should convert shortcuts to standard cron format[0m [0m[2m[0.05ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Creation[2m >[0m[1m should create a new schedule for a task[0m [0m[2m[[1m12.16ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Creation[2m >[0m[1m should set next execution time when creating schedule[0m [0m[2m[5.04ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Creation[2m >[0m[1m should handle schedule options[0m [0m[2m[0.54ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should enable and disable schedules[0m [0m[2m[[0m[33m106166.57ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should enable and disable schedules[0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should delete schedules[0m [0m[2m[[0m[33m106172.43ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should delete schedules[0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Management[2m >[0m[1m should update schedule cron expression[0m [0m[2m[[0m[33m106178.25ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m >[0m[1m `K  pdate schedule cron expression[0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Execution[2m >[0m[1m should identify due schedules[0m [0m[2m[0.41ms[0m[2m][0m
[0m[0m[31m✗[0m [0mScheduler System[2m > [0mTaskScheduler[2m > [0mSchedule Execution[2m >[0m[1m should handle overlap policies[0m [0m[2m[0.35ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mTool Execution[2m >[0m[1m should execute shell commands[0m [0m[2m[0.55ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mTool Execution[2m >[0m[1m should log tool execution[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mTool Execution[2m >[0m[1m should handle tool execution errors[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mshell tool[2m >[0m[1m should execute shell commands[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mshell tool[2m >[0m[1m should handle command errors[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_read tool[2m >[0m[1m should read files[0m [0m[2m[0.30ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_read tool[2m >[0m[1m should handle missing files[0m [0m[2m[0.15ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_write tool[2m >[0m[1m should write files[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_write tool[2m >[0m[1m should create directories if needed[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_list tool[2m >[0m[1m should list directory contents[0m [0m[2m[0.42ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mfile_list tool[2m >[0m[1m should handle empty directories[0m [0m[2m[0.34ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIndividual Tools[2m > [0mrun_script tool[2m >[0m[1m should execute scripts[0m [0m[2m[0.50ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mError Handling[2m >[0m[1m should handle file system errors[0m [0m[2m[0.14ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mError Handling[2m >[0m[1m should handle invalid tool arguments[0m [0m[2m[0.13ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mError Handling[2m >[0m[1m should handle spawn errors[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mTool Registration[2m >[0m[1m should have all expected tools registered[0m [0m[2m[1.11ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mTool Registration[2m >[0m[1m should validate tool function signatures[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIntegration[2m >[0m[1m should handle complex workflow[0m [0m[2m[0.34ms[0m[2m][0m
[0m[0m[31m✗[0m [0mToolRunner[2m > [0mIntegration[2m >[0m[1m should maintain tool execution logs[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should initialize database with required tables[0m [0m[2m[[0m[33m106233.85ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should initialize database with required tables[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should create proper indexes[0m [0m[2m[[0m[33m106234.02ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should create proper indexes[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDatabase Initialization[2m >[0m[1m should have proper tasks table schema[0m [0m[2m[[0m[33m106234.08ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m @K  ave proper tasks table schema[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should insert and retrieve tasks[0m [0m[2m[[0m[33m106234.16ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should insert and retrieve tasks[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should update task status[0m [0m[2m[[0m[33m106234.25ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should update task status[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should handle task completion[0m [0m[2m[[0m[33m106234.29ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should handle task completion[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should handle task errors[0m [0m[2m[[0m[33m106234.40ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should handle task errors[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTask CRUD Operations[2m >[0m[1m should query tasks by status[0m [0m[2m[[0m[33m106234.54ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m  K  uery tasks by status[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should add and retrieve dependencies[0m [0m[2m[[0m[33m106234.63ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should add and retrieve dependencies[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should get task dependents[0m [0m[2m[[0m[33m106234.71ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should get task dependents[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should resolve dependencies with task details[0m [0m[2m[[0m[33m106234.84ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should resolve dependencies with task details[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - all completed[0m [0m[2m[[0m[33m106234.91ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - all completed[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - some pending[0m [0m[2m[[0m[33m106234.99ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - some pending[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - error case[0m [0m[2m[[0m[33m106235.04ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should check if dependencies are met - error case[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should handle no dependencies[0m [0m[2m[[0m[33m106235.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should handle no dependencies[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mDependency Helper Operations[2m >[0m[1m should remove dependencies[0m [0m[2m[[0m[33m106235.19ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m K  emove dependencies[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mMedia Table Operations[2m >[0m[1m should insert and retrieve media records[0m [0m[2m[[0m[33m106235.28ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mMedia Table Operations[2m >[0m[1m should insert and retrieve media records[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mMedia Table Operations[2m >[0m[1m should handle duplicate video_id constraint[0m [0m[2m[[0m[33m106235.33ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m  K  andle duplicate video_id constraint[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should query tasks with their dependencies[0m [0m[2m[[0m[33m106235.38ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should query tasks with their dependencies[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should query parent-child relationships[0m [0m[2m[[0m[33m106235.42ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should query parent-child relationships[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mComplex Queries[2m >[0m[1m should count tasks by status[0m [0m[2m[[0m[33m106235.90ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m K  ount tasks by status[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTransaction Handling[2m >[0m[1m should handle successful transactions[0m [0m[2m[[0m[33m106235.99ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTransaction Handling[2m >[0m[1m should handle successful transactions[0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m > [0mTransaction Handling[2m >[0m[1m should handle transaction rollback[0m [0m[2m[[0m[33m106236.06ms[0m[2m][0m
[0m[0m[31m✗[0m [0mDatabase Operations[2m >[0m[1m K  andle transaction rollback[0m
[0m[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Decomposition[2m >[0m[1m should decompose complex goal into subtasks[0m [0m[2m[0.75ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Decomposition[2m >[0m[1m should validate generated tasks[0m [0m[2m[0.31ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Optimization[2m >[0m[1m should optimize task sequence for dependencies[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Optimization[2m >[0m[1m should detect circular dependencies[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlanner Service[2m > [0mTask Optimization[2m >[0m[1m should suggest parallel execution opportunities[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlanner Service[2m > [0mPlan Persistence[2m >[0m[1m should save plan to database[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlanner Service[2m > [0mPlan Persistence[2m >[0m[1m should load existing plan[0m [0m[2m[0.21ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlannerService[2m > [0mGoal Decomposition[2m >[0m[1m should decompose a simple goal into tasks[0m [0m[2m[0.38ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlannerService[2m > [0mGoal Decomposition[2m >[0m[1m should handle goal decomposition with context[0m [0m[2m[0.31ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlannerService[2m > [0mGoal Decomposition[2m >[0m[1m should store planning results in database[0m [0m[2m[0.29ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlannerService[2m > [0mMetrics Calculation[2m >[0m[1m should calculate basic planner metrics[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlannerService[2m > [0mMetrics Calculation[2m >[0m[1m should calculate success rates by context[0m [0m[2m[0.14ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlannerService[2m > [0mBadge Generation[2m >[0m[1m should generate planning efficiency badge[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlannerService[2m > [0mBadge Generation[2m >[0m[1m should use different colors for different efficiency levels[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlannerService[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPlannerService[2m > [0mError Handling[2m >[0m[1m should handle empty goals[0m [0m[2m[0.23ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPattern Analysis Server[2m > [0manalyze_usage_patterns[2m >[0m[1m should detect task sequence patterns[0m [0m[2m[0.65ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mPath Configuration[2m >[0m[1m should have all required paths defined[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mPath Configuration[2m >[0m[1m should have chroma configuration[0m [0m[2m[0.08ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mPath Configuration[2m >[0m[1m should construct paths relative to base path[0m [0m[2m[0.06ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mOpenAI Configuration[2m >[0m[1m should have openai configuration[0m [0m[2m[0.05ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mOpenAI Configuration[2m >[0m[1m should use environment variable for API key[0m [0m[2m[0.04ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mOpenAI Configuration[2m >[0m[1m should default to empty string when no API key is set[0m [0m[2m[0.06ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mOllama Configuration[2m >[0m[1m should have ollama configuration with defaults[0m [0m[2m[0.09ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mOllama Configuration[2m >[0m[1m should use environment variables when provided[0m [0m[2m[0.07ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mConfiguration Validation[2m >[0m[1m should have all required configuration sections[0m [0m[2m[0.14ms[0m[2m][0m
[0m[0m[31m✗[0m [0mConfiguration Management[2m > [0mConfiguration Validation[2m >[0m[1m should have valid types for all configuration values[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should review completed task successfully[0m [0m[2m[[0m[33m106489.72ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should review completed task successfully[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should handle missing task[0m [0m[2m[[0m[33m106490.69ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should handle missing task[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should evaluate custom criteria correctly[0m [0m[2m[[0m[33m106491.37ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should evaluate custom criteria correctly[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mTask Review[2m >[0m[1m should check output file quality[0m [0m[2m[[0m[33m106491.93ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m K  heck output file quality[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mBatch Review[2m >[0m[1m should review multiple tasks[0m [0m[2m[[0m[33m106492.56ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mBatch Review[2m >[0m[1m should review multiple tasks[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mBatch Review[2m >[0m[1m should generate summary report[0m [0m[2m[[0m[33m106493.07ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m @K  enerate summary report[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mQuality Metrics[2m >[0m[1m should calculate code quality metrics[0m [0m[2m[[0m[33m106493.62ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mQuality Metrics[2m >[0m[1m should calculate code quality metrics[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mQuality Metrics[2m >[0m[1m should analyze shell script quality[0m [0m[2m[[0m[33m106494.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m 	K  nalyze shell script quality[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mPerformance Analysis[2m >[0m[1m should analyze task execution performance[0m [0m[2m[[0m[33m106494.62ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mPerformance Analysis[2m >[0m[1m should analyze task execution performance[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mPerformance Analysis[2m >[0m[1m should compare performance against benchmarks[0m [0m[2m[[0m[33m106495.30ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m @	K  ompare performance against benchmarks[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get task review summary[0m [0m[2m[[0m[33m106495.91ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get task review summary[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get task review history[0m [0m[2m[[0m[33m106496.59ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get task review history[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mReview History[2m >[0m[1m should get recent reviews[0m [0m[2m[[0m[33m106497.11ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m K  et recent reviews[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m [0m[2m[[0m[33m106497.73ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle database errors gracefully[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle invalid criteria[0m [0m[2m[[0m[33m106499.19ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle invalid criteria[0m
[0m[0m[31m✗[0m [0mReviewService[2m > [0mError Handling[2m >[0m[1m should handle missing output files[0m [0m[2m[[0m[33m106499.84ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReviewService[2m >[0m[1m K  andle missing output files[0m
[0m[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m parses correlation args[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m parses quality args[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m parses search pattern args[0m [0m[2m[0.13ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m parses track-search args[0m [0m[2m[0.11ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI parseArgs[2m >[0m[1m shows help when requested[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m runs correlation analysis[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m runs quality assessment[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m generates embeddings[0m [0m[2m[0.11ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m analyzes search patterns[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m tracks search behavior[0m [0m[2m[0.11ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCross-Modal CLI actions[2m >[0m[1m shows dashboard with report[0m [0m[2m[0.11ms[0m[2m][0m
[0m[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mTask Processing[2m >[0m[1m should process task with learning capabilities[0m [0m[2m[0.96ms[0m[2m][0m
[0m[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mSystem Metrics[2m >[0m[1m should calculate system metrics[0m [0m[2m[0.79ms[0m[2m][0m
[0m[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mSystem Metrics[2m >[0m[1m should calculate task counts correctly[0m [0m[2m[0.33ms[0m[2m][0m
[0m[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mSystem Metrics[2m >[0m[1m should track websocket connections[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m[31m✗[0m [0mEnhanced Task Processor[2m > [0mShutdown[2m >[0m[1m should handle shutdown errors[0m [0m[2m[1.69ms[0m[2m][0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should generate enhanced learning rules from feedback patterns[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should store enhanced learning rules in database[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should apply rules automatically to media[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should calculate strategy performance[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should filter and rank rules by quality[0m
[0m[0m[31m✗[0m [0mEnhanced Learning Service[2m >[0m[1m should handle cross-modal analysis when enabled[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mInitialization[2m >[0m[1m should initialize MCP servers successfully[0m [0m[2m[1.51ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mInitialization[2m >[0m[1m should handle initialization errors gracefully[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mInitialization[2m >[0m[1m should not initialize twice[0m [0m[2m[0.56ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should process task with ChromaDB integration[0m [0m[2m[[0m[33m106588.86ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should process task with ChromaDB integration[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should handle MCP tool call failures[0m [0m[2m[[0m[33m106589.26ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should handle MCP tool call failures[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Processing with MCP[2m >[0m[1m should process different task types appropriately[0m [0m[2m[[0m[33m106589.61ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m         rocess different task types appropriately[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should complete task and store learning data[0m [0m[2m[[0m[33m106590.02ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should complete task and store learning data[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should handle completion with failure results[0m [0m[2m[[0m[33m106590.40ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should handle completion with failure results[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mTask Completion with MCP[2m >[0m[1m should handle storage errors gracefully[0m [0m[2m[[0m[33m106592.32ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m K  andle storage errors gracefully[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mLive Dashboard Integration[2m >[0m[1m should provide live dashboard information[0m [0m[2m[[0m[33m106592.75ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mLive Dashboard Integration[2m >[0m[1m should provide live dashboard information[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mLive Dashboard Integration[2m >[0m[1m should handle dashboard info errors[0m [0m[2m[[0m[33m106593.09ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m PK  andle dashboard info errors[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mSystem Metrics[2m >[0m[1m should retrieve system metrics[0m [0m[2m[[0m[33m106593.61ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mSystem Metrics[2m >[0m[1m should retrieve system metrics[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mSystem Metrics[2m >[0m[1m should handle metrics retrieval errors[0m [0m[2m[[0m[33m106593.96ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m  K  andle metrics retrieval errors[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mWebhook Notifications[2m >[0m[1m should setup webhook notifications[0m [0m[2m[[0m[33m106594.51ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mWebhook Notifications[2m >[0m[1m should setup webhook notifications[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mWebhook Notifications[2m >[0m[1m should handle webhook setup errors[0m [0m[2m[[0m[33m106594.77ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m >[0m[1m K  andle webhook setup errors[0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mConnection Management[2m >[0m[1m should check connection status[0m [0m[2m[0.09ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mConnection Management[2m >[0m[1m should reconnect on connection loss[0m [0m[2m[0.33ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mShutdown[2m >[0m[1m should shutdown gracefully[0m [0m[2m[0.40ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Manager[2m > [0mShutdown[2m >[0m[1m should handle shutdown errors[0m [0m[2m[0.47ms[0m[2m][0m
[0m[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m generates expected SHA-256 hash for known content[0m [0m[2m[0.55ms[0m[2m][0m
[0m[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m generates different hashes for different content[0m [0m[2m[0.47ms[0m[2m][0m
[0m[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m handles empty files[0m [0m[2m[0.30ms[0m[2m][0m
[0m[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m handles binary files[0m [0m[2m[0.33ms[0m[2m][0m
[0m[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m handles large files[0m [0m[2m[0.30ms[0m[2m][0m
[0m[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m throws error for non-existent files[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[31m✗[0m [0mhashFile utility[2m >[0m[1m handles files with special characters in content[0m [0m[2m[0.37ms[0m[2m][0m
[0m[0m[31m✗[0m [0mFile Validation[2m >[0m[1m rejects non-existent files[0m [0m[2m[0.21ms[0m[2m][0m
[0m[0m[31m✗[0m [0mCLI Tools[2m > [0mSchedule Manager (schedule-manager.ts)[2m >[0m[1m should delete schedules[0m [0m[2m[0.30ms[0m[2m][0m
[0m[0m[31m✗[0m [0mResource Optimization Server[2m > [0manalyze_resource_usage[2m >[0m[1m should calculate optimization score[0m [0m[2m[0.45ms[0m[2m][0m
[0m[0m[31m✗[0m [0mResource Optimization Server[2m > [0moptimize_load_balancing[2m >[0m[1m should support different optimization strategies[0m [0m[2m[0.61ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mMigration Execution[2m >[0m[1m should run all migrations successfully[0m [0m[2m[9.03ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mMigration Execution[2m >[0m[1m should not re-run already applied migrations[0m [0m[2m[5.71ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mMigration Execution[2m >[0m[1m should verify migrations after running[0m [0m[2m[5.49ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mConvenience Functions[2m >[0m[1m should run all migrations via convenience function[0m [0m[2m[5.84ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mConvenience Functions[2m >[0m[1m should verify migrations via convenience function[0m [0m[2m[6.06ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should create task_dependencies table after migration[0m [0m[2m[5.71ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should create retry_history table after migration[0m [0m[2m[5.75ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should create retry_policies table after migration[0m [0m[2m[5.62ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should create task_schedules table after migration[0m [0m[2m[5.76ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should add retry columns to tasks table[0m [0m[2m[5.94ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMigration Runner[2m > [0mDatabase Schema Changes[2m >[0m[1m should add schedule columns to tasks table[0m [0m[2m[5.86ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPeriodic Tasks System[2m > [0mTaskScheduler[2m >[0m[1m should create a schedule for a task[0m [0m[2m[1.23ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPeriodic Tasks System[2m > [0mTaskScheduler[2m >[0m[1m should toggle schedule enabled state[0m [0m[2m[0.98ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPeriodic Tasks System[2m > [0mTaskScheduler[2m >[0m[1m should delete a schedule[0m [0m[2m[0.91ms[0m[2m][0m
[0m[0m[31m✗[0m [0mPeriodic Tasks System[2m > [0mTaskScheduler[2m >[0m[1m should get scheduler metrics[0m [0m[2m[5.47ms[0m[2m][0m
[0m[0m[31m✗[0m [0mContent Quality Server[2m > [0mtrack_quality_improvements[2m >[0m[1m should identify improvement areas[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReview Service[2m > [0mTask Review[2m >[0m[1m should review completed task[0m [0m[2m[2.24ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReview Service[2m > [0mTask Review[2m >[0m[1m should evaluate custom criteria[0m [0m[2m[0.49ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReview Service[2m > [0mTask Review[2m >[0m[1m should check output file quality[0m [0m[2m[0.87ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReview Service[2m > [0mBatch Review[2m >[0m[1m should review multiple tasks[0m [0m[2m[0.27ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReview Service[2m > [0mBatch Review[2m >[0m[1m should generate summary report[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReview Service[2m > [0mQuality Metrics[2m >[0m[1m should calculate code quality metrics[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReview Service[2m > [0mQuality Metrics[2m >[0m[1m should analyze shell script quality[0m [0m[2m[0.17ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReview Service[2m > [0mPerformance Analysis[2m >[0m[1m should analyze task execution performance[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m[31m✗[0m [0mReview Service[2m > [0mPerformance Analysis[2m >[0m[1m should compare performance against benchmarks[0m [0m[2m[0.24ms[0m[2m][0m
[0m[0m[31m✗[0m [0mAnalyticsLogger basic operations[2m >[0m[1m logs task start[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m[31m✗[0m [0mAnalyticsLogger basic operations[2m >[0m[1m logs task completion[0m [0m[2m[0.29ms[0m[2m][0m
[0m[0m[31m✗[0m [0mAnalyticsLogger basic operations[2m >[0m[1m logs task error and retry[0m [0m[2m[0.24ms[0m[2m][0m
[0m[0m[31m✗[0m [0mAnalyticsLogger analytics functions[2m >[0m[1m computes task analytics[0m [0m[2m[0.33ms[0m[2m][0m
[0m[0m[31m✗[0m [0mAnalyticsLogger analytics functions[2m >[0m[1m detects bottlenecks[0m [0m[2m[0.27ms[0m[2m][0m
[0m[0m[31m✗[0m [0mAnalyticsLogger analytics functions[2m >[0m[1m cleans old logs[0m [0m[2m[0.20ms[0m[2m][0m
[0m[0m[31m✗[0m [0mAnalyticsLogger edge cases[2m >[0m[1m handles database errors gracefully[0m [0m[2m[0.19ms[0m[2m][0m
[0m[0m[31m✗[0m [0mAnalyticsLogger edge cases[2m >[0m[1m recommends optimization for frequent slow tasks[0m [0m[2m[0.26ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mServer Management[2m >[0m[1m should start MCP server process[0m [0m[2m[0.32ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mServer Management[2m >[0m[1m should handle server startup failure[0m [0m[2m[0.16ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mServer Management[2m >[0m[1m should stop MCP server process[0m [0m[2m[0.12ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should send tool request successfully[0m [0m[2m[[0m[33m107725.78ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should send tool request successfully[0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should handle tool request timeout[0m [0m[2m[[0m[33m107725.83ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should handle tool request timeout[0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mTool Operations[2m >[0m[1m should handle server error response[0m [0m[2m[[0m[33m107725.87ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m >[0m[1m K  andle server error response[0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mHigh-level API Methods[2m >[0m[1m should perform smart search[0m [0m[2m[[0m[33m107725.97ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mHigh-level API Methods[2m >[0m[1m should perform smart search[0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mHigh-level API Methods[2m >[0m[1m should handle search errors gracefully[0m [0m[2m[[0m[33m107726.03ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m >[0m[1m K  andle search errors gracefully[0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mError Handling[2m >[0m[1m should handle malformed JSON responses[0m [0m[2m[0.14ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMCP Client[2m > [0mError Handling[2m >[0m[1m should handle process stderr output[0m [0m[2m[0.21ms[0m[2m][0m
[0m[0m[31m✗[0m [0mType Guards[2m > [0mSpecific Type Guards[2m >[0m[1m should validate ShellTask correctly[0m [0m[2m[0.45ms[0m[2m][0m
[0m[0m[31m✗[0m [0mType Guards[2m > [0mSpecific Type Guards[2m >[0m[1m should validate LlmTask correctly[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m[31m✗[0m [0mType Guards[2m > [0mSpecific Type Guards[2m >[0m[1m should validate ToolTask correctly[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m[31m✗[0m [0mType Guards[2m > [0massertTaskType[2m >[0m[1m should throw for incorrect type[0m [0m[2m[0.10ms[0m[2m][0m
[0m[0m[31m✗[0m [0mType Guards[2m > [0mvalidateTaskStructure[2m >[0m[1m should return validation results[0m [0m[2m[0.24ms[0m[2m][0m
[0m[0m[31m✗[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mBase Task Validation[2m >[0m[1m should validate task types[0m [0m[2m[0.64ms[0m[2m][0m
[0m[0m[31m✗[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mLLM Task Validation[2m >[0m[1m should validate temperature range[0m [0m[2m[0.29ms[0m[2m][0m
[0m[0m[31m✗[0m [0mValidation System[2m > [0mTask Schema Validation[2m > [0mDependencies Validation[2m >[0m[1m should reject invalid dependency formats[0m [0m[2m[0.22ms[0m[2m][0m
[0m[0m[31m✗[0m [0mValidation System[2m > [0mTask File Validation[2m >[0m[1m should validate JSON task file content[0m [0m[2m[0.31ms[0m[2m][0m
[0m[0m[31m✗[0m [0mValidation System[2m > [0mTask File Validation[2m >[0m[1m should validate YAML task file content[0m [0m[2m[0.15ms[0m[2m][0m
[0m[0m[31m✗[0m [0mValidation System[2m > [0mCustom Validation Rules[2m >[0m[1m should validate task description length[0m [0m[2m[0.18ms[0m[2m][0m
[0m[0m[31m✗[0m [0mValidation System[2m > [0mCustom Validation Rules[2m >[0m[1m should validate task ID format[0m [0m[2m[0.25ms[0m[2m][0m
[0m[0m[31m✗[0m [0mService Integration[2m >[0m[1m should integrate planner and review services[0m [0m[2m[0.41ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mSystem Initialization[2m >[0m[1m should initialize all components in correct order[0m [0m[2m[2.91ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mSystem Initialization[2m >[0m[1m should handle initialization errors gracefully[0m [0m[2m[0.28ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mDashboard Generation[2m >[0m[1m should handle dashboard generation errors[0m [0m[2m[0.35ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mMCP Integration[2m >[0m[1m should handle MCP initialization failures[0m [0m[2m[0.16ms[0m[2m][0m
[0m[0m[31m✗[0m [0mMain Orchestrator (src/index.ts)[2m > [0mError Handling[2m >[0m[1m should handle database connection errors[0m [0m[2m[0.15ms[0m[2m][0m
[0m
[0m[32m 301 pass[0m
[0m[31m 289 fail[0m
 [0m[31m18 errors[0m
 1002 expect() calls
Ran 590 tests across 55 files. [0m[2m[[1m1.79s[0m[2m][0m
[0m[31merror[0m[2m:[0m script [1m"test:coverage"[0m exited with code 1[0m

Script done on 2025-07-01 14:21:07+00:00 [COMMAND_EXIT_CODE="1"]

 289 pass
 288 fail
 109 errors
 970 expect() calls
Ran 577 tests across 52 files. [1.67s]
